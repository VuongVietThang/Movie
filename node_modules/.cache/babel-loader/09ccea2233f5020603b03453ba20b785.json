{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { colorPropType } from '../../props.js';\nvar CTableRow = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      active = _a.active,\n      align = _a.align,\n      className = _a.className,\n      color = _a.color,\n      rest = __rest(_a, [\"children\", \"active\", \"align\", \"className\", \"color\"]);\n\n  return React.createElement(\"tr\", __assign({\n    className: classNames((_b = {}, _b[\"align-\".concat(align)] = align, _b['table-active'] = active, _b[\"table-\".concat(color)] = color, _b), className) || undefined\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCTableRow.propTypes = {\n  active: PropTypes.bool,\n  align: PropTypes.oneOf(['bottom', 'middle', 'top']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType\n};\nCTableRow.displayName = 'CTableRow';\nexport { CTableRow };","map":{"version":3,"mappings":";;;;;IA4BaA,SAAS,GAAGC,UAAU,CACjC,UAACC,EAAD,EAAyDC,GAAzD,EAA4D;;;AAAzD,cAAQ,cAAR;AAAA,MAAUC,MAAM,YAAhB;AAAA,MAAkBC,KAAK,WAAvB;AAAA,MAAyBC,SAAS,eAAlC;AAAA,MAAoCC,KAAK,WAAzC;AAAA,MAA8CC,IAAI,cAApD,qDAAoD,CAAlD;;AACD,SACEC;AACEH,aAAS,EACPI,UAAU,WAENC,GAAC,SAASC,MAAT,CAASP,KAAT,CAAD,IAAoBA,KAFd,EAGNM,qBAAgBP,MAHV,EAINO,GAAC,SAASC,MAAT,CAASL,KAAT,CAAD,IAAoBA,KAJd,EAMRI,EANQ,GAMRL,SANQ,CAAV,IAOKO;AATT,KAWML,IAXN,EAWU;AACRL,OAAG,EAAEA;AADG,GAXV,GAcGW,QAdH,CADF;AAkBD,CApBgC;AAuBnCd,SAAS,CAACe,SAAV,GAAsB;AACpBX,QAAM,EAAEY,SAAS,CAACC,IADE;AAEpBZ,OAAK,EAAEW,SAAS,CAACE,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,KAArB,CAAhB,CAFa;AAGpBJ,UAAQ,EAAEE,SAAS,CAACG,IAHA;AAIpBb,WAAS,EAAEU,SAAS,CAACI,MAJD;AAKpBb,OAAK,EAAEc;AALa,CAAtB;AAQArB,SAAS,CAACsB,WAAV,GAAwB,WAAxB","names":["CTableRow","forwardRef","_a","ref","active","align","className","color","rest","React","classNames","_b","concat","undefined","children","propTypes","PropTypes","bool","oneOf","node","string","colorPropType","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\table\\CTableRow.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CTableRowProps extends HTMLAttributes<HTMLTableRowElement> {\n  /**\n   * Highlight a table row or cell..\n   */\n  active?: boolean\n  /**\n   * Set the vertical aligment.\n   */\n  align?: 'bottom' | 'middle' | 'top' | string\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n}\n\nexport const CTableRow = forwardRef<HTMLTableRowElement, CTableRowProps>(\n  ({ children, active, align, className, color, ...rest }, ref) => {\n    return (\n      <tr\n        className={\n          classNames(\n            {\n              [`align-${align}`]: align,\n              'table-active': active,\n              [`table-${color}`]: color,\n            },\n            className,\n          ) || undefined\n        }\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </tr>\n    )\n  },\n)\n\nCTableRow.propTypes = {\n  active: PropTypes.bool,\n  align: PropTypes.oneOf(['bottom', 'middle', 'top']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n}\n\nCTableRow.displayName = 'CTableRow'\n"]},"metadata":{},"sourceType":"module"}