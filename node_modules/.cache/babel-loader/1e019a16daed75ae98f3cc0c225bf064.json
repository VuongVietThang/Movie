{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport { CCarouselContext } from './CCarouselContext.js';\nvar CCarouselItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      active = _a.active,\n      direction = _a.direction,\n      _b = _a.interval,\n      interval = _b === void 0 ? false : _b,\n      rest = __rest(_a, [\"children\", \"className\", \"active\", \"direction\", \"interval\"]);\n\n  var _c = useContext(CCarouselContext),\n      setAnimating = _c.setAnimating,\n      setCustomInterval = _c.setCustomInterval;\n\n  var carouselItemRef = useRef(null);\n  var forkedRef = useForkedRef(ref, carouselItemRef);\n  var prevActive = useRef(undefined);\n\n  var _d = useState(),\n      directionClassName = _d[0],\n      setDirectionClassName = _d[1];\n\n  var _e = useState(),\n      orderClassName = _e[0],\n      setOrderClassName = _e[1];\n\n  var _f = useState(active && 'active'),\n      activeClassName = _f[0],\n      setActiveClassName = _f[1];\n\n  var _g = useState(0),\n      count = _g[0],\n      setCount = _g[1];\n\n  useEffect(function () {\n    if (active) {\n      setCustomInterval(interval);\n      if (count !== 0) setOrderClassName(\"carousel-item-\".concat(direction));\n    }\n\n    if (prevActive.current && !active) {\n      setActiveClassName('active');\n    }\n\n    if (active || prevActive.current) {\n      setTimeout(function () {\n        var _a;\n\n        if (count !== 0) {\n          // @ts-expect-error reflow is necessary to proper transition\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          (_a = carouselItemRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight;\n          setDirectionClassName(\"carousel-item-\".concat(direction === 'next' ? 'start' : 'end'));\n        }\n      }, 0);\n    }\n\n    prevActive.current = active;\n    if (count === 0) setCount(count + 1);\n  }, [active]);\n  useEffect(function () {\n    var _a, _b;\n\n    (_a = carouselItemRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('transitionstart', function () {\n      active && setAnimating(true);\n    });\n    (_b = carouselItemRef.current) === null || _b === void 0 ? void 0 : _b.addEventListener('transitionend', function () {\n      active && setAnimating(false);\n      setDirectionClassName('');\n      setOrderClassName('');\n\n      if (active) {\n        setActiveClassName('active');\n      }\n\n      if (!active) {\n        setActiveClassName('');\n      }\n    });\n    return function () {\n      var _a, _b;\n\n      (_a = carouselItemRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionstart', function () {\n        active && setAnimating(true);\n      });\n      (_b = carouselItemRef.current) === null || _b === void 0 ? void 0 : _b.removeEventListener('transitionend', function () {\n        active && setAnimating(false);\n        setDirectionClassName('');\n        setOrderClassName('');\n\n        if (active) {\n          setActiveClassName('active');\n        }\n\n        if (!active) {\n          setActiveClassName('');\n        }\n      });\n    };\n  });\n  return React.createElement(\"div\", __assign({\n    className: classNames('carousel-item', activeClassName, directionClassName, orderClassName, className),\n    ref: forkedRef\n  }, rest), children);\n});\nCCarouselItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  direction: PropTypes.string,\n  interval: PropTypes.oneOfType([PropTypes.bool, PropTypes.number])\n};\nCCarouselItem.displayName = 'CCarouselItem';\nexport { CCarouselItem };","map":{"version":3,"mappings":"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","names":["CCarouselItem","forwardRef","_a","ref","className","active","direction","_b","interval","rest","__rest","useContext","CCarouselContext","setAnimating","setCustomInterval","carouselItemRef","useRef","forkedRef","useForkedRef","prevActive","undefined","useState","directionClassName","setDirectionClassName","orderClassName","setOrderClassName","activeClassName","setActiveClassName","count","setCount","useEffect","current","setTimeout","offsetHeight","addEventListener","removeEventListener","React","__assign","classNames","children","propTypes","PropTypes","bool","node","string","oneOfType","number","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\components\\carousel\\CCarouselItem.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useContext, useEffect, useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useForkedRef } from '../../hooks'\n\nimport { CCarouselContext } from './CCarouselContext'\n\nexport interface CCarouselItemProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * @ignore\n   */\n  active?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * @ignore\n   */\n  direction?: string\n  /**\n   * The amount of time to delay between automatically cycling an item.\n   */\n  interval?: boolean | number\n}\n\nexport const CCarouselItem = forwardRef<HTMLDivElement, CCarouselItemProps>(\n  ({ children, className, active, direction, interval = false, ...rest }, ref) => {\n    const { setAnimating, setCustomInterval } = useContext(CCarouselContext)\n    const carouselItemRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, carouselItemRef)\n\n    const prevActive = useRef<boolean>(undefined)\n    const [directionClassName, setDirectionClassName] = useState<string>()\n    const [orderClassName, setOrderClassName] = useState<string>()\n    const [activeClassName, setActiveClassName] = useState(active && 'active')\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n      if (active) {\n        setCustomInterval(interval)\n        if (count !== 0) setOrderClassName(`carousel-item-${direction}`)\n      }\n\n      if (prevActive.current && !active) {\n        setActiveClassName('active')\n      }\n\n      if (active || prevActive.current) {\n        setTimeout(() => {\n          if (count !== 0) {\n            // @ts-expect-error reflow is necessary to proper transition\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const reflow = carouselItemRef.current?.offsetHeight\n            setDirectionClassName(`carousel-item-${direction === 'next' ? 'start' : 'end'}`)\n          }\n        }, 0)\n      }\n\n      prevActive.current = active\n\n      if (count === 0) setCount(count + 1)\n    }, [active])\n\n    useEffect(() => {\n      carouselItemRef.current?.addEventListener('transitionstart', () => {\n        active && setAnimating(true)\n      })\n      carouselItemRef.current?.addEventListener('transitionend', () => {\n        active && setAnimating(false)\n        setDirectionClassName('')\n        setOrderClassName('')\n        if (active) {\n          setActiveClassName('active')\n        }\n        if (!active) {\n          setActiveClassName('')\n        }\n      })\n      return () => {\n        carouselItemRef.current?.removeEventListener('transitionstart', () => {\n          active && setAnimating(true)\n        })\n        carouselItemRef.current?.removeEventListener('transitionend', () => {\n          active && setAnimating(false)\n          setDirectionClassName('')\n          setOrderClassName('')\n          if (active) {\n            setActiveClassName('active')\n          }\n          if (!active) {\n            setActiveClassName('')\n          }\n        })\n      }\n    })\n\n    return (\n      <div\n        className={classNames(\n          'carousel-item',\n          activeClassName,\n          directionClassName,\n          orderClassName,\n          className\n        )}\n        ref={forkedRef}\n        {...rest}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCCarouselItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  direction: PropTypes.string,\n  interval: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n}\n\nCCarouselItem.displayName = 'CCarouselItem'\n"]},"metadata":{},"sourceType":"module"}