{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CFormLabel } from './CFormLabel.js';\nvar CFormRange = forwardRef(function (_a, ref) {\n  var className = _a.className,\n      label = _a.label,\n      rest = __rest(_a, [\"className\", \"label\"]);\n\n  return React.createElement(React.Fragment, null, label && React.createElement(CFormLabel, {\n    htmlFor: rest.id\n  }, label), React.createElement(\"input\", __assign({\n    type: \"range\",\n    className: classNames('form-range', className)\n  }, rest, {\n    ref: ref\n  })));\n});\nCFormRange.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n};\nCFormRange.displayName = 'CFormRange';\nexport { CFormRange };","map":{"version":3,"mappings":";;;;;IAgDaA,UAAU,GAAGC,UAAU,CAClC,UAACC,EAAD,EAAgCC,GAAhC,EAAmC;AAAhC,eAAS,eAAT;AAAA,MAAWC,KAAK,WAAhB;AAAA,MAAqBC,IAAI,GAA3BC,kCAAE;;AACD,SACEC,0CACGH,KAAK,IAAIG,KAAC,cAAD,CAACC,UAAD,EAAY;AAAAC,WAAO,EAAEJ,IAAI,CAACK;AAAd,GAAZ,EAA+BN,KAA/B,CADZ,EAEEG,KAAO,cAAP,CAAO,OAAP,EAAOI;AAAAC,QAAI,EAAC,OAAL;AAAaC,aAAS,EAAEC,UAAU,CAAC,YAAD,EAAeD,SAAf;AAAlC,KAAiER,IAAjE,EAAuE;AAAAF,OAAG,EAAEA;AAAL,GAAvE,CAAP,CAFF,CADF;AAMD,CARiC;AAWpCH,UAAU,CAACe,SAAX,GAAuB;AACrBF,WAAS,EAAEG,SAAS,CAACC,MADA;AAErBb,OAAK,EAAEY,SAAS,CAACE,SAAV,CAAoB,CAACF,SAAS,CAACG,IAAX,EAAiBH,SAAS,CAACC,MAA3B,CAApB;AAFc,CAAvB;AAKAjB,UAAU,CAACoB,WAAX,GAAyB,YAAzB","names":["CFormRange","forwardRef","_a","ref","label","rest","__rest","React","CFormLabel","htmlFor","id","__assign","type","className","classNames","propTypes","PropTypes","string","oneOfType","node","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\form\\CFormRange.tsx"],"sourcesContent":["import React, { ChangeEventHandler, forwardRef, InputHTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormLabel } from './CFormLabel'\nexport interface CFormRangeProps extends InputHTMLAttributes<HTMLInputElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Add a caption for a component.\n   *\n   * @since 4.2.0\n   */\n  label?: ReactNode | string\n  /**\n   * Specifies the maximum value for the component.\n   */\n  max?: number\n  /**\n   * Specifies the minimum value for the component.\n   */\n  min?: number\n  /**\n   * Method called immediately after the `value` prop changes.\n   */\n  onChange?: ChangeEventHandler<HTMLInputElement>\n  /**\n   * Toggle the readonly state for the component.\n   */\n  readOnly?: boolean\n  /**\n   * Specifies the interval between legal numbers in the component.\n   */\n  step?: number\n  /**\n   * The `value` attribute of component.\n   *\n   * @controllable onChange\n   * */\n  value?: string | string[] | number\n}\n\nexport const CFormRange = forwardRef<HTMLInputElement, CFormRangeProps>(\n  ({ className, label, ...rest }, ref) => {\n    return (\n      <>\n        {label && <CFormLabel htmlFor={rest.id}>{label}</CFormLabel>}\n        <input type=\"range\" className={classNames('form-range', className)} {...rest} ref={ref} />\n      </>\n    )\n  },\n)\n\nCFormRange.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n}\n\nCFormRange.displayName = 'CFormRange'\n"]},"metadata":{},"sourceType":"module"}