{"ast":null,"code":"import { useMemo } from 'react'; // code borrowed from https://github.com/reach/reach-ui\n// problem described https://github.com/facebook/react/issues/13029\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction useForkedRef() {\n  var refs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    refs[_i] = arguments[_i];\n  }\n\n  return useMemo(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    return function (node) {\n      refs.forEach(function (ref) {\n        assignRef(ref, node);\n      });\n    };\n  }, refs);\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction assignRef(ref, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (_a) {\n      throw new Error(\"Cannot assign value \\\"\".concat(value, \"\\\" to ref \\\"\").concat(ref, \"\\\"\"));\n    }\n  }\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types\n\n\nfunction isFunction(value) {\n  return !!(value && {}.toString.call(value) == '[object Function]');\n}\n\nexport { assignRef, isFunction, useForkedRef };","map":{"version":3,"mappings":"iCAAA;AACA;AAUA;;SACgBA,eAAY;AAC1B,MAA2DC,SAA3D;;OAAA,IAA2DC,QAA3DA,EAA2D,qBAA3DA,EAA2D;AAA3DD,QAA2D,IAA3D,GAA2DE,aAA3D;;;AAEA,SAAOC,OAAO,CAAC;AACb,QAAIH,IAAI,CAACI,KAAL,CAAW,UAACC,GAAD,EAAI;AAAK,gBAAG,IAAI,IAAP;AAAW,KAA/B,CAAJ,EAAsC;AACpC,aAAO,IAAP;KAFW;;;AAKb,WAAO,UAACC,IAAD,EAAU;AACfN,UAAI,CAACO,OAAL,CAAa,UAACF,GAAD,EAAI;AACfG,iBAAS,CAACH,GAAD,EAAMC,IAAN,CAAT;AACD,OAFD;AAGD,KAJD;AAKD,GAVa,EAUXN,IAVW,CAAd;AAWF,C,CAEA;;;AACM,SAAUQ,SAAV,CACJH,GADI,EAEJ;AACAI,KAHI,EAGM;AAEV,MAAIJ,GAAG,IAAI,IAAX,EAAiB;;AACjB,MAAIK,UAAU,CAACL,GAAD,CAAd,EAAqB;AACnBA,OAAG,CAACI,KAAD,CAAH;GADF,MAEO;AACL,QAAI;AACFJ,SAAG,CAACM,OAAJ,GAAcF,KAAd;KADF,CAEE,WAAM;AACN,YAAM,IAAIG,KAAJ,CAAU,gCAAwBH,KAAxB,EAA0C,cAA1C,EAA0CI,MAA1C,CAA0CR,GAA1C,EAAgD,IAAhD,CAAV,CAAN;;;AAGN,C,CAEA;;;AACM,SAAUK,UAAV,CAAqBD,KAArB,EAA+B;AACnC,SAAO,CAAC,EAAEA,KAAK,IAAI,GAAGK,QAAH,CAAYC,IAAZ,CAAiBN,KAAjB,KAA2B,mBAAtC,CAAR;AACF","names":["useForkedRef","refs","_i","arguments","useMemo","every","ref","node","forEach","assignRef","value","isFunction","current","Error","concat","toString","call"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\hooks\\useForkedRef.ts"],"sourcesContent":["// code borrowed from https://github.com/reach/reach-ui\n// problem described https://github.com/facebook/react/issues/13029\n\nimport { useMemo } from 'react'\n\nexport type AssignableRef<ValueType> =\n  | {\n      bivarianceHack(instance: ValueType | null): void\n    }['bivarianceHack']\n  | React.MutableRefObject<ValueType | null>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useForkedRef<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (node: any) => {\n      refs.forEach((ref) => {\n        assignRef(ref, node)\n      })\n    }\n  }, refs)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n) {\n  if (ref == null) return\n  if (isFunction(ref)) {\n    ref(value)\n  } else {\n    try {\n      ref.current = value\n    } catch {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`)\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types\nexport function isFunction(value: any): value is Function {\n  return !!(value && {}.toString.call(value) == '[object Function]')\n}\n"]},"metadata":{},"sourceType":"module"}