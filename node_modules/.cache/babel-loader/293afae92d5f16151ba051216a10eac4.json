{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CAlertLink = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(CLink, __assign({\n    className: classNames('alert-link', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCAlertLink.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCAlertLink.displayName = 'CAlertLink';\nexport { CAlertLink };","map":{"version":3,"mappings":";;;;;IAaaA,UAAU,GAAGC,UAAU,CAClC,UAACC,EAAD,EAAmCC,GAAnC,EAAsC;AAAnC,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAwBC,IAAI,GAA9BC,qCAAE;;AACD,SACEC,oBAACC,KAAD,EAAMC;AAACL,aAAS,EAAEM,UAAU,CAAC,YAAD,EAAeN,SAAf;AAAtB,KAAqDC,IAArD,EAAyD;AAAEF,OAAG,EAAEA;AAAP,GAAzD,CAAN,EACGQ,QADH,CADF;AAKD,CAPiC;AAUpCX,UAAU,CAACY,SAAX,GAAuB;AACrBD,UAAQ,EAAEE,SAAS,CAACC,IADC;AAErBV,WAAS,EAAES,SAAS,CAACE;AAFA,CAAvB;AAKAf,UAAU,CAACgB,WAAX,GAAyB,YAAzB","names":["CAlertLink","forwardRef","_a","ref","className","rest","__rest","React","CLink","__assign","classNames","children","propTypes","PropTypes","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\alert\\CAlertLink.tsx"],"sourcesContent":["import React, { AnchorHTMLAttributes, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink } from '../link/CLink'\n\nexport interface CAlertLinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CAlertLink = forwardRef<HTMLAnchorElement, CAlertLinkProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <CLink className={classNames('alert-link', className)} {...rest} ref={ref}>\n        {children}\n      </CLink>\n    )\n  },\n)\n\nCAlertLink.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCAlertLink.displayName = 'CAlertLink'\n"]},"metadata":{},"sourceType":"module"}