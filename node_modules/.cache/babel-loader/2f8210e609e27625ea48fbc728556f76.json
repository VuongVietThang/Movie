{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CDropdownItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      _b = _a.as,\n      as = _b === void 0 ? 'a' : _b,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n\n  return React.createElement(CLink, __assign({\n    className: classNames('dropdown-item', className),\n    as: as\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCDropdownItem.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCDropdownItem.displayName = 'CDropdownItem';\nexport { CDropdownItem };","map":{"version":3,"mappings":";;;;;IAeaA,aAAa,GAA+DC,UAAU,CAGjG,UAACC,EAAD,EAA6CC,GAA7C,EAAgD;AAA7C,cAAQ,cAAR;AAAA,MAAUC,EAAQ,QAAlB;AAAA,MAAUC,EAAE,GAAGD,sBAAGA,EAAlB;AAAA,MAAoBE,SAAS,eAA7B;AAAA,MAAkCC,IAAI,cAAxC,+BAAwC,CAAtC;;AACH,SACEC,KAAC,cAAD,CAACC,KAAD,EAAOC;AAAAJ,aAAS,EAAEK,UAAU,CAAC,eAAD,EAAkBL,SAAlB,CAArB;AAAmDD,MAAE,EAAEA;AAAvD,KAA+DE,IAA/D,EAAqE;AAAAJ,OAAG,EAAEA;AAAL,GAArE,CAAP,EACGS,QADH,CADF;AAKD,CATkG;AAWnGZ,aAAa,CAACa,SAAd,GAA0B;AACxBR,IAAE,EAAES,SAAS,CAACC,WADU;AAExBH,UAAQ,EAAEE,SAAS,CAACE,IAFI;AAGxBV,WAAS,EAAEQ,SAAS,CAACG;AAHG,CAA1B;AAMAjB,aAAa,CAACkB,WAAd,GAA4B,eAA5B","names":["CDropdownItem","forwardRef","_a","ref","_b","as","className","rest","React","CLink","__assign","classNames","children","propTypes","PropTypes","elementType","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\dropdown\\CDropdownItem.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink, CLinkProps } from '../link/CLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CDropdownItemProps extends CLinkProps {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CDropdownItem: PolymorphicRefForwardingComponent<'a', CDropdownItemProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CDropdownItemProps\n>(({ children, as = 'a', className, ...rest }, ref) => {\n  return (\n    <CLink className={classNames('dropdown-item', className)} as={as} {...rest} ref={ref}>\n      {children}\n    </CLink>\n  )\n})\n\nCDropdownItem.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCDropdownItem.displayName = 'CDropdownItem'\n"]},"metadata":{},"sourceType":"module"}