{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CInputGroupText = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      _b = _a.as,\n      Component = _b === void 0 ? 'span' : _b,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n\n  return React.createElement(Component, __assign({\n    className: classNames('input-group-text', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCInputGroupText.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCInputGroupText.displayName = 'CInputGroupText';\nexport { CInputGroupText };","map":{"version":3,"mappings":";;;;IAkBaA,eAAe,GAC1BC,UAAU,CACR,UAACC,EAAD,EAA2DC,GAA3D,EAA8D;AAA3D,cAAQ,cAAR;AAAA,MAAUC,EAAsB,QAAhC;AAAA,MAAcC,SAAS,GAAGD,yBAAMA,EAAhC;AAAA,MAAkCE,SAAS,eAA3C;AAAA,MAAgDC,IAAI,cAAtD,+BAAsD,CAApD;;AACD,SACEC,oBAACH,SAAD,EAAUI;AAACH,aAAS,EAAEI,UAAU,CAAC,kBAAD,EAAqBJ,SAArB;AAAtB,KAA2DC,IAA3D,EAA+D;AAAEJ,OAAG,EAAEA;AAAP,GAA/D,CAAV,EACGQ,QADH,CADF;AAKD,CAPO;AAUZX,eAAe,CAACY,SAAhB,GAA4B;AAC1BC,IAAE,EAAEC,SAAS,CAACC,WADY;AAE1BJ,UAAQ,EAAEG,SAAS,CAACE,IAFM;AAG1BV,WAAS,EAAEQ,SAAS,CAACG;AAHK,CAA5B;AAMAjB,eAAe,CAACkB,WAAhB,GAA8B,iBAA9B","names":["CInputGroupText","forwardRef","_a","ref","_b","Component","className","rest","React","__assign","classNames","children","propTypes","as","PropTypes","elementType","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\form\\CInputGroupText.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, LabelHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CInputGroupTextProps\n  extends LabelHTMLAttributes<HTMLLabelElement | HTMLSpanElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CInputGroupText: PolymorphicRefForwardingComponent<'span', CInputGroupTextProps> =\n  forwardRef<HTMLLabelElement | HTMLSpanElement, CInputGroupTextProps>(\n    ({ children, as: Component = 'span', className, ...rest }, ref) => {\n      return (\n        <Component className={classNames('input-group-text', className)} {...rest} ref={ref}>\n          {children}\n        </Component>\n      )\n    },\n  )\n\nCInputGroupText.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCInputGroupText.displayName = 'CInputGroupText'\n"]},"metadata":{},"sourceType":"module"}