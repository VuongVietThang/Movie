{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CNavbarNav = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      _b = _a.as,\n      Component = _b === void 0 ? 'ul' : _b,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n\n  return React.createElement(Component, __assign({\n    className: classNames('navbar-nav', className),\n    role: \"navigation\",\n    ref: ref\n  }, rest), children);\n});\nCNavbarNav.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCNavbarNav.displayName = 'CNavbarNav';\nexport { CNavbarNav };","map":{"version":3,"mappings":";;;;IAiBaA,UAAU,GAA6DC,UAAU,CAG5F,UAACC,EAAD,EAAyDC,GAAzD,EAA4D;AAAzD,cAAQ,cAAR;AAAA,MAAUC,EAAoB,QAA9B;AAAA,MAAcC,SAAS,GAAGD,uBAAIA,EAA9B;AAAA,MAAgCE,SAAS,eAAzC;AAAA,MAA8CC,IAAI,cAApD,+BAAoD,CAAlD;;AACH,SACEC,KAAC,cAAD,CAACH,SAAD,EACEI;AAAAH,aAAS,EAAEI,UAAU,CAAC,YAAD,EAAeJ,SAAf,CAArB;AACAK,QAAI,EAAC,YADL;AAEAR,OAAG,EAAEA;AAFL,KAGII,IAHJ,CADF,EAMGK,QANH,CADF;AAUD,CAd6F;AAgB9FZ,UAAU,CAACa,SAAX,GAAuB;AACrBC,IAAE,EAAEC,SAAS,CAACC,WADO;AAErBJ,UAAQ,EAAEG,SAAS,CAACE,IAFC;AAGrBX,WAAS,EAAES,SAAS,CAACG;AAHA,CAAvB;AAMAlB,UAAU,CAACmB,WAAX,GAAyB,YAAzB","names":["CNavbarNav","forwardRef","_a","ref","_b","Component","className","rest","React","__assign","classNames","role","children","propTypes","as","PropTypes","elementType","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\navbar\\CNavbarNav.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CNavbarNavProps extends HTMLAttributes<HTMLDivElement | HTMLUListElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CNavbarNav: PolymorphicRefForwardingComponent<'ul', CNavbarNavProps> = forwardRef<\n  HTMLDivElement | HTMLUListElement,\n  CNavbarNavProps\n>(({ children, as: Component = 'ul', className, ...rest }, ref) => {\n  return (\n    <Component\n      className={classNames('navbar-nav', className)}\n      role=\"navigation\"\n      ref={ref}\n      {...rest}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCNavbarNav.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCNavbarNav.displayName = 'CNavbarNav'\n"]},"metadata":{},"sourceType":"module"}