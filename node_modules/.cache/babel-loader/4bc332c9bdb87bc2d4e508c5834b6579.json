{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar CTableResponsiveWrapper = function (_a) {\n  var children = _a.children,\n      responsive = _a.responsive,\n      rest = __rest(_a, [\"children\", \"responsive\"]);\n\n  return responsive ? React.createElement(\"div\", __assign({\n    className: typeof responsive === 'boolean' ? 'table-responsive' : \"table-responsive-\".concat(responsive)\n  }, rest), children) : React.createElement(React.Fragment, null, children);\n};\n\nCTableResponsiveWrapper.propTypes = {\n  children: PropTypes.node,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])])\n};\nCTableResponsiveWrapper.displayName = 'CTableResponsiveWrapper';\nexport { CTableResponsiveWrapper };","map":{"version":3,"mappings":";;;;AAUO,IAAMA,uBAAuB,GAAqC,UAACC,EAAD,EAIxE;AAHC,cAAQ,cAAR;AAAA,MACAC,UAAU,gBADV;AAAA,MAEGC,IAAI,GAHiEC,sCACxE;;AAIA,SAAOF,UAAU,GACfG;AACEC,aAAS,EACP,OAAOJ,UAAP,KAAsB,SAAtB,GAAkC,kBAAlC,GAAuD,2BAAoBA,UAApB;AAF3D,KAIMC,IAJN,GAMGI,QANH,CADe,GAUfF,0CAAGE,QAAH,CAVF;AAYF,CAjBO;;AAmBPP,uBAAuB,CAACQ,SAAxB,GAAoC;AAClCD,UAAQ,EAAEE,SAAS,CAACC,IADc;AAElCR,YAAU,EAAEO,SAAS,CAACE,SAAV,CAAoB,CAC9BF,SAAS,CAACG,IADoB,EAE9BH,SAAS,CAACI,KAAV,CAAmD,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CAAnD,CAF8B,CAApB;AAFsB,CAApC;AAQAb,uBAAuB,CAACc,WAAxB,GAAsC,yBAAtC","names":["CTableResponsiveWrapper","_a","responsive","rest","__rest","React","className","children","propTypes","PropTypes","node","oneOfType","bool","oneOf","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\table\\CTableResponsiveWrapper.tsx"],"sourcesContent":["import React, { FC, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\n\nexport interface CTableResponsiveWrapperProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Make any table responsive across all viewports or pick a maximum breakpoint with which to have a responsive table up to.\n   */\n  responsive?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n}\n\nexport const CTableResponsiveWrapper: FC<CTableResponsiveWrapperProps> = ({\n  children,\n  responsive,\n  ...rest\n}) => {\n  return responsive ? (\n    <div\n      className={\n        typeof responsive === 'boolean' ? 'table-responsive' : `table-responsive-${responsive}`\n      }\n      {...rest}\n    >\n      {children}\n    </div>\n  ) : (\n    <>{children}</>\n  )\n}\n\nCTableResponsiveWrapper.propTypes = {\n  children: PropTypes.node,\n  responsive: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n}\n\nCTableResponsiveWrapper.displayName = 'CTableResponsiveWrapper'\n"]},"metadata":{},"sourceType":"module"}