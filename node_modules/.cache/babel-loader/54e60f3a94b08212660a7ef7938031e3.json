{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport classNames from '../../_virtual/index.js';\nimport PropTypes from 'prop-types';\nimport { l as libExports } from '../../_virtual/lib.js';\nimport { CButton } from '../button/CButton.js';\nimport { CCalendar } from '../calendar/CCalendar.js';\nimport { convertToDateObject } from '../calendar/utils.js';\nimport { CFormControlWrapper } from '../form/CFormControlWrapper.js';\nimport { CPicker } from '../picker/CPicker.js';\nimport { CTimePicker } from '../time-picker/CTimePicker.js';\nimport { useDebouncedCallback } from '../../hooks/useDebouncedCallback.js';\nimport '@popperjs/core';\nimport { getLocalDateFromString, getInputIdOrName } from './utils.js';\n\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\nvar CDateRangePicker = forwardRef(function (_a, ref) {\n  var _b;\n\n  var ariaNavNextMonthLabel = _a.ariaNavNextMonthLabel,\n      ariaNavNextYearLabel = _a.ariaNavNextYearLabel,\n      ariaNavPrevMonthLabel = _a.ariaNavPrevMonthLabel,\n      ariaNavPrevYearLabel = _a.ariaNavPrevYearLabel,\n      _c = _a.calendars,\n      calendars = _c === void 0 ? 2 : _c,\n      _d = _a.cancelButton,\n      cancelButton = _d === void 0 ? 'Cancel' : _d,\n      _e = _a.cancelButtonColor,\n      cancelButtonColor = _e === void 0 ? 'primary' : _e,\n      _f = _a.cancelButtonSize,\n      cancelButtonSize = _f === void 0 ? 'sm' : _f,\n      _g = _a.cancelButtonVariant,\n      cancelButtonVariant = _g === void 0 ? 'ghost' : _g,\n      className = _a.className,\n      _h = _a.cleaner,\n      cleaner = _h === void 0 ? true : _h,\n      _j = _a.closeOnSelect,\n      closeOnSelect = _j === void 0 ? true : _j,\n      _k = _a.confirmButton,\n      confirmButton = _k === void 0 ? 'OK' : _k,\n      _l = _a.confirmButtonColor,\n      confirmButtonColor = _l === void 0 ? 'primary' : _l,\n      _m = _a.confirmButtonSize,\n      confirmButtonSize = _m === void 0 ? 'sm' : _m,\n      confirmButtonVariant = _a.confirmButtonVariant,\n      dayFormat = _a.dayFormat,\n      disabled = _a.disabled,\n      disabledDates = _a.disabledDates,\n      endDate = _a.endDate,\n      feedback = _a.feedback,\n      feedbackInvalid = _a.feedbackInvalid,\n      feedbackValid = _a.feedbackValid,\n      firstDayOfWeek = _a.firstDayOfWeek,\n      footer = _a.footer,\n      id = _a.id,\n      _o = _a.indicator,\n      indicator = _o === void 0 ? true : _o,\n      inputDateFormat = _a.inputDateFormat,\n      inputDateParse = _a.inputDateParse,\n      _p = _a.inputOnChangeDelay,\n      inputOnChangeDelay = _p === void 0 ? 750 : _p,\n      inputReadOnly = _a.inputReadOnly,\n      invalid = _a.invalid,\n      label = _a.label,\n      _q = _a.locale,\n      locale = _q === void 0 ? 'default' : _q,\n      maxDate = _a.maxDate,\n      minDate = _a.minDate,\n      name = _a.name,\n      navigation = _a.navigation,\n      navYearFirst = _a.navYearFirst,\n      onEndDateChange = _a.onEndDateChange,\n      onHide = _a.onHide,\n      onStartDateChange = _a.onStartDateChange,\n      onShow = _a.onShow,\n      _r = _a.placeholder,\n      placeholder = _r === void 0 ? ['Start date', 'End date'] : _r,\n      _s = _a.portal,\n      portal = _s === void 0 ? true : _s,\n      _t = _a.range,\n      range = _t === void 0 ? true : _t,\n      ranges = _a.ranges,\n      _u = _a.rangesButtonsColor,\n      rangesButtonsColor = _u === void 0 ? 'secondary' : _u,\n      rangesButtonsSize = _a.rangesButtonsSize,\n      _v = _a.rangesButtonsVariant,\n      rangesButtonsVariant = _v === void 0 ? 'ghost' : _v,\n      required = _a.required,\n      _w = _a.separator,\n      separator = _w === void 0 ? true : _w,\n      selectAdjacementDays = _a.selectAdjacementDays,\n      _x = _a.selectionType,\n      selectionType = _x === void 0 ? 'day' : _x,\n      showAdjacementDays = _a.showAdjacementDays,\n      showWeekNumber = _a.showWeekNumber,\n      size = _a.size,\n      startDate = _a.startDate,\n      text = _a.text,\n      timepicker = _a.timepicker,\n      toggler = _a.toggler,\n      _y = _a.todayButton,\n      todayButton = _y === void 0 ? 'Today' : _y,\n      _z = _a.todayButtonColor,\n      todayButtonColor = _z === void 0 ? 'primary' : _z,\n      _0 = _a.todayButtonSize,\n      todayButtonSize = _0 === void 0 ? 'sm' : _0,\n      todayButtonVariant = _a.todayButtonVariant,\n      tooltipFeedback = _a.tooltipFeedback,\n      valid = _a.valid,\n      visible = _a.visible,\n      weekdayFormat = _a.weekdayFormat,\n      weekNumbersLabel = _a.weekNumbersLabel,\n      _1 = _a.calendarDate,\n      calendarDate = _1 === void 0 ? startDate || endDate || null : _1,\n      rest = __rest(_a, [\"ariaNavNextMonthLabel\", \"ariaNavNextYearLabel\", \"ariaNavPrevMonthLabel\", \"ariaNavPrevYearLabel\", \"calendars\", \"cancelButton\", \"cancelButtonColor\", \"cancelButtonSize\", \"cancelButtonVariant\", \"className\", \"cleaner\", \"closeOnSelect\", \"confirmButton\", \"confirmButtonColor\", \"confirmButtonSize\", \"confirmButtonVariant\", \"dayFormat\", \"disabled\", \"disabledDates\", \"endDate\", \"feedback\", \"feedbackInvalid\", \"feedbackValid\", \"firstDayOfWeek\", \"footer\", \"id\", \"indicator\", \"inputDateFormat\", \"inputDateParse\", \"inputOnChangeDelay\", \"inputReadOnly\", \"invalid\", \"label\", \"locale\", \"maxDate\", \"minDate\", \"name\", \"navigation\", \"navYearFirst\", \"onEndDateChange\", \"onHide\", \"onStartDateChange\", \"onShow\", \"placeholder\", \"portal\", \"range\", \"ranges\", \"rangesButtonsColor\", \"rangesButtonsSize\", \"rangesButtonsVariant\", \"required\", \"separator\", \"selectAdjacementDays\", \"selectionType\", \"showAdjacementDays\", \"showWeekNumber\", \"size\", \"startDate\", \"text\", \"timepicker\", \"toggler\", \"todayButton\", \"todayButtonColor\", \"todayButtonSize\", \"todayButtonVariant\", \"tooltipFeedback\", \"valid\", \"visible\", \"weekdayFormat\", \"weekNumbersLabel\", \"calendarDate\"]);\n\n  var inputEndRef = useRef(null);\n  var inputStartRef = useRef(null);\n  var formRef = useRef();\n\n  var _2 = useState(calendarDate),\n      _calendarDate = _2[0],\n      setCalendarDate = _2[1];\n\n  var _3 = useState(endDate !== null && endDate !== void 0 ? endDate : null),\n      _endDate = _3[0],\n      setEndDate = _3[1];\n\n  var _4 = useState(maxDate !== null && maxDate !== void 0 ? maxDate : null),\n      _maxDate = _4[0],\n      setMaxDate = _4[1];\n\n  var _5 = useState(minDate !== null && minDate !== void 0 ? minDate : null),\n      _minDate = _5[0],\n      setMinDate = _5[1];\n\n  var _6 = useState(startDate !== null && startDate !== void 0 ? startDate : null),\n      _startDate = _6[0],\n      setStartDate = _6[1];\n\n  var _7 = useState(visible),\n      _visible = _7[0],\n      setVisible = _7[1];\n\n  var _8 = useState(startDate !== null && startDate !== void 0 ? startDate : null),\n      initialStartDate = _8[0],\n      setInitialStartDate = _8[1];\n\n  var _9 = useState(endDate !== null && endDate !== void 0 ? endDate : null),\n      initialEndDate = _9[0],\n      setInitialEndDate = _9[1];\n\n  var _10 = useState(null),\n      inputStartHoverValue = _10[0],\n      setInputStartHoverValue = _10[1];\n\n  var _11 = useState(null),\n      inputEndHoverValue = _11[0],\n      setInputEndHoverValue = _11[1];\n\n  var _12 = useState(valid !== null && valid !== void 0 ? valid : invalid === true ? false : undefined),\n      isValid = _12[0],\n      setIsValid = _12[1];\n\n  var _13 = useState(false),\n      selectEndDate = _13[0],\n      setSelectEndDate = _13[1];\n\n  useEffect(function () {\n    setIsValid(valid !== null && valid !== void 0 ? valid : invalid === true ? false : undefined);\n  }, [valid, invalid]);\n  useEffect(function () {\n    if (startDate) {\n      setStartDate(startDate);\n    }\n  }, [startDate]);\n  useEffect(function () {\n    if (endDate) {\n      setEndDate(endDate);\n    }\n  }, [endDate]);\n  useEffect(function () {\n    if (maxDate) {\n      setMaxDate(maxDate);\n    }\n  }, [maxDate]);\n  useEffect(function () {\n    if (minDate) {\n      setMinDate(minDate);\n    }\n  }, [minDate]);\n  useEffect(function () {\n    if (inputStartHoverValue) {\n      setInputValue(inputStartRef.current, inputStartHoverValue);\n      return;\n    }\n\n    setInputValue(inputStartRef.current, _startDate);\n  }, [inputStartHoverValue, _startDate]);\n  useEffect(function () {\n    if (inputEndHoverValue) {\n      setInputValue(inputEndRef.current, inputEndHoverValue);\n      return;\n    }\n\n    setInputValue(inputEndRef.current, _endDate);\n  }, [inputEndHoverValue, _endDate]);\n  useEffect(function () {\n    if (inputStartRef.current && inputStartRef.current.form) {\n      formRef.current = inputStartRef.current.form;\n    }\n  }, [inputStartRef]);\n  useEffect(function () {\n    if (formRef.current) {\n      formRef.current.addEventListener('submit', function (event) {\n        setTimeout(function () {\n          return handleFormValidation(event.target);\n        });\n      });\n      handleFormValidation(formRef.current);\n    }\n  }, [formRef, _startDate, _endDate]);\n\n  var formatDate = function (date) {\n    if (inputDateFormat) {\n      return inputDateFormat(date instanceof Date ? new Date(date) : convertToDateObject(date, selectionType));\n    }\n\n    if (selectionType !== 'day') {\n      return date;\n    }\n\n    var _date = new Date(date);\n\n    return timepicker ? _date.toLocaleString(locale) : _date.toLocaleDateString(locale);\n  };\n\n  var setInputValue = function (el, date) {\n    if (!el) {\n      return;\n    }\n\n    if (date) {\n      el.value = formatDate(date);\n      return;\n    }\n\n    el.value = '';\n  };\n\n  var handleDateHover = function (date) {\n    if (selectEndDate) {\n      setInputEndHoverValue(date);\n    } else {\n      setInputStartHoverValue(date);\n    }\n  };\n\n  var handleClear = function (event) {\n    event.stopPropagation();\n    setStartDate(null);\n    setEndDate(null);\n  };\n\n  var handleEndDateChange = function (date) {\n    setEndDate(date);\n    setInputEndHoverValue(null);\n    onEndDateChange === null || onEndDateChange === void 0 ? void 0 : onEndDateChange(date);\n\n    if (timepicker || footer) {\n      return;\n    }\n\n    if (closeOnSelect && _startDate !== null) {\n      setVisible(false);\n    }\n  };\n\n  var handleFormValidation = function (form) {\n    if (!form.classList.contains('was-validated')) {\n      return;\n    }\n\n    if (range && _startDate && _endDate || !range && _startDate) {\n      return setIsValid(true);\n    }\n\n    setIsValid(false);\n  };\n\n  var handleStartDateChange = function (date) {\n    setStartDate(date);\n    setInputStartHoverValue(null);\n    onStartDateChange === null || onStartDateChange === void 0 ? void 0 : onStartDateChange(date);\n\n    if (timepicker || footer) {\n      return;\n    }\n\n    if (closeOnSelect && !range) {\n      setVisible(false);\n    }\n  };\n\n  var handleOnChange = useDebouncedCallback(function (value, input) {\n    var date = inputDateParse ? inputDateParse(value) : getLocalDateFromString(value, locale, timepicker);\n\n    if (date instanceof Date && date.getTime()) {\n      setCalendarDate(date);\n\n      if (input === 'start') {\n        setStartDate(date);\n      } else {\n        setEndDate(date);\n      }\n    }\n  }, inputOnChangeDelay);\n\n  var InputGroup = function () {\n    return React.createElement(\"div\", {\n      className: \"date-picker-input-group\"\n    }, React.createElement(\"input\", __assign({\n      autoComplete: \"off\",\n      className: classNames('date-picker-input', {\n        hover: inputStartHoverValue\n      }),\n      disabled: disabled\n    }, id && {\n      id: getInputIdOrName(id, range, 'start')\n    }, name && {\n      name: getInputIdOrName(name, range, 'start')\n    }, id && !Array.isArray(id) && !name && {\n      name: range ? \"\".concat(id, \"-start-date\") : \"\".concat(id, \"-date\")\n    }, {\n      placeholder: Array.isArray(placeholder) ? placeholder[0] : placeholder,\n      readOnly: inputReadOnly,\n      required: required,\n      onChange: function (event) {\n        handleOnChange(event.target.value, 'start');\n      },\n      onClick: function () {\n        return setSelectEndDate(false);\n      },\n      ref: inputStartRef\n    })), range && separator !== false && React.createElement(\"div\", {\n      className: \"date-picker-separator\"\n    }), range && React.createElement(\"input\", __assign({\n      autoComplete: \"off\",\n      className: classNames('date-picker-input', {\n        hover: inputEndHoverValue\n      }),\n      disabled: disabled\n    }, id && {\n      id: getInputIdOrName(id, range, 'end')\n    }, name && {\n      name: getInputIdOrName(name, range, 'end')\n    }, id && !Array.isArray(id) && !name && {\n      name: \"\".concat(id, \"-end-date\")\n    }, {\n      placeholder: placeholder[1],\n      readOnly: inputReadOnly,\n      required: required,\n      onChange: function (event) {\n        handleOnChange(event.target.value, 'end');\n      },\n      onClick: function () {\n        return setSelectEndDate(true);\n      },\n      ref: inputEndRef\n    })), indicator && (typeof indicator === 'boolean' ? React.createElement(\"div\", __assign({\n      className: \"date-picker-indicator\"\n    }, disabled !== false && {\n      onClick: function () {\n        return setVisible(!_visible);\n      },\n      onKeyDown: function (event) {\n        if (event.key === 'Enter') {\n          setVisible(!_visible);\n        }\n      },\n      tabIndex: 0\n    })) : indicator), cleaner && (_startDate || _endDate) && (typeof cleaner === 'boolean' ? React.createElement(\"div\", {\n      className: \"date-picker-cleaner\",\n      onClick: function (event) {\n        return handleClear(event);\n      }\n    }) : React.isValidElement(cleaner) && React.cloneElement(cleaner, {\n      onClick: function (event) {\n        return handleClear(event);\n      }\n    })));\n  };\n\n  return React.createElement(CFormControlWrapper, __assign({\n    describedby: rest['aria-describedby'],\n    feedback: feedback,\n    feedbackInvalid: feedbackInvalid,\n    feedbackValid: feedbackValid\n  }, id && !Array.isArray(id) && {\n    id: id\n  }, {\n    invalid: isValid === false ? true : false,\n    label: label,\n    text: text,\n    tooltipFeedback: tooltipFeedback,\n    valid: isValid\n  }), React.createElement(CPicker, __assign({\n    className: classNames('date-picker', (_b = {}, _b[\"date-picker-\".concat(size)] = size, _b.disabled = disabled, _b['is-invalid'] = isValid === false ? true : false, _b['is-valid'] = isValid, _b), className),\n    disabled: disabled,\n    dropdownClassNames: \"date-picker-dropdown\",\n    footer: footer || timepicker,\n    footerContent: React.createElement(\"div\", {\n      className: \"date-picker-footer\"\n    }, todayButton && React.createElement(CButton, {\n      className: \"me-auto\",\n      color: todayButtonColor,\n      size: todayButtonSize,\n      variant: todayButtonVariant,\n      onClick: function () {\n        var date = new Date();\n        handleStartDateChange(date);\n        if (range) handleEndDateChange(date);\n        setCalendarDate(date);\n      }\n    }, todayButton), cancelButton && React.createElement(CButton, {\n      color: cancelButtonColor,\n      size: cancelButtonSize,\n      variant: cancelButtonVariant,\n      onClick: function () {\n        handleStartDateChange(initialStartDate);\n        if (range) handleEndDateChange(initialEndDate);\n        setVisible(false);\n      }\n    }, cancelButton), confirmButton && React.createElement(CButton, {\n      color: confirmButtonColor,\n      size: confirmButtonSize,\n      variant: confirmButtonVariant,\n      onClick: function () {\n        setVisible(false);\n      }\n    }, confirmButton)),\n    toggler: toggler !== null && toggler !== void 0 ? toggler : InputGroup(),\n    portal: portal,\n    onHide: function () {\n      setVisible(false);\n      onHide === null || onHide === void 0 ? void 0 : onHide();\n    },\n    onShow: function () {\n      setInitialStartDate(_startDate);\n      setInitialEndDate(_endDate);\n      setVisible(true);\n      onShow === null || onShow === void 0 ? void 0 : onShow();\n    },\n    visible: _visible\n  }, rest, {\n    ref: ref\n  }), React.createElement(\"div\", {\n    className: \"date-picker-body\"\n  }, ranges && React.createElement(\"div\", {\n    className: \"date-picker-ranges\"\n  }, Object.keys(ranges).map(function (key, index) {\n    return React.createElement(CButton, {\n      color: rangesButtonsColor,\n      key: index,\n      onClick: function () {\n        handleStartDateChange(ranges[key][0]);\n        handleEndDateChange(ranges[key][1]);\n      },\n      size: rangesButtonsSize,\n      variant: rangesButtonsVariant\n    }, key);\n  })), React.createElement(CCalendar, {\n    ariaNavNextMonthLabel: ariaNavNextMonthLabel,\n    ariaNavNextYearLabel: ariaNavNextYearLabel,\n    ariaNavPrevMonthLabel: ariaNavPrevMonthLabel,\n    ariaNavPrevYearLabel: ariaNavPrevYearLabel,\n    calendarDate: _calendarDate,\n    calendars: libExports.isMobile ? 1 : calendars,\n    className: \"date-picker-calendars\",\n    dayFormat: dayFormat,\n    disabledDates: disabledDates,\n    endDate: _endDate,\n    firstDayOfWeek: firstDayOfWeek,\n    locale: locale,\n    maxDate: _maxDate,\n    minDate: _minDate,\n    navigation: navigation,\n    navYearFirst: navYearFirst,\n    range: range,\n    selectAdjacementDays: selectAdjacementDays,\n    selectEndDate: selectEndDate,\n    selectionType: selectionType,\n    showAdjacementDays: showAdjacementDays,\n    showWeekNumber: showWeekNumber,\n    startDate: _startDate,\n    weekdayFormat: weekdayFormat,\n    weekNumbersLabel: weekNumbersLabel,\n    onDateHover: function (date) {\n      return handleDateHover(date);\n    },\n    onCalendarDateChange: function (date) {\n      return setCalendarDate(date);\n    },\n    onStartDateChange: function (date) {\n      return handleStartDateChange(date);\n    },\n    onEndDateChange: function (date) {\n      return handleEndDateChange(date);\n    },\n    onSelectEndChange: function (value) {\n      return setSelectEndDate(value);\n    }\n  }), timepicker && React.createElement(\"div\", {\n    className: \"date-picker-timepickers\"\n  }, libExports.isMobile && range || range && calendars === 1 ? React.createElement(React.Fragment, null, React.createElement(CTimePicker, {\n    container: \"inline\",\n    disabled: _startDate === null ? true : false,\n    locale: locale,\n    onTimeChange: function (_, __, date) {\n      return date && handleStartDateChange(date);\n    },\n    time: _startDate && new Date(_startDate),\n    variant: \"select\"\n  }), React.createElement(CTimePicker, {\n    container: \"inline\",\n    disabled: _endDate === null ? true : false,\n    locale: locale,\n    onTimeChange: function (_, __, date) {\n      return date && handleEndDateChange(date);\n    },\n    time: _endDate && new Date(_endDate),\n    variant: \"select\"\n  })) : Array.from({\n    length: calendars\n  }).map(function (_, index) {\n    return React.createElement(CTimePicker, {\n      container: \"inline\",\n      disabled: index === 0 ? _startDate === null ? true : false : _endDate === null ? true : false,\n      key: index,\n      locale: locale,\n      onTimeChange: function (_, __, date) {\n        return index === 0 ? date && handleStartDateChange(date) : date && handleEndDateChange(date);\n      },\n      time: index === 0 ? _startDate && new Date(_startDate) : _endDate && new Date(_endDate),\n      variant: \"select\"\n    });\n  })))));\n});\nCDateRangePicker.displayName = 'CDateRangePicker';\nCDateRangePicker.propTypes = __assign(__assign(__assign(__assign({}, CCalendar.propTypes), CFormControlWrapper.propTypes), CPicker.propTypes), {\n  cancelButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  cancelButtonColor: (_a = CButton.propTypes) === null || _a === void 0 ? void 0 : _a.color,\n  cancelButtonSize: (_b = CButton.propTypes) === null || _b === void 0 ? void 0 : _b.size,\n  cancelButtonVariant: (_c = CButton.propTypes) === null || _c === void 0 ? void 0 : _c.variant,\n  calendars: PropTypes.number,\n  className: PropTypes.string,\n  cleaner: PropTypes.bool,\n  closeOnSelect: PropTypes.bool,\n  confirmButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  confirmButtonColor: (_d = CButton.propTypes) === null || _d === void 0 ? void 0 : _d.color,\n  confirmButtonSize: (_e = CButton.propTypes) === null || _e === void 0 ? void 0 : _e.size,\n  confirmButtonVariant: (_f = CButton.propTypes) === null || _f === void 0 ? void 0 : _f.variant,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  indicator: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  inputDateFormat: PropTypes.func,\n  inputDateParse: PropTypes.func,\n  inputOnChangeDelay: PropTypes.number,\n  inputReadOnly: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string.isRequired)]),\n  range: PropTypes.bool,\n  ranges: PropTypes.object,\n  rangesButtonsColor: (_g = CButton.propTypes) === null || _g === void 0 ? void 0 : _g.color,\n  rangesButtonsSize: (_h = CButton.propTypes) === null || _h === void 0 ? void 0 : _h.size,\n  rangesButtonsVariant: (_j = CButton.propTypes) === null || _j === void 0 ? void 0 : _j.variant,\n  required: PropTypes.bool,\n  separator: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  size: PropTypes.oneOf(['sm', 'lg']),\n  timepicker: PropTypes.bool,\n  todayButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  todayButtonColor: (_k = CButton.propTypes) === null || _k === void 0 ? void 0 : _k.color,\n  todayButtonSize: (_l = CButton.propTypes) === null || _l === void 0 ? void 0 : _l.size,\n  todayButtonVariant: (_m = CButton.propTypes) === null || _m === void 0 ? void 0 : _m.variant\n});\nexport { CDateRangePicker };","map":{"version":3,"mappings":"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","names":["CDateRangePicker","forwardRef","_a","ref","ariaNavNextYearLabel","ariaNavPrevMonthLabel","ariaNavPrevYearLabel","_c","calendars","_d","cancelButton","_e","cancelButtonColor","_f","cancelButtonSize","_g","cancelButtonVariant","className","_h","cleaner","_j","closeOnSelect","_k","confirmButton","_l","confirmButtonColor","_m","confirmButtonSize","confirmButtonVariant","dayFormat","disabled","disabledDates","endDate","feedback","feedbackInvalid","feedbackValid","firstDayOfWeek","footer","id","_o","indicator","inputDateFormat","inputDateParse","_p","inputOnChangeDelay","inputReadOnly","invalid","label","_q","locale","maxDate","minDate","name","navigation","navYearFirst","onEndDateChange","onHide","onStartDateChange","onShow","_r","placeholder","_s","portal","_t","range","ranges","_u","rangesButtonsColor","rangesButtonsSize","_v","rangesButtonsVariant","required","_w","separator","selectAdjacementDays","_x","selectionType","showAdjacementDays","showWeekNumber","size","startDate","text","timepicker","toggler","_y","todayButton","_z","todayButtonColor","_0","todayButtonSize","todayButtonVariant","tooltipFeedback","valid","visible","weekdayFormat","weekNumbersLabel","_1","calendarDate","rest","inputEndRef","useRef","inputStartRef","formRef","useState","_calendarDate","setCalendarDate","_endDate","setEndDate","_maxDate","setMaxDate","_minDate","setMinDate","_startDate","setStartDate","_visible","setVisible","initialStartDate","setInitialStartDate","initialEndDate","setInitialEndDate","inputStartHoverValue","setInputStartHoverValue","inputEndHoverValue","setInputEndHoverValue","undefined","isValid","setIsValid","selectEndDate","setSelectEndDate","useEffect","setInputValue","current","form","addEventListener","event","setTimeout","target","handleFormValidation","formatDate","date","Date","convertToDateObject","_date","toLocaleString","toLocaleDateString","el","value","handleDateHover","handleClear","stopPropagation","handleEndDateChange","classList","contains","handleStartDateChange","handleOnChange","useDebouncedCallback","input","getLocalDateFromString","getTime","InputGroup","React","__assign","autoComplete","classNames","hover","getInputIdOrName","Array","isArray","concat","readOnly","onChange","onClick","onKeyDown","key","tabIndex","isValidElement","cloneElement","CFormControlWrapper","describedby","CPicker","_b","dropdownClassNames","footerContent","CButton","color","variant","Object","keys","map","index","CCalendar","ariaNavNextMonthLabel","isMobile","onDateHover","onCalendarDateChange","onSelectEndChange","CTimePicker","container","onTimeChange","_","__","time","from","length","displayName","propTypes","PropTypes","oneOfType","bool","node","number","string","any","func","arrayOf","isRequired","object","oneOf"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\date-range-picker\\CDateRangePicker.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode, useEffect, useRef, useState } from 'react'\n\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport { isMobile } from 'react-device-detect'\n\nimport { CButton } from '../button'\nimport { CCalendar, CCalendarProps } from '../calendar/CCalendar'\nimport { convertToDateObject } from '../calendar/utils'\nimport { CFormControlWrapper, CFormControlWrapperProps } from '../form/CFormControlWrapper'\nimport { CPicker, CPickerProps } from '../picker/CPicker'\nimport { CTimePicker } from '../time-picker/CTimePicker'\n\nimport { useDebouncedCallback } from '../../hooks'\nimport { Colors } from '../../types'\nimport { getInputIdOrName, getLocalDateFromString } from './utils'\n\nexport interface CDateRangePickerProps\n  extends Omit<CFormControlWrapperProps, 'floatingLabel' | 'id'>,\n    Omit<CPickerProps, 'placeholder' | 'id'>,\n    Omit<CCalendarProps, 'onDayHover' | 'onCalendarDateChange'> {\n  /**\n   * The number of calendars that render on desktop devices.\n   */\n  calendars?: number\n  /**\n   * Toggle visibility or set the content of cancel button.\n   *\n   * @default 'Cancel'\n   */\n  cancelButton?: boolean | ReactNode\n  /**\n   * Sets the color context of the cancel button to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   * @default 'primary'\n   */\n  cancelButtonColor?: Colors\n  /**\n   * Size the cancel button small or large.\n   *\n   * @default 'sm'\n   */\n  cancelButtonSize?: 'sm' | 'lg'\n  /**\n   * Set the cancel button variant to an outlined button or a ghost button.\n   *\n   * @default 'ghost'\n   */\n  cancelButtonVariant?: 'outline' | 'ghost'\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * If true the dropdown will be immediately closed after submitting the full date.\n   *\n   * @since 4.8.0\n   */\n  closeOnSelect?: boolean\n  /**\n   * Toggle visibility or set the content of the cleaner button.\n   */\n  cleaner?: boolean\n  /**\n   * Toggle visibility or set the content of confirm button.\n   *\n   * @default 'OK'\n   */\n  confirmButton?: boolean | ReactNode\n  /**\n   * Sets the color context of the confirm button to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   * @default 'primary'\n   */\n  confirmButtonColor?: Colors\n  /**\n   * Size the confirm button small or large.\n   *\n   * @default 'sm'\n   */\n  confirmButtonSize?: 'sm' | 'lg'\n  /**\n   * Set the confirm button variant to an outlined button or a ghost button.\n   */\n  confirmButtonVariant?: 'outline' | 'ghost'\n  /**\n   * The id attribute for the input elements. It can be a single string for both the start and end dates. If a single string is used, the postfix \"-start-date\" and \"-end-date\" will be automatically added to make the IDs unique. Alternatively, you can use an array of two strings for start and end dates separately.\n   *\n   * **[Deprecated since v5.3.0]** If the property is a type of string, the name attributes for input elements are generated based on this property until you define name prop ex.:\n   * - `{id}-start-date`\n   * - `{id}-end-date`\n   */\n  id?: string | [string, string]\n  /**\n   * Toggle visibility or set the content of the input indicator.\n   */\n  indicator?: ReactNode | boolean\n  /**\n   * Custom function to format the selected date into a string according to a custom format.\n   *\n   * @since 5.0.0\n   */\n  inputDateFormat?: (date: Date) => string\n  /**\n   * Custom function to parse the input value into a valid Date object.\n   *\n   * @since 5.0.0\n   */\n  inputDateParse?: (date: string | Date) => Date\n  /**\n   * Defines the delay (in milliseconds) for the input field's onChange event.\n   *\n   * @since 5.0.0\n   */\n  inputOnChangeDelay?: number\n  /**\n   * Toggle the readonly state for the component.\n   */\n  inputReadOnly?: boolean\n  /**\n   * The name attribute for the input elements. It can be a single string for both the start and end dates. If a single string is used, the postfix \"-start-date\" and \"-end-date\" will be automatically added to make the names unique. Alternatively, you can use an array of two strings for start and end dates separately.\n   *\n   * Example for single string: 'date-input'\n   * Result: 'date-input-start-date', 'date-input-end-date'\n   *\n   * Example for array: ['start-date-input', 'end-date-input']\n   * Result: 'start-date-input', 'end-date-input'\n   *\n   * @since 5.3.0\n   */\n  name?: string | [string, string]\n  /**\n   * Specifies short hints that are visible in start date and end date inputs.\n   */\n  placeholder?: string | string[]\n  /**\n   * @ignore\n   */\n  range?: boolean\n  /**\n   * Predefined date ranges the user can select from.\n   */\n  ranges?: object\n  /**\n   * Sets the color context of the cancel button to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  rangesButtonsColor?: Colors\n  /**\n   * Size the ranges button small or large.\n   */\n  rangesButtonsSize?: 'sm' | 'lg'\n  /**\n   * Set the ranges button variant to an outlined button or a ghost button.\n   */\n  rangesButtonsVariant?: 'outline' | 'ghost'\n  /**\n   * When present, it specifies that date must be filled out before submitting the form.\n   *\n   * @since 4.10.0\n   */\n  required?: boolean\n  /**\n   * Default icon or character character that separates two dates.\n   */\n  separator?: ReactNode | boolean\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Provide an additional time selection by adding select boxes to choose times.\n   */\n  timepicker?: boolean\n  /**\n   * Toggle visibility or set the content of today button.\n   *\n   * @default 'Today'\n   */\n  todayButton?: boolean | ReactNode\n  /**\n   * Sets the color context of the today button to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   * @default 'primary'\n   */\n  todayButtonColor?: Colors\n  /**\n   * Size the today button small or large.\n   *\n   * @default 'sm'\n   */\n  todayButtonSize?: 'sm' | 'lg'\n  /**\n   * Set the today button variant to an outlined button or a ghost button.\n   */\n  todayButtonVariant?: 'outline' | 'ghost'\n}\n\nexport const CDateRangePicker = forwardRef<HTMLDivElement | HTMLLIElement, CDateRangePickerProps>(\n  (\n    {\n      ariaNavNextMonthLabel,\n      ariaNavNextYearLabel,\n      ariaNavPrevMonthLabel,\n      ariaNavPrevYearLabel,\n      calendars = 2,\n      cancelButton = 'Cancel',\n      cancelButtonColor = 'primary',\n      cancelButtonSize = 'sm',\n      cancelButtonVariant = 'ghost',\n      className,\n      cleaner = true,\n      closeOnSelect = true,\n      confirmButton = 'OK',\n      confirmButtonColor = 'primary',\n      confirmButtonSize = 'sm',\n      confirmButtonVariant,\n      dayFormat,\n      disabled,\n      disabledDates,\n      endDate,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      firstDayOfWeek,\n      footer,\n      id,\n      indicator = true,\n      inputDateFormat,\n      inputDateParse,\n      inputOnChangeDelay = 750,\n      inputReadOnly,\n      invalid,\n      label,\n      locale = 'default',\n      maxDate,\n      minDate,\n      name,\n      navigation,\n      navYearFirst,\n      onEndDateChange,\n      onHide,\n      onStartDateChange,\n      onShow,\n      placeholder = ['Start date', 'End date'],\n      portal = true,\n      range = true,\n      ranges,\n      rangesButtonsColor = 'secondary',\n      rangesButtonsSize,\n      rangesButtonsVariant = 'ghost',\n      required,\n      separator = true,\n      selectAdjacementDays,\n      selectionType = 'day',\n      showAdjacementDays,\n      showWeekNumber,\n      size,\n      startDate,\n      text,\n      timepicker,\n      toggler,\n      todayButton = 'Today',\n      todayButtonColor = 'primary',\n      todayButtonSize = 'sm',\n      todayButtonVariant,\n      tooltipFeedback,\n      valid,\n      visible,\n      weekdayFormat,\n      weekNumbersLabel,\n      calendarDate = startDate || endDate || null,\n      ...rest\n    },\n    ref\n  ) => {\n    const inputEndRef = useRef<HTMLInputElement>(null)\n    const inputStartRef = useRef<HTMLInputElement>(null)\n    const formRef = useRef<HTMLFormElement>()\n\n    const [_calendarDate, setCalendarDate] = useState<Date | string | null>(calendarDate)\n    const [_endDate, setEndDate] = useState<Date | string | null>(endDate ?? null)\n    const [_maxDate, setMaxDate] = useState<Date | string | null>(maxDate ?? null)\n    const [_minDate, setMinDate] = useState<Date | string | null>(minDate ?? null)\n    const [_startDate, setStartDate] = useState<Date | string | null>(startDate ?? null)\n    const [_visible, setVisible] = useState(visible)\n\n    const [initialStartDate, setInitialStartDate] = useState<Date | string | null>(\n      startDate ?? null\n    )\n    const [initialEndDate, setInitialEndDate] = useState<Date | string | null>(endDate ?? null)\n    const [inputStartHoverValue, setInputStartHoverValue] = useState<Date | string | null>(null)\n    const [inputEndHoverValue, setInputEndHoverValue] = useState<Date | string | null>(null)\n    const [isValid, setIsValid] = useState(valid ?? (invalid === true ? false : undefined))\n    const [selectEndDate, setSelectEndDate] = useState(false)\n\n    useEffect(() => {\n      setIsValid(valid ?? (invalid === true ? false : undefined))\n    }, [valid, invalid])\n\n    useEffect(() => {\n      if (startDate) {\n        setStartDate(startDate)\n      }\n    }, [startDate])\n\n    useEffect(() => {\n      if (endDate) {\n        setEndDate(endDate)\n      }\n    }, [endDate])\n\n    useEffect(() => {\n      if (maxDate) {\n        setMaxDate(maxDate)\n      }\n    }, [maxDate])\n\n    useEffect(() => {\n      if (minDate) {\n        setMinDate(minDate)\n      }\n    }, [minDate])\n\n    useEffect(() => {\n      if (inputStartHoverValue) {\n        setInputValue(inputStartRef.current, inputStartHoverValue)\n        return\n      }\n\n      setInputValue(inputStartRef.current, _startDate)\n    }, [inputStartHoverValue, _startDate])\n\n    useEffect(() => {\n      if (inputEndHoverValue) {\n        setInputValue(inputEndRef.current, inputEndHoverValue)\n        return\n      }\n\n      setInputValue(inputEndRef.current, _endDate)\n    }, [inputEndHoverValue, _endDate])\n\n    useEffect(() => {\n      if (inputStartRef.current && inputStartRef.current.form) {\n        formRef.current = inputStartRef.current.form\n      }\n    }, [inputStartRef])\n\n    useEffect(() => {\n      if (formRef.current) {\n        formRef.current.addEventListener('submit', (event) => {\n          setTimeout(() => handleFormValidation(event.target as HTMLFormElement))\n        })\n\n        handleFormValidation(formRef.current)\n      }\n    }, [formRef, _startDate, _endDate])\n\n    const formatDate = (date: Date | string) => {\n      if (inputDateFormat) {\n        return inputDateFormat(\n          date instanceof Date ? new Date(date) : convertToDateObject(date, selectionType)\n        )\n      }\n\n      if (selectionType !== 'day') {\n        return date\n      }\n\n      const _date = new Date(date)\n\n      return timepicker ? _date.toLocaleString(locale) : _date.toLocaleDateString(locale)\n    }\n\n    const setInputValue = (el: HTMLInputElement | null, date: Date | string | null) => {\n      if (!el) {\n        return\n      }\n\n      if (date) {\n        el.value = formatDate(date) as string\n        return\n      }\n\n      el.value = ''\n    }\n\n    const handleDateHover = (date: Date | string | null) => {\n      if (selectEndDate) {\n        setInputEndHoverValue(date)\n      } else {\n        setInputStartHoverValue(date)\n      }\n    }\n\n    const handleClear = (event: React.MouseEvent<HTMLElement>) => {\n      event.stopPropagation()\n      setStartDate(null)\n      setEndDate(null)\n    }\n\n    const handleEndDateChange = (date: Date | string | null) => {\n      setEndDate(date)\n      setInputEndHoverValue(null)\n      onEndDateChange?.(date)\n\n      if (timepicker || footer) {\n        return\n      }\n\n      if (closeOnSelect && _startDate !== null) {\n        setVisible(false)\n      }\n    }\n\n    const handleFormValidation = (form: HTMLFormElement) => {\n      if (!form.classList.contains('was-validated')) {\n        return\n      }\n\n      if ((range && _startDate && _endDate) || (!range && _startDate)) {\n        return setIsValid(true)\n      }\n\n      setIsValid(false)\n    }\n\n    const handleStartDateChange = (date: Date | string | null) => {\n      setStartDate(date)\n      setInputStartHoverValue(null)\n      onStartDateChange?.(date)\n\n      if (timepicker || footer) {\n        return\n      }\n\n      if (closeOnSelect && !range) {\n        setVisible(false)\n      }\n    }\n\n    const handleOnChange = useDebouncedCallback((value: string, input: string) => {\n      const date = inputDateParse\n        ? inputDateParse(value)\n        : getLocalDateFromString(value, locale, timepicker)\n      if (date instanceof Date && date.getTime()) {\n        setCalendarDate(date)\n        if (input === 'start') {\n          setStartDate(date)\n        } else {\n          setEndDate(date)\n        }\n      }\n    }, inputOnChangeDelay)\n\n    const InputGroup = () => (\n      <div className=\"date-picker-input-group\">\n        <input\n          autoComplete=\"off\"\n          className={classNames('date-picker-input', {\n            hover: inputStartHoverValue,\n          })}\n          disabled={disabled}\n          {...(id && { id: getInputIdOrName(id, range, 'start') })}\n          {...(name && { name: getInputIdOrName(name, range, 'start') })}\n          {...(id &&\n            !Array.isArray(id) &&\n            !name && { name: range ? `${id}-start-date` : `${id}-date` })} // TODO: remove in v6\n          placeholder={Array.isArray(placeholder) ? placeholder[0] : placeholder}\n          readOnly={inputReadOnly}\n          required={required}\n          onChange={(event) => {\n            handleOnChange(event.target.value, 'start')\n          }}\n          onClick={() => setSelectEndDate(false)}\n          ref={inputStartRef}\n        />\n        {range && separator !== false && <div className=\"date-picker-separator\" />}\n        {range && (\n          <input\n            autoComplete=\"off\"\n            className={classNames('date-picker-input', {\n              hover: inputEndHoverValue,\n            })}\n            disabled={disabled}\n            {...(id && { id: getInputIdOrName(id, range, 'end') })}\n            {...(name && { name: getInputIdOrName(name, range, 'end') })}\n            {...(id && !Array.isArray(id) && !name && { name: `${id}-end-date` })} // TODO: remove in v6\n            placeholder={placeholder[1]}\n            readOnly={inputReadOnly}\n            required={required}\n            onChange={(event) => {\n              handleOnChange(event.target.value, 'end')\n            }}\n            onClick={() => setSelectEndDate(true)}\n            ref={inputEndRef}\n          />\n        )}\n        {indicator &&\n          (typeof indicator === 'boolean' ? (\n            <div\n              className=\"date-picker-indicator\"\n              {...(disabled !== false && {\n                onClick: () => setVisible(!_visible),\n                onKeyDown: (event) => {\n                  if (event.key === 'Enter') {\n                    setVisible(!_visible)\n                  }\n                },\n                tabIndex: 0,\n              })}\n            />\n          ) : (\n            indicator\n          ))}\n        {cleaner &&\n          (_startDate || _endDate) &&\n          (typeof cleaner === 'boolean' ? (\n            <div className=\"date-picker-cleaner\" onClick={(event) => handleClear(event)} />\n          ) : (\n            React.isValidElement(cleaner) &&\n            React.cloneElement(cleaner as React.ReactElement<any>, {\n              onClick: (event: React.MouseEvent<HTMLElement>) => handleClear(event),\n            })\n          ))}\n      </div>\n    )\n\n    return (\n      <CFormControlWrapper\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        {...(id && !Array.isArray(id) && { id: id })}\n        invalid={isValid === false ? true : false}\n        label={label}\n        text={text}\n        tooltipFeedback={tooltipFeedback}\n        valid={isValid}\n      >\n        <CPicker\n          className={classNames(\n            'date-picker',\n            {\n              [`date-picker-${size}`]: size,\n              disabled: disabled,\n              'is-invalid': isValid === false ? true : false,\n              'is-valid': isValid,\n            },\n            className\n          )}\n          disabled={disabled}\n          dropdownClassNames=\"date-picker-dropdown\"\n          footer={footer || timepicker}\n          footerContent={\n            <div className=\"date-picker-footer\">\n              {todayButton && (\n                <CButton\n                  className=\"me-auto\"\n                  color={todayButtonColor}\n                  size={todayButtonSize}\n                  variant={todayButtonVariant}\n                  onClick={() => {\n                    const date = new Date()\n                    handleStartDateChange(date)\n                    if (range) handleEndDateChange(date)\n                    setCalendarDate(date)\n                  }}\n                >\n                  {todayButton}\n                </CButton>\n              )}\n              {cancelButton && (\n                <CButton\n                  color={cancelButtonColor}\n                  size={cancelButtonSize}\n                  variant={cancelButtonVariant}\n                  onClick={() => {\n                    handleStartDateChange(initialStartDate)\n                    if (range) handleEndDateChange(initialEndDate)\n                    setVisible(false)\n                  }}\n                >\n                  {cancelButton}\n                </CButton>\n              )}\n              {confirmButton && (\n                <CButton\n                  color={confirmButtonColor}\n                  size={confirmButtonSize}\n                  variant={confirmButtonVariant}\n                  onClick={() => {\n                    setVisible(false)\n                  }}\n                >\n                  {confirmButton}\n                </CButton>\n              )}\n            </div>\n          }\n          toggler={toggler ?? InputGroup()}\n          portal={portal}\n          onHide={() => {\n            setVisible(false)\n            onHide?.()\n          }}\n          onShow={() => {\n            setInitialStartDate(_startDate)\n            setInitialEndDate(_endDate)\n            setVisible(true)\n            onShow?.()\n          }}\n          visible={_visible}\n          {...rest}\n          ref={ref}\n        >\n          <div className=\"date-picker-body\">\n            {ranges && (\n              <div className=\"date-picker-ranges\">\n                {Object.keys(ranges).map((key: string, index: number) => (\n                  <CButton\n                    color={rangesButtonsColor}\n                    key={index}\n                    onClick={() => {\n                      handleStartDateChange((ranges as { [key: string]: Date[] })[key][0])\n                      handleEndDateChange((ranges as { [key: string]: Date[] })[key][1])\n                    }}\n                    size={rangesButtonsSize}\n                    variant={rangesButtonsVariant}\n                  >\n                    {key}\n                  </CButton>\n                ))}\n              </div>\n            )}\n            <CCalendar\n              ariaNavNextMonthLabel={ariaNavNextMonthLabel}\n              ariaNavNextYearLabel={ariaNavNextYearLabel}\n              ariaNavPrevMonthLabel={ariaNavPrevMonthLabel}\n              ariaNavPrevYearLabel={ariaNavPrevYearLabel}\n              calendarDate={_calendarDate}\n              calendars={isMobile ? 1 : calendars}\n              className=\"date-picker-calendars\"\n              dayFormat={dayFormat}\n              disabledDates={disabledDates}\n              endDate={_endDate}\n              firstDayOfWeek={firstDayOfWeek}\n              locale={locale}\n              maxDate={_maxDate}\n              minDate={_minDate}\n              navigation={navigation}\n              navYearFirst={navYearFirst}\n              range={range}\n              selectAdjacementDays={selectAdjacementDays}\n              selectEndDate={selectEndDate}\n              selectionType={selectionType}\n              showAdjacementDays={showAdjacementDays}\n              showWeekNumber={showWeekNumber}\n              startDate={_startDate}\n              weekdayFormat={weekdayFormat}\n              weekNumbersLabel={weekNumbersLabel}\n              onDateHover={(date) => handleDateHover(date)}\n              onCalendarDateChange={(date) => setCalendarDate(date)}\n              onStartDateChange={(date) => handleStartDateChange(date)}\n              onEndDateChange={(date) => handleEndDateChange(date)}\n              onSelectEndChange={(value) => setSelectEndDate(value)}\n            />\n            {timepicker && (\n              <div className=\"date-picker-timepickers\">\n                {(isMobile && range) || (range && calendars === 1) ? (\n                  <>\n                    <CTimePicker\n                      container=\"inline\"\n                      disabled={_startDate === null ? true : false}\n                      locale={locale}\n                      onTimeChange={(_, __, date) => date && handleStartDateChange(date)}\n                      time={_startDate && new Date(_startDate)}\n                      variant=\"select\"\n                    />\n                    <CTimePicker\n                      container=\"inline\"\n                      disabled={_endDate === null ? true : false}\n                      locale={locale}\n                      onTimeChange={(_, __, date) => date && handleEndDateChange(date)}\n                      time={_endDate && new Date(_endDate)}\n                      variant=\"select\"\n                    />\n                  </>\n                ) : (\n                  Array.from({ length: calendars }).map((_, index) => (\n                    <CTimePicker\n                      container=\"inline\"\n                      disabled={\n                        index === 0\n                          ? _startDate === null\n                            ? true\n                            : false\n                          : _endDate === null\n                            ? true\n                            : false\n                      }\n                      key={index}\n                      locale={locale}\n                      onTimeChange={(_, __, date) =>\n                        index === 0\n                          ? date && handleStartDateChange(date)\n                          : date && handleEndDateChange(date)\n                      }\n                      time={\n                        index === 0\n                          ? _startDate && new Date(_startDate)\n                          : _endDate && new Date(_endDate)\n                      }\n                      variant=\"select\"\n                    />\n                  ))\n                )}\n              </div>\n            )}\n          </div>\n        </CPicker>\n      </CFormControlWrapper>\n    )\n  }\n)\n\nCDateRangePicker.displayName = 'CDateRangePicker'\n\nCDateRangePicker.propTypes = {\n  ...CCalendar.propTypes,\n  ...CFormControlWrapper.propTypes,\n  ...CPicker.propTypes,\n  cancelButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  cancelButtonColor: CButton.propTypes?.color,\n  cancelButtonSize: CButton.propTypes?.size,\n  cancelButtonVariant: CButton.propTypes?.variant,\n  calendars: PropTypes.number,\n  className: PropTypes.string,\n  cleaner: PropTypes.bool,\n  closeOnSelect: PropTypes.bool,\n  confirmButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  confirmButtonColor: CButton.propTypes?.color,\n  confirmButtonSize: CButton.propTypes?.size,\n  confirmButtonVariant: CButton.propTypes?.variant,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  indicator: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  inputDateFormat: PropTypes.func,\n  inputDateParse: PropTypes.func,\n  inputOnChangeDelay: PropTypes.number,\n  inputReadOnly: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  placeholder: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string.isRequired),\n  ]),\n  range: PropTypes.bool,\n  ranges: PropTypes.object,\n  rangesButtonsColor: CButton.propTypes?.color,\n  rangesButtonsSize: CButton.propTypes?.size,\n  rangesButtonsVariant: CButton.propTypes?.variant,\n  required: PropTypes.bool,\n  separator: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  size: PropTypes.oneOf(['sm', 'lg']),\n  timepicker: PropTypes.bool,\n  todayButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  todayButtonColor: CButton.propTypes?.color,\n  todayButtonSize: CButton.propTypes?.size,\n  todayButtonVariant: CButton.propTypes?.variant,\n}\n"]},"metadata":{},"sourceType":"module"}