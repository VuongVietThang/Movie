{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CHeaderToggler = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"button\", __assign({\n    type: \"button\",\n    className: classNames('header-toggler', className)\n  }, rest, {\n    ref: ref\n  }), children !== null && children !== void 0 ? children : React.createElement(\"span\", {\n    className: \"header-toggler-icon\"\n  }));\n});\nCHeaderToggler.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCHeaderToggler.displayName = 'CHeaderToggler';\nexport { CHeaderToggler };","map":{"version":3,"mappings":";;;;IAWaA,cAAc,GAAGC,UAAU,CACtC,UAACC,EAAD,EAAmCC,GAAnC,EAAsC;AAAnC,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAwBC,IAAI,GAA9BC,qCAAE;;AACD,SACEC;AAAQC,QAAI,EAAC,QAAb;AAAsBJ,aAAS,EAAEK,UAAU,CAAC,gBAAD,EAAmBL,SAAnB;AAA3C,KAA8EC,IAA9E,EAAkF;AAAEF,OAAG,EAAEA;AAAP,GAAlF,GACGO,QAAQ,SAAR,YAAQ,KAAR,oBAAYH;AAAMH,aAAS,EAAC;AAAhB,IADf,CADF;AAKD,CAPqC;AAUxCJ,cAAc,CAACW,SAAf,GAA2B;AACzBD,UAAQ,EAAEE,SAAS,CAACC,IADK;AAEzBT,WAAS,EAAEQ,SAAS,CAACE;AAFI,CAA3B;AAKAd,cAAc,CAACe,WAAf,GAA6B,gBAA7B","names":["CHeaderToggler","forwardRef","_a","ref","className","rest","__rest","React","type","classNames","children","propTypes","PropTypes","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\header\\CHeaderToggler.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CHeaderTogglerProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CHeaderToggler = forwardRef<HTMLButtonElement, CHeaderTogglerProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <button type=\"button\" className={classNames('header-toggler', className)} {...rest} ref={ref}>\n        {children ?? <span className=\"header-toggler-icon\"></span>}\n      </button>\n    )\n  },\n)\n\nCHeaderToggler.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCHeaderToggler.displayName = 'CHeaderToggler'\n"]},"metadata":{},"sourceType":"module"}