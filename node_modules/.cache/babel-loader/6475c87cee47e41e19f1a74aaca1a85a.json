{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Movie\\\\src\\\\Components\\\\Admin\\\\movieForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'; // ✅ đẹp, hỗ trợ dark mode\n\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport \"./style.css\";\nimport { CFormInput, CFormTextarea } from \"@coreui/react\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieForm() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genres, setGenres] = useState([]); // Lưu danh sách thể loại từ backend\n\n  const [selectedGenres, setSelectedGenres] = useState([]); // Lưu các thể loại được chọn\n\n  const [description, setDescription] = useState(\"\");\n  const [releaseDate, setReleaseDate] = useState(\"\");\n  const [video, setVideo] = useState(null); // Trạng thái lưu video\n\n  const [poster, setPoster] = useState(null);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const API_BASE = \"http://localhost/Movie/backend/API\"; // Load genres từ backend (API)\n\n  useEffect(() => {\n    axios.get(`${API_BASE}/genres.php`).then(res => setGenres(res.data)).catch(err => console.error(\"Lỗi khi lấy danh sách thể loại:\", err));\n  }, []); // Nếu có id thì load thông tin phim\n\n  useEffect(() => {\n    if (id) {\n      axios.get(`${API_BASE}/get_movie.php?id=${id}`).then(res => {\n        const movie = res.data;\n        setTitle(movie.title);\n        setAuthor(movie.author);\n        setDescription(movie.description);\n        setReleaseDate(movie.release_date);\n        setPoster(movie.poster_url);\n        setSelectedGenres(movie.genres_id); // genres_id sẽ là mảng\n      }).catch(err => console.error(\"Lỗi khi lấy thông tin phim:\", err));\n    }\n  }, [id]); // Hàm xử lý gửi dữ liệu lên backend\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"author\", author);\n    formData.append(\"description\", description);\n    formData.append(\"release_date\", releaseDate);\n    selectedGenres.forEach(genre => {\n      formData.append(\"category[]\", genre.id);\n    }); // Nếu có video, append vào FormData\n\n    if (video) {\n      formData.append(\"video\", video);\n    }\n\n    if (poster) {\n      formData.append(\"poster\", poster);\n    } // Tạo request tùy thuộc vào việc có id hay không (thêm hay cập nhật)\n\n\n    const request = id ? axios.post(`${API_BASE}/update_movie.php?id=${id}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }) : axios.post(`${API_BASE}/add_movie.php`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    request.then(() => navigate(\"/admin\")).catch(err => console.error(\"Lỗi khi gửi dữ liệu:\", err));\n  }; // Hàm xử lý thay đổi thể loại\n  // const handleGenreChange = (e) => {\n  //   const selectedOptions = Array.from(\n  //     e.target.selectedOptions,\n  //     (option) => option.value\n  //   );\n  //   setSelectedGenres(selectedOptions);\n  // };\n  //   const handleGenreChange = (e) => {\n  //   setSelectedGenres(e.value);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Movie Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        type: \"text\",\n        placeholder: \"Movie Title\",\n        \"aria-label\": \"default input example\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        type: \"text\",\n        placeholder: \"Author\",\n        \"aria-label\": \"default input example\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        value: selectedGenres,\n        onChange: e => setSelectedGenres(e.value),\n        options: genres,\n        optionLabel: \"name\",\n        display: \"chip\",\n        placeholder: \" Select Genres\",\n        maxSelectedLabels: 3,\n        className: \"w-full\",\n        style: {\n          width: '100%',\n          minWidth: '320px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CFormTextarea, {\n        className: \"mb-3\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\",\n        \"aria-label\": \"Disabled textarea example\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Ng\\xE0y xu\\u1EA5t b\\u1EA3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: releaseDate,\n        onChange: e => setReleaseDate(e.target.value),\n        className: \"border w-full px-2 py-1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\u1EA3i \\u1EA3nh poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setPoster(e.target.files[0]),\n        className: \"border w-full px-2 py-1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\u1EA3i video l\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setVideo(e.target.files[0]),\n        className: \"border w-full px-2 py-1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 text-white px-4 py-2 button rounded\",\n      type: \"submit\",\n      children: id ? \"Cập nhật\" : \"Thêm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieForm, \"DoMUzq+DxR8Gm0Er7gu65U3eK4A=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"sources":["C:/wamp64/www/Movie/src/Components/Admin/movieForm.jsx"],"names":["useNavigate","useParams","useState","useEffect","axios","CFormInput","CFormTextarea","MultiSelect","MovieForm","title","setTitle","author","setAuthor","genres","setGenres","selectedGenres","setSelectedGenres","description","setDescription","releaseDate","setReleaseDate","video","setVideo","poster","setPoster","id","navigate","API_BASE","get","then","res","data","catch","err","console","error","movie","release_date","poster_url","genres_id","handleSubmit","e","preventDefault","formData","FormData","append","forEach","genre","request","post","headers","target","value","width","minWidth","files"],"mappings":"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","sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'; // ✅ đẹp, hỗ trợ dark mode\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\n\r\n\r\nimport \"./style.css\";\r\nimport { CFormInput, CFormTextarea } from \"@coreui/react\";\r\nimport { MultiSelect } from \"primereact/multiselect\";\r\n\r\n\r\nfunction MovieForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genres, setGenres] = useState([]); // Lưu danh sách thể loại từ backend\r\n  const [selectedGenres, setSelectedGenres] = useState([]); // Lưu các thể loại được chọn\r\n  const [description, setDescription] = useState(\"\");\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n  const [video, setVideo] = useState(null); // Trạng thái lưu video\r\n  const [poster, setPoster] = useState(null);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const API_BASE = \"http://localhost/Movie/backend/API\";\r\n\r\n  // Load genres từ backend (API)\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_BASE}/genres.php`)\r\n      .then((res) => setGenres(res.data))\r\n      .catch((err) => console.error(\"Lỗi khi lấy danh sách thể loại:\", err));\r\n  }, []);\r\n\r\n  // Nếu có id thì load thông tin phim\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get(`${API_BASE}/get_movie.php?id=${id}`)\r\n        .then((res) => {\r\n          const movie = res.data;\r\n          setTitle(movie.title);\r\n          setAuthor(movie.author);\r\n          setDescription(movie.description);\r\n          setReleaseDate(movie.release_date);\r\n          setPoster(movie.poster_url);\r\n          setSelectedGenres(movie.genres_id); // genres_id sẽ là mảng\r\n        })\r\n        .catch((err) => console.error(\"Lỗi khi lấy thông tin phim:\", err));\r\n    }\r\n  }, [id]);\r\n\r\n  // Hàm xử lý gửi dữ liệu lên backend\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"author\", author);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"release_date\", releaseDate);\r\n\r\n    selectedGenres.forEach((genre) => {\r\n      formData.append(\"category[]\", genre.id);\r\n    });\r\n\r\n    // Nếu có video, append vào FormData\r\n    if (video) {\r\n      formData.append(\"video\", video);\r\n    }\r\n    if (poster) {\r\n      formData.append(\"poster\", poster);\r\n    }\r\n\r\n    // Tạo request tùy thuộc vào việc có id hay không (thêm hay cập nhật)\r\n    const request = id\r\n      ? axios.post(`${API_BASE}/update_movie.php?id=${id}`, formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        })\r\n      : axios.post(`${API_BASE}/add_movie.php`, formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n\r\n    request\r\n      .then(() => navigate(\"/admin\"))\r\n      .catch((err) => console.error(\"Lỗi khi gửi dữ liệu:\", err));\r\n  };\r\n\r\n  // Hàm xử lý thay đổi thể loại\r\n  // const handleGenreChange = (e) => {\r\n  //   const selectedOptions = Array.from(\r\n  //     e.target.selectedOptions,\r\n  //     (option) => option.value\r\n  //   );\r\n  //   setSelectedGenres(selectedOptions);\r\n  // };\r\n\r\n  //   const handleGenreChange = (e) => {\r\n  //   setSelectedGenres(e.value);\r\n  // };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4 p-5\">\r\n      <div>\r\n        <label className=\"block font-medium\">Movie Title</label>\r\n        <CFormInput\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          type=\"text\"\r\n          placeholder=\"Movie Title\"\r\n          aria-label=\"default input example\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Author</label>\r\n        <CFormInput\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          type=\"text\"\r\n          placeholder=\"Author\"\r\n          aria-label=\"default input example\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Genres</label> <br />\r\n        <MultiSelect\r\n          value={selectedGenres}\r\n          onChange={(e) => setSelectedGenres(e.value)}\r\n          options={genres}\r\n          optionLabel=\"name\"\r\n          display=\"chip\"\r\n          placeholder=\" Select Genres\"\r\n          maxSelectedLabels={3}\r\n          className=\"w-full\"\r\n          style={{ width: '100%', minWidth: '320px' }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Description</label>\r\n        {/* <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"border w-full px-2 py-1\"\r\n          rows={4}\r\n        ></textarea> */}\r\n        <CFormTextarea\r\n          className=\"mb-3\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          placeholder=\"Description\"\r\n          aria-label=\"Disabled textarea example\"\r\n          required\r\n        ></CFormTextarea>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Ngày xuất bản</label>\r\n        <input\r\n          type=\"date\"\r\n          value={releaseDate}\r\n          onChange={(e) => setReleaseDate(e.target.value)}\r\n          className=\"border w-full px-2 py-1\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Tải ảnh poster</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setPoster(e.target.files[0])}\r\n          className=\"border w-full px-2 py-1\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      {/* Input file để tải video */}\r\n      <div>\r\n        <label className=\"block font-medium\">Tải video lên</label>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setVideo(e.target.files[0])}\r\n          className=\"border w-full px-2 py-1\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        className=\"bg-green-500 text-white px-4 py-2 button rounded\"\r\n        type=\"submit\"\r\n      >\r\n        {id ? \"Cập nhật\" : \"Thêm\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MovieForm;\r\n"]},"metadata":{},"sourceType":"module"}