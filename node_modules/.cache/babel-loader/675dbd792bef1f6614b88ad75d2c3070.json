{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CFormLabel = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      customClassName = _a.customClassName,\n      rest = __rest(_a, [\"children\", \"className\", \"customClassName\"]);\n\n  return React.createElement(\"label\", __assign({\n    className: customClassName !== null && customClassName !== void 0 ? customClassName : classNames('form-label', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCFormLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  customClassName: PropTypes.string\n};\nCFormLabel.displayName = 'CFormLabel';\nexport { CFormLabel };","map":{"version":3,"mappings":";;;;IAeaA,UAAU,GAAGC,UAAU,CAClC,UAACC,EAAD,EAAoDC,GAApD,EAAuD;AAApD,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAqBC,eAAe,qBAApC;AAAA,MAAyCC,IAAI,GAA/CC,wDAAE;;AACD,SACEC,KAAO,cAAP,CAAO,OAAP,EAAOC;AAAAL,aAAS,EAAEC,eAAe,KAAf,uBAAe,KAAf,2BAAmBK,UAAU,CAAC,YAAD,EAAeN,SAAf;AAAxC,KAAuEE,IAAvE,EAA6E;AAAAH,OAAG,EAAEA;AAAL,GAA7E,CAAP,EACGQ,QADH,CADF;AAKD,CAPiC;AAUpCX,UAAU,CAACY,SAAX,GAAuB;AACrBD,UAAQ,EAAEE,SAAS,CAACC,IADC;AAErBV,WAAS,EAAES,SAAS,CAACE,MAFA;AAGrBV,iBAAe,EAAEQ,SAAS,CAACE;AAHN,CAAvB;AAMAf,UAAU,CAACgB,WAAX,GAAyB,YAAzB","names":["CFormLabel","forwardRef","_a","ref","className","customClassName","rest","__rest","React","__assign","classNames","children","propTypes","PropTypes","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\components\\form\\CFormLabel.tsx"],"sourcesContent":["import React, { forwardRef, LabelHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CFormLabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * A string of all className you want to be applied to the component, and override standard className value.\n   */\n  customClassName?: string\n}\n\nexport const CFormLabel = forwardRef<HTMLLabelElement, CFormLabelProps>(\n  ({ children, className, customClassName, ...rest }, ref) => {\n    return (\n      <label className={customClassName ?? classNames('form-label', className)} {...rest} ref={ref}>\n        {children}\n      </label>\n    )\n  },\n)\n\nCFormLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  customClassName: PropTypes.string,\n}\n\nCFormLabel.displayName = 'CFormLabel'\n"]},"metadata":{},"sourceType":"module"}