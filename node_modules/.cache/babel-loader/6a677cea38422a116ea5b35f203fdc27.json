{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CBreadcrumbItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      active = _a.active,\n      as = _a.as,\n      className = _a.className,\n      href = _a.href,\n      rest = __rest(_a, [\"children\", \"active\", \"as\", \"className\", \"href\"]);\n\n  return React.createElement(\"li\", __assign({\n    className: classNames('breadcrumb-item', {\n      active: active\n    }, className)\n  }, active && {\n    'aria-current': 'page'\n  }, rest, {\n    ref: ref\n  }), href ? React.createElement(CLink, {\n    as: as,\n    href: href\n  }, children) : children);\n});\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string\n};\nCBreadcrumbItem.displayName = 'CBreadcrumbItem';\nexport { CBreadcrumbItem };","map":{"version":3,"mappings":";;;;;IA6BaA,eAAe,GAC1BC,UAAU,CACR,UAACC,EAAD,EAAqDC,GAArD,EAAwD;AAArD,cAAQ,cAAR;AAAA,MAAUC,MAAM,YAAhB;AAAA,MAAkBC,EAAE,QAApB;AAAA,MAAsBC,SAAS,eAA/B;AAAA,MAAiCC,IAAI,UAArC;AAAA,MAA0CC,IAAI,cAAhD,iDAAgD,CAA9C;;AACD,SACEC,KACE,cADF,CACE,IADF,EACEC;AAAAJ,aAAS,EAAEK,UAAU,CACnB,iBADmB,EAEnB;AACEP,YAAM,EAAEA;AADV,KAFmB,EAKnBE,SALmB;AAArB,KAOKF,MAAM,IAAI;AAAE,oBAAgB;AAAlB,GAPf,EAQII,IARJ,EASA;AAAAL,OAAG,EAAEA;AAAL,GATA,CADF,EAYGI,IAAI,GACHE,KAAC,cAAD,CAACG,KAAD,EAAM;AAACP,MAAE,EAAEA,EAAL;AAASE,QAAI,EAAEA;AAAf,GAAN,EACGM,QADH,CADG,GAKHA,QAjBJ,CADF;AAsBD,CAxBO;AA2BZb,eAAe,CAACc,SAAhB,GAA4B;AAC1BV,QAAM,EAAEW,SAAS,CAACC,IADQ;AAE1BH,UAAQ,EAAEE,SAAS,CAACE,IAFM;AAG1BX,WAAS,EAAES,SAAS,CAACG,MAHK;AAI1BX,MAAI,EAAEQ,SAAS,CAACG;AAJU,CAA5B;AAOAlB,eAAe,CAACmB,WAAhB,GAA8B,iBAA9B","names":["CBreadcrumbItem","forwardRef","_a","ref","active","as","className","href","rest","React","__assign","classNames","CLink","children","propTypes","PropTypes","bool","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\components\\breadcrumb\\CBreadcrumbItem.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink } from '../link/CLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CBreadcrumbItemProps extends HTMLAttributes<HTMLLIElement> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   *\n   * @since 5.4.0\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The `href` attribute for the inner `<CLink>` component.\n   */\n  href?: string\n}\n\nexport const CBreadcrumbItem: PolymorphicRefForwardingComponent<'li', CBreadcrumbItemProps> =\n  forwardRef<HTMLLIElement, CBreadcrumbItemProps>(\n    ({ children, active, as, className, href, ...rest }, ref) => {\n      return (\n        <li\n          className={classNames(\n            'breadcrumb-item',\n            {\n              active: active,\n            },\n            className,\n          )}\n          {...(active && { 'aria-current': 'page' })}\n          {...rest}\n          ref={ref}\n        >\n          {href ? (\n            <CLink as={as} href={href}>\n              {children}\n            </CLink>\n          ) : (\n            children\n          )}\n        </li>\n      )\n    },\n  )\n\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string,\n}\n\nCBreadcrumbItem.displayName = 'CBreadcrumbItem'\n"]},"metadata":{},"sourceType":"module"}