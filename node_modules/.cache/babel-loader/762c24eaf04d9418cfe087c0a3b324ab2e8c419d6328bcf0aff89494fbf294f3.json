{"ast":null,"code":"import { useRef } from 'react';\nimport { createPopper } from '@popperjs/core';\nvar usePopper = function () {\n  var _popper = useRef(undefined);\n  var el = useRef(null);\n  var initPopper = function (reference, popper, options) {\n    _popper.current = createPopper(reference, popper, options);\n    el.current = popper;\n  };\n  var destroyPopper = function () {\n    var popperInstance = _popper.current;\n    if (popperInstance && el.current) {\n      popperInstance.destroy();\n    }\n    _popper.current = undefined;\n  };\n  var updatePopper = function (options) {\n    var popperInstance = _popper.current;\n    if (popperInstance && options) {\n      popperInstance.setOptions(options);\n    }\n    if (popperInstance) {\n      popperInstance.update();\n    }\n  };\n  return {\n    popper: _popper.current,\n    initPopper: initPopper,\n    destroyPopper: destroyPopper,\n    updatePopper: updatePopper\n  };\n};\nexport { usePopper };","map":{"version":3,"names":["usePopper","_popper","useRef","undefined","el","initPopper","reference","popper","options","current","createPopper","destroyPopper","popperInstance","destroy","updatePopper","setOptions","update"],"sources":["/Users/thaiduy/Movie/node_modules/@coreui/react/src/hooks/usePopper.ts"],"sourcesContent":["import { useRef } from 'react'\nimport { createPopper } from '@popperjs/core'\nimport type { Instance, Options } from '@popperjs/core'\n\ninterface UsePopperOutput {\n  popper: Instance | undefined\n  initPopper: (reference: HTMLElement, popper: HTMLElement, options: Partial<Options>) => void\n  destroyPopper: () => void\n  updatePopper: (options?: Partial<Options>) => void\n}\n\nexport const usePopper = (): UsePopperOutput => {\n  const _popper = useRef<Instance>(undefined)\n  const el = useRef<HTMLElement>(null)\n\n  const initPopper = (reference: HTMLElement, popper: HTMLElement, options: Partial<Options>) => {\n    _popper.current = createPopper(reference, popper, options)\n    el.current = popper\n  }\n\n  const destroyPopper = () => {\n    const popperInstance = _popper.current\n\n    if (popperInstance && el.current) {\n      popperInstance.destroy()\n    }\n\n    _popper.current = undefined\n  }\n\n  const updatePopper = (options?: Partial<Options>) => {\n    const popperInstance = _popper.current\n\n    if (popperInstance && options) {\n      popperInstance.setOptions(options)\n    }\n\n    if (popperInstance) {\n      popperInstance.update()\n    }\n  }\n\n  return {\n    popper: _popper.current,\n    initPopper,\n    destroyPopper,\n    updatePopper,\n  }\n}\n"],"mappings":";;AAWa,IAAAA,SAAS,GAAG,SAAAA,CAAA;EACvB,IAAMC,OAAO,GAAGC,MAAM,CAAWC,SAAS,CAAC;EAC3C,IAAMC,EAAE,GAAGF,MAAM,CAAc,IAAI,CAAC;EAEpC,IAAMG,UAAU,GAAG,SAAAA,CAACC,SAAsB,EAAEC,MAAmB,EAAEC,OAAyB;IACxFP,OAAO,CAACQ,OAAO,GAAGC,YAAY,CAACJ,SAAS,EAAEC,MAAM,EAAEC,OAAO,CAAC;IAC1DJ,EAAE,CAACK,OAAO,GAAGF,MAAM;EACrB,CAAC;EAED,IAAMI,aAAa,GAAG,SAAAA,CAAA;IACpB,IAAMC,cAAc,GAAGX,OAAO,CAACQ,OAAO;IAEtC,IAAIG,cAAc,IAAIR,EAAE,CAACK,OAAO,EAAE;MAChCG,cAAc,CAACC,OAAO,EAAE;;IAG1BZ,OAAO,CAACQ,OAAO,GAAGN,SAAS;EAC7B,CAAC;EAED,IAAMW,YAAY,GAAG,SAAAA,CAACN,OAA0B;IAC9C,IAAMI,cAAc,GAAGX,OAAO,CAACQ,OAAO;IAEtC,IAAIG,cAAc,IAAIJ,OAAO,EAAE;MAC7BI,cAAc,CAACG,UAAU,CAACP,OAAO,CAAC;;IAGpC,IAAII,cAAc,EAAE;MAClBA,cAAc,CAACI,MAAM,EAAE;;EAE3B,CAAC;EAED,OAAO;IACLT,MAAM,EAAEN,OAAO,CAACQ,OAAO;IACvBJ,UAAU,EAAAA,UAAA;IACVM,aAAa,EAAAA,aAAA;IACbG,YAAY,EAAAA;GACb;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}