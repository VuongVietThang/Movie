{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Movie-react\\\\src\\\\Components\\\\Admin\\\\movieForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieForm() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genres, setGenres] = useState([]); // Lưu danh sách thể loại từ backend\n\n  const [selectedGenres, setSelectedGenres] = useState([]); // Lưu các thể loại được chọn\n\n  const [description, setDescription] = useState(\"\");\n  const [releaseDate, setReleaseDate] = useState(\"\");\n  const [video, setVideo] = useState(null); // Trạng thái lưu video\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const API_BASE = \"http://localhost/Movie-react/backend/API\"; // Load genres từ backend (API)\n\n  useEffect(() => {\n    axios.get(`${API_BASE}/genres.php`).then(res => setGenres(res.data)).catch(err => console.error(\"Lỗi khi lấy danh sách thể loại:\", err));\n  }, []); // Nếu có id thì load thông tin phim\n\n  useEffect(() => {\n    if (id) {\n      axios.get(`${API_BASE}/get_movie.php?id=${id}`).then(res => {\n        const movie = res.data;\n        setTitle(movie.title);\n        setAuthor(movie.author);\n        setDescription(movie.description);\n        setReleaseDate(movie.release_date);\n        setSelectedGenres(movie.genres_id.map(String)); // genres_id sẽ là mảng\n      }).catch(err => console.error(\"Lỗi khi lấy thông tin phim:\", err));\n    }\n  }, [id]); // Hàm xử lý gửi dữ liệu lên backend\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"author\", author);\n    formData.append(\"description\", description);\n    formData.append(\"release_date\", releaseDate);\n    selectedGenres.forEach(genre => {\n      formData.append(\"category[]\", genre);\n    }); // Nếu có video, append vào FormData\n\n    if (video) {\n      formData.append(\"video\", video);\n    } // Tạo request tùy thuộc vào việc có id hay không (thêm hay cập nhật)\n\n\n    const request = id ? axios.post(`${API_BASE}/update_movie.php?id=${id}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }) : axios.post(`${API_BASE}/add_movie.php`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    request.then(() => navigate(\"/admin\")).catch(err => console.error(\"Lỗi khi gửi dữ liệu:\", err));\n  }; // Hàm xử lý thay đổi thể loại\n\n\n  const handleGenreChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    setSelectedGenres(selectedOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\xEAn phim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"border w-full px-2 py-1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\xE1c gi\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        className: \"border w-full px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Th\\u1EC3 lo\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: selectedGenres,\n        onChange: handleGenreChange,\n        className: \"border w-full px-2 py-1\",\n        required: true,\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"M\\xF4 t\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"border w-full px-2 py-1\",\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Ng\\xE0y xu\\u1EA5t b\\u1EA3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: releaseDate,\n        onChange: e => setReleaseDate(e.target.value),\n        className: \"border w-full px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\u1EA3i video l\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setVideo(e.target.files[0]),\n        className: \"border w-full px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 text-white px-4 py-2 rounded\",\n      type: \"submit\",\n      children: id ? \"Cập nhật\" : \"Thêm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieForm, \"mtGA/qmtHN+bvw49ElfwQKsqrrs=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"sources":["C:/wamp64/www/Movie-react/src/Components/Admin/movieForm.jsx"],"names":["useNavigate","useParams","useState","useEffect","axios","MovieForm","title","setTitle","author","setAuthor","genres","setGenres","selectedGenres","setSelectedGenres","description","setDescription","releaseDate","setReleaseDate","video","setVideo","id","navigate","API_BASE","get","then","res","data","catch","err","console","error","movie","release_date","genres_id","map","String","handleSubmit","e","preventDefault","formData","FormData","append","forEach","genre","request","post","headers","handleGenreChange","selectedOptions","Array","from","target","option","value","name","files"],"mappings":"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","sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction MovieForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genres, setGenres] = useState([]);   // Lưu danh sách thể loại từ backend\r\n  const [selectedGenres, setSelectedGenres] = useState([]); // Lưu các thể loại được chọn\r\n  const [description, setDescription] = useState(\"\");\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n  const [video, setVideo] = useState(null); // Trạng thái lưu video\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const API_BASE = \"http://localhost/Movie-react/backend/API\";\r\n\r\n  // Load genres từ backend (API)\r\n  useEffect(() => {\r\n    axios.get(`${API_BASE}/genres.php`)\r\n      .then(res => setGenres(res.data))\r\n      .catch(err => console.error(\"Lỗi khi lấy danh sách thể loại:\", err));\r\n  }, []);\r\n\r\n  // Nếu có id thì load thông tin phim\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios.get(`${API_BASE}/get_movie.php?id=${id}`)\r\n        .then(res => {\r\n          \r\n          const movie = res.data;\r\n          setTitle(movie.title);\r\n          setAuthor(movie.author);\r\n          setDescription(movie.description);\r\n          setReleaseDate(movie.release_date);\r\n          setSelectedGenres(movie.genres_id.map(String)); // genres_id sẽ là mảng\r\n        })\r\n        .catch(err => console.error(\"Lỗi khi lấy thông tin phim:\", err));\r\n    }\r\n  }, [id]);\r\n\r\n  // Hàm xử lý gửi dữ liệu lên backend\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"author\", author);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"release_date\", releaseDate);\r\n    selectedGenres.forEach(genre => {\r\n  formData.append(\"category[]\", genre);\r\n});\r\n\r\n    // Nếu có video, append vào FormData\r\n    if (video) {\r\n      formData.append(\"video\", video);\r\n    }\r\n\r\n    // Tạo request tùy thuộc vào việc có id hay không (thêm hay cập nhật)\r\n    const request = id\r\n      ? axios.post(`${API_BASE}/update_movie.php?id=${id}`, formData, { headers: { \"Content-Type\": \"multipart/form-data\" } })\r\n      : axios.post(`${API_BASE}/add_movie.php`, formData, { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n\r\n    request.then(() => navigate(\"/admin\"))\r\n      .catch(err => console.error(\"Lỗi khi gửi dữ liệu:\", err));\r\n  };\r\n\r\n  // Hàm xử lý thay đổi thể loại\r\n  const handleGenreChange = (e) => {\r\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\r\n    setSelectedGenres(selectedOptions);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block font-medium\">Tên phim</label>\r\n        <input \r\n          value={title} \r\n          onChange={e => setTitle(e.target.value)} \r\n          className=\"border w-full px-2 py-1\" \r\n          required \r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Tác giả</label>\r\n        <input \r\n          value={author} \r\n          onChange={e => setAuthor(e.target.value)} \r\n          className=\"border w-full px-2 py-1\" \r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Thể loại</label>\r\n        <select\r\n          multiple\r\n          value={selectedGenres}\r\n          onChange={handleGenreChange}\r\n          className=\"border w-full px-2 py-1\"\r\n          required\r\n        >\r\n          {genres.map(genre => (\r\n            <option key={genre.id} value={genre.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Mô tả</label>\r\n        <textarea \r\n          value={description} \r\n          onChange={e => setDescription(e.target.value)} \r\n          className=\"border w-full px-2 py-1\" \r\n          rows={4}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Ngày xuất bản</label>\r\n        <input \r\n          type=\"date\" \r\n          value={releaseDate} \r\n          onChange={e => setReleaseDate(e.target.value)} \r\n          className=\"border w-full px-2 py-1\" \r\n        />\r\n      </div>\r\n\r\n      {/* Input file để tải video */}\r\n      <div>\r\n        <label className=\"block font-medium\">Tải video lên</label>\r\n        <input \r\n          type=\"file\" \r\n          onChange={e => setVideo(e.target.files[0])} \r\n          className=\"border w-full px-2 py-1\" \r\n        />\r\n      </div>\r\n\r\n      <button className=\"bg-green-500 text-white px-4 py-2 rounded\" type=\"submit\">\r\n        {id ? \"Cập nhật\" : \"Thêm\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MovieForm;\r\n"]},"metadata":{},"sourceType":"module"}