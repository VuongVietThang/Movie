{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CProgressStackedContext } from './CProgressStackedContext.js';\nvar CProgressStacked = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"div\", __assign({\n    className: classNames('progress-stacked', className),\n    ref: ref\n  }, rest), React.createElement(CProgressStackedContext.Provider, {\n    value: {\n      stacked: true\n    }\n  }, children));\n});\nCProgressStacked.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCProgressStacked.displayName = 'CProgressStacked';\nexport { CProgressStacked };","map":{"version":3,"mappings":";;;;;IAaaA,gBAAgB,GAAGC,UAAU,CACxC,UAACC,EAAD,EAAmCC,GAAnC,EAAsC;AAAnC,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAwBC,IAAI,GAA9BC,qCAAE;;AACD,SACEC;AAAKH,aAAS,EAAEI,UAAU,CAAC,kBAAD,EAAqBJ,SAArB,CAA1B;AAA2DD,OAAG,EAAEA;AAAhE,KAAyEE,IAAzE,GACEE,oBAACE,uBAAuB,CAACC,QAAzB,EAAiC;AAC/BC,SAAK,EAAE;AACLC,aAAO,EAAE;AADJ;AADwB,GAAjC,EAKGC,QALH,CADF,CADF;AAWD,CAbuC;AAgB1Cb,gBAAgB,CAACc,SAAjB,GAA6B;AAC3BD,UAAQ,EAAEE,SAAS,CAACC,IADO;AAE3BZ,WAAS,EAAEW,SAAS,CAACE;AAFM,CAA7B;AAKAjB,gBAAgB,CAACkB,WAAjB,GAA+B,kBAA/B","names":["CProgressStacked","forwardRef","_a","ref","className","rest","__rest","React","classNames","CProgressStackedContext","Provider","value","stacked","children","propTypes","PropTypes","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\components\\progress\\CProgressStacked.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CProgressStackedContext } from './CProgressStackedContext'\n\nexport interface CProgressStackedProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CProgressStacked = forwardRef<HTMLDivElement, CProgressStackedProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('progress-stacked', className)} ref={ref} {...rest}>\n        <CProgressStackedContext.Provider\n          value={{\n            stacked: true,\n          }}\n        >\n          {children}\n        </CProgressStackedContext.Provider>\n      </div>\n    )\n  }\n)\n\nCProgressStacked.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCProgressStacked.displayName = 'CProgressStacked'\n"]},"metadata":{},"sourceType":"module"}