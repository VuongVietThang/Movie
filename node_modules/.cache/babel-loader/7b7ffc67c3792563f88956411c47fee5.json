{"ast":null,"code":"import PropTypes from 'prop-types';\nvar colorPropType = PropTypes.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark', 'light']), PropTypes.string]);\nvar fallbackPlacementsPropType = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(['top', 'bottom', 'right', 'left']).isRequired), PropTypes.oneOf(['top', 'bottom', 'right', 'left'])]);\nvar placementPropType = PropTypes.oneOf(['auto', 'auto-start', 'auto-end', 'top-end', 'top', 'top-start', 'bottom-end', 'bottom', 'bottom-start', 'right-start', 'right', 'right-end', 'left-start', 'left', 'left-end']);\nvar shapePropType = PropTypes.oneOfType([PropTypes.oneOf(['rounded', 'rounded-top', 'rounded-end', 'rounded-bottom', 'rounded-start', 'rounded-circle', 'rounded-pill', 'rounded-0', 'rounded-1', 'rounded-2', 'rounded-3']), PropTypes.string]);\nvar textColorsPropType = PropTypes.oneOfType([colorPropType, PropTypes.oneOf(['white', 'muted']), PropTypes.string]);\nvar triggerPropType = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'click']).isRequired), PropTypes.oneOf(['hover', 'focus', 'click'])]);\nexport { colorPropType, fallbackPlacementsPropType, placementPropType, shapePropType, textColorsPropType, triggerPropType };","map":{"version":3,"mappings":";AAIa,iBAAa,GAAGA,SAAS,CAACC,SAAV,CAAoB,CAC/CD,SAAS,CAACE,KAAV,CAAgB,CACd,SADc,EAEd,WAFc,EAGd,SAHc,EAId,QAJc,EAKd,SALc,EAMd,MANc,EAOd,MAPc,EAQd,OARc,CAAhB,CAD+C,EAW/CF,SAAS,CAACG,MAXqC,CAApB,CAAhB;AAcA,8BAA0B,GAAGH,SAAS,CAACC,SAAV,CAAoB,CAC5DD,SAAS,CAACI,OAAV,CAAkBJ,SAAS,CAACE,KAAV,CAA4B,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,EAA2B,MAA3B,CAA5B,EAAgEG,UAAlF,CAD4D,EAE5DL,SAAS,CAACE,KAAV,CAA4B,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,EAA2B,MAA3B,CAA5B,CAF4D,CAApB,CAA7B;AAKA,qBAAiB,GAAGF,SAAS,CAACE,KAAV,CAA4B,CAC3D,MAD2D,EAE3D,YAF2D,EAG3D,UAH2D,EAI3D,SAJ2D,EAK3D,KAL2D,EAM3D,WAN2D,EAO3D,YAP2D,EAQ3D,QAR2D,EAS3D,cAT2D,EAU3D,aAV2D,EAW3D,OAX2D,EAY3D,WAZ2D,EAa3D,YAb2D,EAc3D,MAd2D,EAe3D,UAf2D,CAA5B,CAApB;AAkBA,iBAAa,GAAGF,SAAS,CAACC,SAAV,CAAoB,CAC/CD,SAAS,CAACE,KAAV,CAAgB,CACd,SADc,EAEd,aAFc,EAGd,aAHc,EAId,gBAJc,EAKd,eALc,EAMd,gBANc,EAOd,cAPc,EAQd,WARc,EASd,WATc,EAUd,WAVc,EAWd,WAXc,CAAhB,CAD+C,EAc/CF,SAAS,CAACG,MAdqC,CAApB,CAAhB;AAiBA,sBAAkB,GAAGH,SAAS,CAACC,SAAV,CAAoB,CACpDK,aADoD,EAEpDN,SAAS,CAACE,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,CAFoD,EAGpDF,SAAS,CAACG,MAH0C,CAApB,CAArB;AAMA,mBAAe,GAAGH,SAAS,CAACC,SAAV,CAAoB,CACjDD,SAAS,CAACI,OAAV,CAAkBJ,SAAS,CAACE,KAAV,CAA0B,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAA1B,EAAuDG,UAAzE,CADiD,EAEjDL,SAAS,CAACE,KAAV,CAA0B,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAA1B,CAFiD,CAApB,CAAlB","names":["PropTypes","oneOfType","oneOf","string","arrayOf","isRequired","colorPropType"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\props.ts"],"sourcesContent":["import PropTypes from 'prop-types'\n\nimport type { Placements, Triggers } from './types'\n\nexport const colorPropType = PropTypes.oneOfType([\n  PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'dark',\n    'light',\n  ]),\n  PropTypes.string,\n])\n\nexport const fallbackPlacementsPropType = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.oneOf<Placements>(['top', 'bottom', 'right', 'left']).isRequired),\n  PropTypes.oneOf<Placements>(['top', 'bottom', 'right', 'left']),\n])\n\nexport const placementPropType = PropTypes.oneOf<Placements>([\n  'auto',\n  'auto-start',\n  'auto-end',\n  'top-end',\n  'top',\n  'top-start',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'right-start',\n  'right',\n  'right-end',\n  'left-start',\n  'left',\n  'left-end',\n])\n\nexport const shapePropType = PropTypes.oneOfType([\n  PropTypes.oneOf([\n    'rounded',\n    'rounded-top',\n    'rounded-end',\n    'rounded-bottom',\n    'rounded-start',\n    'rounded-circle',\n    'rounded-pill',\n    'rounded-0',\n    'rounded-1',\n    'rounded-2',\n    'rounded-3',\n  ]),\n  PropTypes.string,\n])\n\nexport const textColorsPropType = PropTypes.oneOfType([\n  colorPropType,\n  PropTypes.oneOf(['white', 'muted']),\n  PropTypes.string,\n])\n\nexport const triggerPropType = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.oneOf<Triggers>(['hover', 'focus', 'click']).isRequired),\n  PropTypes.oneOf<Triggers>(['hover', 'focus', 'click']),\n])\n"]},"metadata":{},"sourceType":"module"}