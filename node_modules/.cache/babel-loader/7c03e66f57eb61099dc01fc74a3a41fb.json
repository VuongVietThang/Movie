{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CCollapse } from '../collapse/CCollapse.js';\nimport { CAccordionItemContext } from './CAccordionItemContext.js';\nvar CAccordionBody = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"className\"]);\n\n  var _b = useContext(CAccordionItemContext),\n      id = _b.id,\n      visible = _b.visible;\n\n  return React.createElement(CCollapse, {\n    className: \"accordion-collapse\",\n    id: id,\n    visible: visible\n  }, React.createElement(\"div\", __assign({\n    className: classNames('accordion-body', className)\n  }, rest, {\n    ref: ref\n  }), children));\n});\nCAccordionBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCAccordionBody.displayName = 'CAccordionBody';\nexport { CAccordionBody };","map":{"version":3,"mappings":";;;;;;IAcaA,cAAc,GAAGC,UAAU,CACtC,UAACC,EAAD,EAAmCC,GAAnC,EAAsC;AAAnC,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAwBC,IAAI,GAA9BC,qCAAE;;AACK,WAAkBC,UAAU,CAACC,qBAAD,CAA5B;AAAA,MAAEC,EAAE,QAAJ;AAAA,MAAMC,OAAO,aAAb;;AAEN,SACEC,oBAACC,SAAD,EAAU;AAACR,aAAS,EAAC,oBAAX;AAAgCK,MAAE,EAAEA,EAApC;AAAwCC,WAAO,EAAEA;AAAjD,GAAV,EACEC;AAAKP,aAAS,EAAES,UAAU,CAAC,gBAAD,EAAmBT,SAAnB;AAA1B,KAA6DC,IAA7D,EAAmE;AAAAF,OAAG,EAAEA;AAAL,GAAnE,GACGW,QADH,CADF,CADF;AAOD,CAXqC;AAcxCd,cAAc,CAACe,SAAf,GAA2B;AACzBD,UAAQ,EAAEE,SAAS,CAACC,IADK;AAEzBb,WAAS,EAAEY,SAAS,CAACE;AAFI,CAA3B;AAKAlB,cAAc,CAACmB,WAAf,GAA6B,gBAA7B","names":["CAccordionBody","forwardRef","_a","ref","className","rest","__rest","useContext","CAccordionItemContext","id","visible","React","CCollapse","classNames","children","propTypes","PropTypes","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\accordion\\CAccordionBody.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCollapse } from './../collapse/CCollapse'\nimport { CAccordionItemContext } from './CAccordionItemContext'\n\nexport interface CAccordionBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CAccordionBody = forwardRef<HTMLDivElement, CAccordionBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    const { id, visible } = useContext(CAccordionItemContext)\n\n    return (\n      <CCollapse className=\"accordion-collapse\" id={id} visible={visible}>\n        <div className={classNames('accordion-body', className)} {...rest} ref={ref}>\n          {children}\n        </div>\n      </CCollapse>\n    )\n  }\n)\n\nCAccordionBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCAccordionBody.displayName = 'CAccordionBody'\n"]},"metadata":{},"sourceType":"module"}