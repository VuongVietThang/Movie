{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CButtonGroup = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      className = _a.className,\n      size = _a.size,\n      vertical = _a.vertical,\n      rest = __rest(_a, [\"children\", \"className\", \"size\", \"vertical\"]);\n\n  return React.createElement(\"div\", __assign({\n    className: classNames(vertical ? 'btn-group-vertical' : 'btn-group', (_b = {}, _b[\"btn-group-\".concat(size)] = size, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCButtonGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  vertical: PropTypes.bool\n};\nCButtonGroup.displayName = 'CButtonGroup';\nexport { CButtonGroup };","map":{"version":3,"mappings":";;;;IAmBaA,YAAY,GAAGC,UAAU,CACpC,UAACC,EAAD,EAAmDC,GAAnD,EAAsD;;;AAAnD,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAqBC,IAAI,UAAzB;AAAA,MAA2BC,QAAQ,cAAnC;AAAA,MAAwCC,IAAI,cAA9C,6CAA8C,CAA5C;;AACD,SACEC;AACEJ,aAAS,EAAEK,UAAU,CACnBH,QAAQ,GAAG,oBAAH,GAA0B,WADf,GAEjBI,YAAC,aAAaC,MAAb,CAAaN,IAAb,CAAD,IAAuBA,IAAvB,EACFK,EAHmB,GAGnBN,SAHmB;AADvB,KAMMG,IANN,EAOE;AAAAJ,OAAG,EAAEA;AAAL,GAPF,GASGS,QATH,CADF;AAaD,CAfmC;AAkBtCZ,YAAY,CAACa,SAAb,GAAyB;AACvBD,UAAQ,EAAEE,SAAS,CAACC,IADG;AAEvBX,WAAS,EAAEU,SAAS,CAACE,MAFE;AAGvBX,MAAI,EAAES,SAAS,CAACG,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,CAAhB,CAHiB;AAIvBX,UAAQ,EAAEQ,SAAS,CAACI;AAJG,CAAzB;AAOAlB,YAAY,CAACmB,WAAb,GAA2B,cAA3B","names":["CButtonGroup","forwardRef","_a","ref","className","size","vertical","rest","React","classNames","_b","concat","children","propTypes","PropTypes","node","string","oneOf","bool","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\button-group\\CButtonGroup.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CButtonGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Create a set of buttons that appear vertically stacked rather than horizontally. Split button dropdowns are not supported here.\n   */\n  vertical?: boolean\n}\n\nexport const CButtonGroup = forwardRef<HTMLDivElement, CButtonGroupProps>(\n  ({ children, className, size, vertical, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          vertical ? 'btn-group-vertical' : 'btn-group',\n          { [`btn-group-${size}`]: size },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCButtonGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  vertical: PropTypes.bool,\n}\n\nCButtonGroup.displayName = 'CButtonGroup'\n"]},"metadata":{},"sourceType":"module"}