{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CModalDialog = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      alignment = _a.alignment,\n      className = _a.className,\n      fullscreen = _a.fullscreen,\n      scrollable = _a.scrollable,\n      size = _a.size,\n      rest = __rest(_a, [\"children\", \"alignment\", \"className\", \"fullscreen\", \"scrollable\", \"size\"]);\n\n  return React.createElement(\"div\", __assign({\n    className: classNames('modal-dialog', (_b = {\n      'modal-dialog-centered': alignment === 'center'\n    }, _b[typeof fullscreen === 'boolean' ? 'modal-fullscreen' : \"modal-fullscreen-\".concat(fullscreen, \"-down\")] = fullscreen, _b['modal-dialog-scrollable'] = scrollable, _b[\"modal-\".concat(size)] = size, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCModalDialog.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fullscreen: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl'])\n};\nCModalDialog.displayName = 'CModalDialog';\nexport { CModalDialog };","map":{"version":3,"mappings":";;;;IA2BaA,YAAY,GAAGC,UAAU,CACpC,UAACC,EAAD,EAA4EC,GAA5E,EAA+E;;;AAA5E,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAqBC,SAAS,eAA9B;AAAA,MAAgCC,UAAU,gBAA1C;AAAA,MAA4CC,UAAU,gBAAtD;AAAA,MAAwDC,IAAI,UAA5D;AAAA,MAAiEC,IAAI,GAAvEC,sFAAE;;AACD,SACEC,KACE,cADF,CACE,KADF,EACEC;AAAAP,aAAS,EAAEQ,UAAU,CACnB,cADmB,GACLC;AAEZ,+BAAyBV,SAAS,KAAK;AAF3B,OAGZU,EAAC,QAAOR,UAAP,KAAsB,SAAtB,GACG,kBADH,GAEG,2BAAoBA,UAApB,EAA8B,OAA9B,CAFH,CAAD,GAE4CA,UALhC,EAMZQ,gCAA2BP,UANf,EAOZO,GAAC,SAASC,MAAT,CAASP,IAAT,CAAD,IAAmBA,IAPP,IADK,GAUnBH,SAVmB;AAArB,KAYII,IAZJ,EAaA;AAAAN,OAAG,EAAEA;AAAL,GAbA,CADF,EAgBGa,QAhBH,CADF;AAoBD,CAtBmC;AAyBtChB,YAAY,CAACiB,SAAb,GAAyB;AACvBb,WAAS,EAAEc,SAAS,CAACC,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,CADY;AAEvBH,UAAQ,EAAEE,SAAS,CAACE,IAFG;AAGvBf,WAAS,EAAEa,SAAS,CAACG,MAHE;AAIvBf,YAAU,EAAEY,SAAS,CAACI,SAAV,CAAoB,CAC9BJ,SAAS,CAACK,IADoB,EAE9BL,SAAS,CAACC,KAAV,CAAmD,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CAAnD,CAF8B,CAApB,CAJW;AAQvBZ,YAAU,EAAEW,SAAS,CAACK,IARC;AASvBf,MAAI,EAAEU,SAAS,CAACC,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB;AATiB,CAAzB;AAYAnB,YAAY,CAACwB,WAAb,GAA2B,cAA3B","names":["CModalDialog","forwardRef","_a","ref","alignment","className","fullscreen","scrollable","size","rest","__rest","React","__assign","classNames","_b","concat","children","propTypes","PropTypes","oneOf","node","string","oneOfType","bool","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\modal\\CModalDialog.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalDialogProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align the modal in the center or top of the screen.\n   */\n  alignment?: 'top' | 'center'\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Set modal to covers the entire user viewport.\n   */\n  fullscreen?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Does the modal dialog itself scroll, or does the whole dialog scroll within the window.\n   */\n  scrollable?: boolean\n  /**\n   * Size the component small, large, or extra large.\n   */\n  size?: 'sm' | 'lg' | 'xl'\n}\n\nexport const CModalDialog = forwardRef<HTMLDivElement, CModalDialogProps>(\n  ({ children, alignment, className, fullscreen, scrollable, size, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'modal-dialog',\n          {\n            'modal-dialog-centered': alignment === 'center',\n            [typeof fullscreen === 'boolean'\n              ? 'modal-fullscreen'\n              : `modal-fullscreen-${fullscreen}-down`]: fullscreen,\n            'modal-dialog-scrollable': scrollable,\n            [`modal-${size}`]: size,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalDialog.propTypes = {\n  alignment: PropTypes.oneOf(['top', 'center']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg', 'xl']),\n}\n\nCModalDialog.displayName = 'CModalDialog'\n"]},"metadata":{},"sourceType":"module"}