{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CCard } from '../card/CCard.js';\nimport { CCardBody } from '../card/CCardBody.js';\nimport '../card/CCardFooter.js';\nimport '../card/CCardGroup.js';\nimport { CCardHeader } from '../card/CCardHeader.js';\nimport '../card/CCardImage.js';\nimport '../card/CCardImageOverlay.js';\nimport '../card/CCardLink.js';\nimport '../card/CCardSubtitle.js';\nimport '../card/CCardText.js';\nimport '../card/CCardTitle.js';\nimport { CCol } from '../grid/CCol.js';\nimport { colorPropType } from '../../props.js';\nvar CWidgetStatsD = forwardRef(function (_a, ref) {\n  var _b;\n\n  var className = _a.className,\n      chart = _a.chart,\n      color = _a.color,\n      icon = _a.icon,\n      values = _a.values,\n      rest = __rest(_a, [\"className\", \"chart\", \"color\", \"icon\", \"values\"]);\n\n  return React.createElement(CCard, __assign({\n    className: className\n  }, rest, {\n    ref: ref\n  }), React.createElement(CCardHeader, {\n    className: classNames('position-relative d-flex justify-content-center align-items-center', (_b = {}, _b[\"bg-\".concat(color)] = color, _b))\n  }, icon, chart), React.createElement(CCardBody, {\n    className: \"row text-center\"\n  }, values && values.map(function (value, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, index % 2 !== 0 && React.createElement(\"div\", {\n      className: \"vr\"\n    }), React.createElement(CCol, null, React.createElement(\"div\", {\n      className: \"fs-5 fw-semibold\"\n    }, value.value), React.createElement(\"div\", {\n      className: \"text-uppercase text-body-secondary small\"\n    }, value.title)));\n  })));\n});\nCWidgetStatsD.propTypes = {\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  values: PropTypes.arrayOf(PropTypes.any)\n};\nCWidgetStatsD.displayName = 'CWidgetStatsD';\nexport { CWidgetStatsD };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;IAwCaA,aAAa,GAAGC,UAAU,CACrC,UAACC,EAAD,EAAqDC,GAArD,EAAwD;;;AAArD,eAAS,eAAT;AAAA,MAAWC,KAAK,WAAhB;AAAA,MAAkBC,KAAK,WAAvB;AAAA,MAAyBC,IAAI,UAA7B;AAAA,MAA+BC,MAAM,YAArC;AAAA,MAA0CC,IAAI,cAAhD,iDAAgD,CAA9C;;AACD,SACEC,oBAACC,KAAD,EAAMC;AAACC,aAAS,EAAEA;AAAZ,KAA2BJ,IAA3B,EAA+B;AAAEL,OAAG,EAAEA;AAAP,GAA/B,CAAN,EACEM,oBAACI,WAAD,EACE;AAAAD,aAAS,EAAEE,UAAU,CACnB,oEADmB,GACiDC,SAElEA,GAAC,MAAMC,MAAN,CAAMX,KAAN,CAAD,IAAiBA,KAFiD,EAIrEU,EALoB;AAArB,GADF,EAQGT,IARH,EASGF,KATH,CADF,EAYEK,oBAACQ,SAAD,EAAW;AAAAL,aAAS,EAAC;AAAV,GAAX,EACGL,MAAM,IACLA,MAAM,CAACW,GAAP,CAAW,UAACC,KAAD,EAAeC,KAAf,EAA4B;AACrC,WACEX,oBAACA,KAAK,CAACY,QAAP,EAAgB;AAAAC,SAAG,EAAEF;AAAL,KAAhB,EACGA,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBX,KAAK,cAAL,CAAK,KAAL,EAAK;AAAAG,eAAS,EAAC;AAAV,KAAL,CADtB,EAEEH,oBAACc,IAAD,EAAK,IAAL,EACEd;AAAKG,eAAS,EAAC;AAAf,OAAmCO,KAAK,CAACA,KAAzC,CADF,EAEEV,KAAK,cAAL,CAAK,KAAL,EAAK;AAAAG,eAAS,EAAC;AAAV,KAAL,EAA2DO,KAAK,CAACK,KAAjE,CAFF,CAFF,CADF;AASD,GAVD,CAFJ,CAZF,CADF;AA6BD,CA/BoC;AAkCvCxB,aAAa,CAACyB,SAAd,GAA0B;AACxBrB,OAAK,EAAEsB,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,CADiB;AAExBjB,WAAS,EAAEc,SAAS,CAACE,MAFG;AAGxBvB,OAAK,EAAEyB,aAHiB;AAIxBxB,MAAI,EAAEoB,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,CAJkB;AAKxBtB,QAAM,EAAEmB,SAAS,CAACK,OAAV,CAAkBL,SAAS,CAACM,GAA5B;AALgB,CAA1B;AAQAhC,aAAa,CAACiC,WAAd,GAA4B,eAA5B","names":["CWidgetStatsD","forwardRef","_a","ref","chart","color","icon","values","rest","React","CCard","__assign","className","CCardHeader","classNames","_b","concat","CCardBody","map","value","index","Fragment","key","CCol","title","propTypes","PropTypes","oneOfType","string","node","colorPropType","arrayOf","any","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\widgets\\CWidgetStatsD.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody, CCardHeader } from '../card'\nimport { CCol } from '../grid/CCol'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\ntype Value = {\n  title?: string | ReactNode\n  value?: number | string | ReactNode\n}\n\nexport interface CWidgetStatsDProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Icon node for your component.\n   */\n  icon?: string | ReactNode\n  /**\n   * Values and titles for your component.\n   */\n  values?: Value[]\n}\n\nexport const CWidgetStatsD = forwardRef<HTMLDivElement, CWidgetStatsDProps>(\n  ({ className, chart, color, icon, values, ...rest }, ref) => {\n    return (\n      <CCard className={className} {...rest} ref={ref}>\n        <CCardHeader\n          className={classNames(\n            'position-relative d-flex justify-content-center align-items-center',\n            {\n              [`bg-${color}`]: color,\n            },\n          )}\n        >\n          {icon}\n          {chart}\n        </CCardHeader>\n        <CCardBody className=\"row text-center\">\n          {values &&\n            values.map((value: Value, index: number) => {\n              return (\n                <React.Fragment key={index}>\n                  {index % 2 !== 0 && <div className=\"vr\"></div>}\n                  <CCol>\n                    <div className=\"fs-5 fw-semibold\">{value.value}</div>\n                    <div className=\"text-uppercase text-body-secondary small\">{value.title}</div>\n                  </CCol>\n                </React.Fragment>\n              )\n            })}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsD.propTypes = {\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  values: PropTypes.arrayOf(PropTypes.any),\n}\n\nCWidgetStatsD.displayName = 'CWidgetStatsD'\n"]},"metadata":{},"sourceType":"module"}