{"ast":null,"code":"import { __rest, __assign, __spreadArray } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useState, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CIcon } from '../../node_modules/@coreui/icons-react/dist/index.esm.js';\nimport { CElementCover } from '../element-cover/CElementCover.js';\nimport '../form/CForm.js';\nimport '../form/CFormCheck.js';\nimport '../form/CFormControlValidation.js';\nimport '../form/CFormControlWrapper.js';\nimport '../form/CFormFeedback.js';\nimport '../form/CFormFloating.js';\nimport { CFormInput } from '../form/CFormInput.js';\nimport { CFormLabel } from '../form/CFormLabel.js';\nimport '../form/CFormRange.js';\nimport { CFormSelect } from '../form/CFormSelect.js';\nimport '../form/CFormSwitch.js';\nimport '../form/CFormText.js';\nimport '../form/CFormTextarea.js';\nimport '../form/CInputGroup.js';\nimport '../form/CInputGroupText.js';\nimport { CSmartPagination } from '../smart-pagination/CSmartPagination.js';\nimport { CTable } from '../table/CTable.js';\nimport '../table/CTableBody.js';\nimport '../table/CTableCaption.js';\nimport { CTableDataCell } from '../table/CTableDataCell.js';\nimport { CTableFoot } from '../table/CTableFoot.js';\nimport '../table/CTableHead.js';\nimport '../table/CTableHeaderCell.js';\nimport { CTableRow } from '../table/CTableRow.js';\nimport { CSmartTableBody } from './CSmartTableBody.js';\nimport { CSmartTableHead } from './CSmartTableHead.js';\nimport isObjectInArray from '../../utils/isObjectInArray.js';\nimport { ITEM_INTERNAL_KEYS } from './consts.js';\nimport { getColumnNames, getColumnNamesFromItems, filterColumns, filterTable, sortItems, isSortable } from './utils.js';\nimport { cilSwapVertical } from '../../node_modules/@coreui/icons/dist/esm/free/cil-swap-vertical.js';\nimport { cilArrowTop } from '../../node_modules/@coreui/icons/dist/esm/free/cil-arrow-top.js';\nimport { cilArrowBottom } from '../../node_modules/@coreui/icons/dist/esm/free/cil-arrow-bottom.js';\nimport { cilFilterX } from '../../node_modules/@coreui/icons/dist/esm/free/cil-filter-x.js';\nvar CSmartTable = forwardRef(function (_a, ref) {\n  var _b = _a.activePage,\n      activePage = _b === void 0 ? 1 : _b,\n      cleaner = _a.cleaner,\n      clickableRows = _a.clickableRows,\n      columnFilter = _a.columnFilter,\n      columnFilterValue = _a.columnFilterValue,\n      // TODO: consider to use only columnFilter prop\n  columns = _a.columns,\n      columnSorter = _a.columnSorter,\n      elementCover = _a.elementCover,\n      footer = _a.footer,\n      _c = _a.header,\n      header = _c === void 0 ? true : _c,\n      _d = _a.items,\n      items = _d === void 0 ? [] : _d,\n      itemsNumber = _a.itemsNumber,\n      _e = _a.itemsPerPage,\n      itemsPerPage = _e === void 0 ? 10 : _e,\n      _f = _a.itemsPerPageLabel,\n      itemsPerPageLabel = _f === void 0 ? 'Items per page:' : _f,\n      _g = _a.itemsPerPageOptions,\n      itemsPerPageOptions = _g === void 0 ? [5, 10, 20, 50] : _g,\n      itemsPerPageSelect = _a.itemsPerPageSelect,\n      loading = _a.loading,\n      _h = _a.noItemsLabel,\n      noItemsLabel = _h === void 0 ? 'No items found' : _h,\n      onActivePageChange = _a.onActivePageChange,\n      onColumnFilterChange = _a.onColumnFilterChange,\n      onFilteredItemsChange = _a.onFilteredItemsChange,\n      onItemsPerPageChange = _a.onItemsPerPageChange,\n      onRowClick = _a.onRowClick,\n      onSelectAll = _a.onSelectAll,\n      onSelectedItemsChange = _a.onSelectedItemsChange,\n      onSorterChange = _a.onSorterChange,\n      onTableFilterChange = _a.onTableFilterChange,\n      pagination = _a.pagination,\n      paginationProps = _a.paginationProps,\n      scopedColumns = _a.scopedColumns,\n      selected = _a.selected,\n      selectable = _a.selectable,\n      _j = _a.selectAll,\n      selectAll = _j === void 0 ? true : _j,\n      sorterValue = _a.sorterValue,\n      _k = _a.sortingIcon,\n      sortingIcon = _k === void 0 ? React.createElement(CIcon, {\n    width: 18,\n    icon: cilSwapVertical,\n    key: \"csv\"\n  }) : _k,\n      _l = _a.sortingIconAscending,\n      sortingIconAscending = _l === void 0 ? React.createElement(CIcon, {\n    width: 18,\n    icon: cilArrowTop,\n    key: \"cat\"\n  }) : _l,\n      _m = _a.sortingIconDescending,\n      sortingIconDescending = _m === void 0 ? React.createElement(CIcon, {\n    width: 18,\n    icon: cilArrowBottom,\n    key: \"cab\"\n  }) : _m,\n      tableBodyProps = _a.tableBodyProps,\n      tableFootProps = _a.tableFootProps,\n      tableFilter = _a.tableFilter,\n      _o = _a.tableFilterLabel,\n      tableFilterLabel = _o === void 0 ? 'Filter:' : _o,\n      _p = _a.tableFilterPlaceholder,\n      tableFilterPlaceholder = _p === void 0 ? 'type string...' : _p,\n      tableFilterValue = _a.tableFilterValue,\n      tableHeadProps = _a.tableHeadProps,\n      tableProps = _a.tableProps,\n      rest = __rest(_a, [\"activePage\", \"cleaner\", \"clickableRows\", \"columnFilter\", \"columnFilterValue\", \"columns\", \"columnSorter\", \"elementCover\", \"footer\", \"header\", \"items\", \"itemsNumber\", \"itemsPerPage\", \"itemsPerPageLabel\", \"itemsPerPageOptions\", \"itemsPerPageSelect\", \"loading\", \"noItemsLabel\", \"onActivePageChange\", \"onColumnFilterChange\", \"onFilteredItemsChange\", \"onItemsPerPageChange\", \"onRowClick\", \"onSelectAll\", \"onSelectedItemsChange\", \"onSorterChange\", \"onTableFilterChange\", \"pagination\", \"paginationProps\", \"scopedColumns\", \"selected\", \"selectable\", \"selectAll\", \"sorterValue\", \"sortingIcon\", \"sortingIconAscending\", \"sortingIconDescending\", \"tableBodyProps\", \"tableFootProps\", \"tableFilter\", \"tableFilterLabel\", \"tableFilterPlaceholder\", \"tableFilterValue\", \"tableHeadProps\", \"tableProps\"]);\n\n  var mountedRef = useRef(false);\n\n  var _q = useState(activePage),\n      _activePage = _q[0],\n      setActivePage = _q[1];\n\n  var _r = useState([]),\n      _items = _r[0],\n      setItems = _r[1];\n\n  var _s = useState(itemsPerPage),\n      _itemsPerPage = _s[0],\n      setItemsPerPage = _s[1];\n\n  var _t = useState([]),\n      _selected = _t[0],\n      setSelected = _t[1];\n\n  var _u = useState({}),\n      columnFilterState = _u[0],\n      setColumnFilterState = _u[1];\n\n  var _v = useState(),\n      selectedAll = _v[0],\n      setSelectedAll = _v[1];\n\n  var _w = useState([]),\n      sorterState = _w[0],\n      setSorterState = _w[1];\n\n  var _x = useState(tableFilterValue !== null && tableFilterValue !== void 0 ? tableFilterValue : ''),\n      tableFilterState = _x[0],\n      setTableFilterState = _x[1];\n\n  var _itemsNumber = useMemo(function () {\n    return itemsNumber !== null && itemsNumber !== void 0 ? itemsNumber : items.length;\n  }, [itemsNumber, items.length]);\n\n  useEffect(function () {\n    setActivePage(activePage);\n  }, [activePage]);\n  useEffect(function () {\n    if (items.length < _itemsPerPage * _activePage - _itemsPerPage) {\n      setActivePage(1);\n    }\n\n    var selected = [];\n\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var item = items_1[_i];\n\n      if (item._selected) {\n        var _item = __assign({}, item);\n\n        for (var _a = 0, ITEM_INTERNAL_KEYS_1 = ITEM_INTERNAL_KEYS; _a < ITEM_INTERNAL_KEYS_1.length; _a++) {\n          var key = ITEM_INTERNAL_KEYS_1[_a];\n          delete _item[key]; // Remove internal keys\n        }\n\n        selected.push(_item); // Add cleaned item to selected array\n      }\n    }\n\n    if (selected.length > 0) {\n      setSelected(__spreadArray(__spreadArray([], _selected, true), selected, true));\n    }\n\n    if (Array.isArray(items)) {\n      setItems(__spreadArray([], items, true));\n    }\n  }, [JSON.stringify(items)]);\n  useEffect(function () {\n    Array.isArray(selected) && setSelected(selected);\n  }, [JSON.stringify(selected)]);\n  useEffect(function () {\n    columnFilterValue && setColumnFilterState(columnFilterValue);\n  }, [JSON.stringify(columnFilterValue)]);\n  useEffect(function () {\n    sorterValue && setSorterState(Array.isArray(sorterValue) ? sorterValue : [sorterValue]);\n  }, [JSON.stringify(sorterValue)]);\n  useEffect(function () {\n    return setItemsPerPage(itemsPerPage);\n  }, [itemsPerPage]);\n  useEffect(function () {\n    mountedRef.current && onActivePageChange && onActivePageChange(_activePage);\n  }, [_activePage]);\n  useEffect(function () {\n    mountedRef.current && onItemsPerPageChange && onItemsPerPageChange(_itemsPerPage);\n    itemsPerPage !== _itemsPerPage && setActivePage(1); // TODO: set proper page after _itemsPerPage update\n  }, [_itemsPerPage]);\n  useEffect(function () {\n    var multiple = typeof columnSorter === 'object' && columnSorter.multiple;\n    mountedRef.current && sorterState && onSorterChange && onSorterChange(multiple ? sorterState : sorterState[0]);\n  }, [sorterState]);\n  useEffect(function () {\n    mountedRef.current && onColumnFilterChange && onColumnFilterChange(columnFilterState);\n  }, [columnFilterState]);\n  useEffect(function () {\n    mountedRef.current && onTableFilterChange && onTableFilterChange(tableFilterState);\n  }, [tableFilterState]);\n  useEffect(function () {\n    if (selectable) {\n      onSelectedItemsChange && onSelectedItemsChange(_selected);\n\n      if (_selected.length === _itemsNumber) {\n        setSelectedAll(true);\n        return;\n      }\n\n      if (_selected.length === 0) {\n        setSelectedAll(false);\n        return;\n      }\n\n      if (_selected.length > 0 && _selected.length !== _itemsNumber) {\n        setSelectedAll('indeterminate');\n      }\n    }\n  }, [JSON.stringify(_selected), _itemsNumber]);\n  var columnNames = useMemo(function () {\n    return getColumnNames(columns, _items);\n  }, [columns, _items]);\n  var itemsDataColumns = useMemo(function () {\n    return columnNames.filter(function (name) {\n      return getColumnNamesFromItems(_items).includes(name);\n    });\n  }, [columnNames, _items]);\n  var filteredColumns = useMemo(function () {\n    return filterColumns(_items, columnFilter, columnFilterState, itemsDataColumns);\n  }, [columnFilterState, _items]);\n  var filteredTable = useMemo(function () {\n    return filterTable(filteredColumns, tableFilter, tableFilterState, itemsDataColumns);\n  }, [tableFilterState, tableFilterValue, filteredColumns]);\n  var sortedItems = useMemo(function () {\n    return sortItems(columns, columnSorter, filteredTable, itemsDataColumns, sorterState);\n  }, [columnSorter, sorterState, filteredTable]);\n  var numberOfPages = _itemsPerPage ? Math.ceil(sortedItems.length / _itemsPerPage) : 1;\n  var firstItemOnActivePageIndex = _activePage ? (_activePage - 1) * _itemsPerPage : 0;\n  var currentItems = _activePage ? sortedItems.slice(firstItemOnActivePageIndex, firstItemOnActivePageIndex + _itemsPerPage) : sortedItems;\n  useEffect(function () {\n    mountedRef.current && onFilteredItemsChange && onFilteredItemsChange(sortedItems);\n  }, [JSON.stringify(sortedItems)]);\n\n  var handleClean = function () {\n    setTableFilterState('');\n    setColumnFilterState({});\n    setSorterState([]);\n  };\n\n  var handleColumnFilterChange = function (colName, value, type) {\n    var isLazy = columnFilter && typeof columnFilter === 'object' && columnFilter.lazy === true;\n\n    if (isLazy && type === 'input' || !isLazy && type === 'change') {\n      return;\n    }\n\n    setActivePage(1);\n    setColumnFilterState(function (prevState) {\n      var newState = __assign({}, prevState);\n\n      if (value === '') {\n        delete newState[colName];\n      } else {\n        newState[colName] = value;\n      }\n\n      return newState;\n    });\n  };\n\n  var handleItemsPerPageChange = function (event) {\n    if (typeof itemsPerPageSelect !== 'object' || typeof itemsPerPageSelect === 'object' && !itemsPerPageSelect.external) {\n      setItemsPerPage(Number(event.target.value));\n    }\n  };\n\n  var handleRowChecked = function (item, value) {\n    if (value && !isObjectInArray(_selected, item, ITEM_INTERNAL_KEYS)) {\n      setSelected(function (prevSelected) {\n        return __spreadArray(__spreadArray([], prevSelected, true), [item], false);\n      });\n      return;\n    }\n\n    setSelected(function (prevSelected) {\n      return prevSelected.filter(function (_item) {\n        return !isObjectInArray([_item], item, ITEM_INTERNAL_KEYS);\n      });\n    });\n  };\n\n  var handleSelectAllChecked = function () {\n    onSelectAll && onSelectAll();\n\n    if (selectedAll === true) {\n      setSelected(_items.filter(function (item) {\n        return item._selectable === false;\n      }));\n      return;\n    }\n\n    if (selectAll && typeof selectAll === 'object' && selectAll.external) {\n      return;\n    }\n\n    var selectable = _items.filter(function (item) {\n      return item._selectable !== false || item._selected === true;\n    });\n\n    if (selectable.length === _selected.length) {\n      setSelected(_items.filter(function (item) {\n        return item._selectable === false && item._selected === true;\n      }));\n      return;\n    }\n\n    var selected = selectable.map(function (item) {\n      return __assign({}, item);\n    });\n    setSelected(selected.map(function (item) {\n      for (var _i = 0, ITEM_INTERNAL_KEYS_2 = ITEM_INTERNAL_KEYS; _i < ITEM_INTERNAL_KEYS_2.length; _i++) {\n        var key = ITEM_INTERNAL_KEYS_2[_i];\n        delete item[key];\n      }\n\n      return item;\n    }));\n  };\n\n  var handleSorterChange = function (column, index, order) {\n    if (!isSortable(index, columns, columnSorter, itemsDataColumns, columnNames)) {\n      return;\n    }\n\n    var existingColumnState = sorterState.find(function (x) {\n      return x.column === column;\n    });\n    var multiple = typeof columnSorter === 'object' && columnSorter.multiple; // If the column already has a sort state\n\n    if (existingColumnState) {\n      // No need to update if the order is already the same\n      if (existingColumnState.state === order) {\n        return;\n      } // Remove the column from sorting if resetable and descending\n\n\n      if (typeof columnSorter === 'object' && columnSorter.resetable && existingColumnState.state === 'desc' && order !== 'asc') {\n        setSorterState(multiple ? sorterState.filter(function (x) {\n          return x.column !== column;\n        }) : []);\n      } else {\n        // Toggle between ascending and descending\n        var newState_1 = {\n          column: column,\n          state: order || (existingColumnState.state === 'asc' ? 'desc' : 'asc')\n        };\n        setSorterState(multiple ? sorterState.map(function (item) {\n          return item.column === column ? newState_1 : item;\n        }) : [newState_1]);\n      }\n    } else {\n      // If the column is not yet sorted, add it with the default or provided order\n      var newSorter = {\n        column: column,\n        state: order || 'asc'\n      };\n      setSorterState(multiple ? __spreadArray(__spreadArray([], sorterState, true), [newSorter], false) : [newSorter]);\n    }\n  };\n\n  var handleTableFilterChange = function (value, type) {\n    var isLazy = tableFilter && typeof tableFilter === 'object' && tableFilter.lazy === true;\n\n    if (isLazy && type === 'input' || !isLazy && type === 'change') {\n      return;\n    }\n\n    setActivePage(1);\n    setTableFilterState(value);\n  };\n\n  useEffect(function () {\n    mountedRef.current = true;\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({}, rest, {\n    ref: ref\n  }), (itemsPerPageSelect || tableFilter || cleaner) && React.createElement(\"div\", {\n    className: \"row my-2 mx-0\"\n  }, (tableFilter || cleaner) && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"col-auto p-0\"\n  }, tableFilter && React.createElement(\"div\", {\n    className: \"row mb-2\"\n  }, React.createElement(CFormLabel, {\n    className: \"col-sm-auto col-form-label\"\n  }, tableFilterLabel), React.createElement(\"div\", {\n    className: \"col-sm-auto\"\n  }, React.createElement(CFormInput, {\n    onInput: function (e) {\n      handleTableFilterChange(e.target.value, 'input');\n    },\n    onChange: function (e) {\n      handleTableFilterChange(e.target.value, 'change');\n    },\n    placeholder: tableFilterPlaceholder,\n    value: tableFilterState || ''\n  })))), React.createElement(\"div\", {\n    className: \"col-auto p-0\"\n  }, cleaner && React.createElement(\"button\", __assign({\n    type: \"button\",\n    className: \"btn btn-transparent\"\n  }, !(tableFilterState || sorterState.length > 0 || Object.values(columnFilterState).join('')) && {\n    disabled: true,\n    tabIndex: -1\n  }, {\n    onClick: function () {\n      return handleClean();\n    },\n    onKeyDown: function (event) {\n      if (event.key === 'Enter') handleClean();\n    }\n  }), React.createElement(CIcon, {\n    width: 18,\n    icon: cilFilterX\n  })))))), React.createElement(\"div\", {\n    className: \"position-relative\"\n  }, React.createElement(CTable, __assign({}, tableProps), header && React.createElement(CSmartTableHead, __assign({}, tableHeadProps, {\n    columnFilter: columnFilter,\n    columnFilterState: columnFilterState,\n    columns: columns !== null && columns !== void 0 ? columns : columnNames,\n    columnSorter: columnSorter,\n    items: _items,\n    selectable: selectable,\n    selectAll: selectAll,\n    selectedAll: selectedAll,\n    sorterState: sorterState,\n    sortingIcon: sortingIcon,\n    sortingIconAscending: sortingIconAscending,\n    sortingIconDescending: sortingIconDescending,\n    handleFilterOnChange: function (key, event) {\n      return handleColumnFilterChange(key, event, 'change');\n    },\n    handleFilterOnInput: function (key, event) {\n      return handleColumnFilterChange(key, event, 'input');\n    },\n    handleOnCustomFilterChange: function (key, event) {\n      return handleColumnFilterChange(key, event);\n    },\n    handleSelectAllChecked: function () {\n      return handleSelectAllChecked();\n    },\n    handleSort: function (key, index, order) {\n      return handleSorterChange(key, index, order);\n    }\n  })), React.createElement(CSmartTableBody, __assign({\n    clickableRows: clickableRows,\n    columnNames: columnNames,\n    columns: columns !== null && columns !== void 0 ? columns : columnNames,\n    currentItems: currentItems,\n    firstItemOnActivePageIndex: firstItemOnActivePageIndex,\n    noItemsLabel: noItemsLabel,\n    onRowClick: function (item, index, columnName, event) {\n      return clickableRows && onRowClick && onRowClick(item, index, columnName, event);\n    },\n    onRowChecked: function (item, value) {\n      return handleRowChecked(item, value);\n    },\n    scopedColumns: scopedColumns,\n    selectable: selectable,\n    selected: _selected\n  }, tableBodyProps)), typeof footer === 'boolean' && footer && React.createElement(CSmartTableHead, __assign({\n    as: CTableFoot\n  }, tableFootProps, {\n    columnFilter: false,\n    columnSorter: false,\n    columns: columns !== null && columns !== void 0 ? columns : columnNames,\n    items: _items,\n    handleSelectAllChecked: function () {\n      return handleSelectAllChecked();\n    },\n    selectable: selectable,\n    selectAll: selectAll,\n    selectedAll: selectedAll,\n    showGroups: false\n  })), Array.isArray(footer) && React.createElement(CTableFoot, __assign({}, tableFootProps), React.createElement(CTableRow, null, footer.map(function (item, index) {\n    return React.createElement(CTableDataCell, __assign({}, typeof item === 'object' && item._props && __assign({}, item._props), {\n      key: index\n    }), typeof item === 'object' ? item.label : item);\n  })))), loading && React.createElement(CElementCover, {\n    boundaries: [{\n      sides: ['top'],\n      query: 'tbody'\n    }, {\n      sides: ['bottom'],\n      query: 'tbody'\n    }]\n  }, elementCover)), (pagination || itemsPerPageSelect) && React.createElement(\"div\", {\n    className: \"row\"\n  }, React.createElement(\"div\", {\n    className: \"col\"\n  }, (pagination && numberOfPages > 1 || paginationProps && paginationProps.pages > 1) && React.createElement(CSmartPagination, __assign({\n    activePage: _activePage,\n    onActivePageChange: function (page) {\n      pagination && typeof pagination === 'object' && pagination.external ? onActivePageChange && onActivePageChange(page) : setActivePage(page);\n    },\n    pages: numberOfPages\n  }, paginationProps))), React.createElement(\"div\", {\n    className: \"col-auto ms-auto\"\n  }, itemsPerPageSelect && React.createElement(\"div\", {\n    className: \"row\"\n  }, React.createElement(CFormLabel, {\n    className: \"col-auto col-form-label\"\n  }, itemsPerPageLabel), React.createElement(\"div\", {\n    className: \"col-auto\"\n  }, React.createElement(CFormSelect, {\n    defaultValue: _itemsPerPage,\n    onChange: function (event) {\n      return handleItemsPerPageChange(event);\n    }\n  }, itemsPerPageOptions && itemsPerPageOptions.map(function (number, index) {\n    return React.createElement(\"option\", {\n      value: number,\n      key: index\n    }, number);\n  })))))));\n});\nCSmartTable.propTypes = {\n  activePage: PropTypes.number,\n  cleaner: PropTypes.bool,\n  clickableRows: PropTypes.bool,\n  columnFilter: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  columnFilterValue: PropTypes.object,\n  columns: PropTypes.array,\n  columnSorter: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  elementCover: PropTypes.node,\n  footer: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n  header: PropTypes.bool,\n  items: PropTypes.array,\n  itemsNumber: PropTypes.number,\n  itemsPerPage: PropTypes.number,\n  itemsPerPageLabel: PropTypes.string,\n  itemsPerPageOptions: PropTypes.array,\n  itemsPerPageSelect: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  loading: PropTypes.bool,\n  noItemsLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  onActivePageChange: PropTypes.func,\n  onColumnFilterChange: PropTypes.func,\n  onFilteredItemsChange: PropTypes.func,\n  onItemsPerPageChange: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSelectAll: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  onSorterChange: PropTypes.func,\n  // TODO: change to `onColumnSorterChange` in v6\n  onTableFilterChange: PropTypes.func,\n  pagination: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  paginationProps: PropTypes.any,\n  // TODO: update\n  scopedColumns: PropTypes.object,\n  selectable: PropTypes.bool,\n  selectAll: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  selected: PropTypes.array,\n  sorterValue: PropTypes.oneOfType([PropTypes.shape({\n    column: PropTypes.string.isRequired,\n    state: PropTypes.oneOf(['asc', 'desc', 0]).isRequired\n  }), PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.string.isRequired,\n    state: PropTypes.oneOf(['asc', 'desc', 0]).isRequired\n  }).isRequired)]),\n  sortingIcon: PropTypes.node,\n  sortingIconAscending: PropTypes.node,\n  sortingIconDescending: PropTypes.node,\n  tableBodyProps: PropTypes.object,\n  tableFootProps: PropTypes.object,\n  tableFilter: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  tableFilterLabel: PropTypes.string,\n  tableFilterPlaceholder: PropTypes.string,\n  tableFilterValue: PropTypes.string,\n  tableHeadProps: PropTypes.object,\n  tableProps: PropTypes.object\n};\nCSmartTable.displayName = 'CSmartTable';\nexport { CSmartTable };","map":{"version":3,"mappings":"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","names":["CSmartTable","forwardRef","_a","ref","_b","cleaner","clickableRows","columnFilter","columnFilterValue","columns","columnSorter","elementCover","footer","_c","header","_d","items","itemsNumber","_e","itemsPerPage","_f","itemsPerPageLabel","_g","itemsPerPageOptions","itemsPerPageSelect","loading","_h","noItemsLabel","onActivePageChange","onColumnFilterChange","onFilteredItemsChange","onItemsPerPageChange","onRowClick","onSelectAll","onSelectedItemsChange","onSorterChange","onTableFilterChange","pagination","paginationProps","scopedColumns","selected","selectable","_j","selectAll","sorterValue","_k","sortingIcon","CIcon","width","icon","cilSwapVertical","key","_l","sortingIconAscending","cilArrowTop","_m","sortingIconDescending","cilArrowBottom","tableBodyProps","tableFootProps","tableFilter","_o","tableFilterLabel","_p","tableFilterPlaceholder","tableFilterValue","tableHeadProps","tableProps","rest","__rest","mountedRef","useRef","useState","activePage","_activePage","setActivePage","_items","setItems","_itemsPerPage","setItemsPerPage","_selected","setSelected","columnFilterState","setColumnFilterState","selectedAll","setSelectedAll","sorterState","setSorterState","tableFilterState","setTableFilterState","_itemsNumber","useMemo","length","useEffect","_i","item","_item","push","__spreadArray","Array","isArray","JSON","stringify","current","multiple","columnNames","itemsDataColumns","filter","name","includes","filteredColumns","filteredTable","sortedItems","numberOfPages","Math","ceil","firstItemOnActivePageIndex","currentItems","slice","handleClean","handleColumnFilterChange","colName","value","type","isLazy","lazy","prevState","newState","handleItemsPerPageChange","event","external","Number","target","handleRowChecked","isObjectInArray","ITEM_INTERNAL_KEYS","prevSelected","handleSelectAllChecked","_selectable","map","handleSorterChange","column","index","order","isSortable","existingColumnState","find","x","state","resetable","newState_1","newSorter","handleTableFilterChange","React","__assign","className","CFormLabel","CFormInput","onInput","e","onChange","placeholder","Object","values","join","disabled","tabIndex","onClick","onKeyDown","cilFilterX","CTable","CSmartTableHead","handleFilterOnChange","handleFilterOnInput","handleOnCustomFilterChange","handleSort","CSmartTableBody","columnName","onRowChecked","as","CTableFoot","showGroups","CTableRow","CTableDataCell","_props","label","CElementCover","boundaries","sides","query","pages","CSmartPagination","page","CFormSelect","defaultValue","number","propTypes","PropTypes","bool","oneOfType","object","array","node","string","func","any","shape","isRequired","oneOf","arrayOf","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\smart-table\\CSmartTable.tsx"],"sourcesContent":["import React, { ChangeEvent, forwardRef, useEffect, useMemo, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { cilArrowBottom, cilArrowTop, cilFilterX, cilSwapVertical } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { CElementCover } from '../element-cover'\nimport { CFormInput, CFormLabel, CFormSelect } from '../form'\nimport { CSmartPagination } from '../smart-pagination'\nimport { CTable, CTableDataCell, CTableFoot, CTableRow } from '../table'\n\nimport { CSmartTableBody } from './CSmartTableBody'\nimport { CSmartTableHead } from './CSmartTableHead'\nimport { CSmartTableProps } from './CSmartTableInterface'\n\nimport { isObjectInArray } from '../../utils'\n\nimport { ITEM_INTERNAL_KEYS } from './consts'\nimport type { ColumnFilterValue, FooterItem, Item, SorterValue } from './types'\nimport {\n  filterColumns,\n  filterTable,\n  getColumnNames,\n  getColumnNamesFromItems,\n  isSortable,\n  sortItems,\n} from './utils'\n\nexport const CSmartTable = forwardRef<HTMLDivElement, CSmartTableProps>(\n  (\n    {\n      activePage = 1,\n      cleaner,\n      clickableRows,\n      columnFilter,\n      columnFilterValue, // TODO: consider to use only columnFilter prop\n      columns,\n      columnSorter,\n      elementCover,\n      footer,\n      header = true,\n      items = [],\n      itemsNumber,\n      itemsPerPage = 10,\n      itemsPerPageLabel = 'Items per page:',\n      itemsPerPageOptions = [5, 10, 20, 50],\n      itemsPerPageSelect,\n      loading,\n      noItemsLabel = 'No items found',\n      onActivePageChange,\n      onColumnFilterChange,\n      onFilteredItemsChange,\n      onItemsPerPageChange,\n      onRowClick,\n      onSelectAll,\n      onSelectedItemsChange,\n      onSorterChange,\n      onTableFilterChange,\n      pagination,\n      paginationProps,\n      scopedColumns,\n      selected,\n      selectable,\n      selectAll = true,\n      sorterValue,\n      sortingIcon = <CIcon width={18} icon={cilSwapVertical} key=\"csv\" />,\n      sortingIconAscending = <CIcon width={18} icon={cilArrowTop} key=\"cat\" />,\n      sortingIconDescending = <CIcon width={18} icon={cilArrowBottom} key=\"cab\" />,\n      tableBodyProps,\n      tableFootProps,\n      tableFilter,\n      tableFilterLabel = 'Filter:',\n      tableFilterPlaceholder = 'type string...',\n      tableFilterValue,\n      tableHeadProps,\n      tableProps,\n      ...rest\n    },\n    ref,\n  ) => {\n    const mountedRef = useRef(false)\n\n    const [_activePage, setActivePage] = useState(activePage)\n    const [_items, setItems] = useState<Item[]>([])\n    const [_itemsPerPage, setItemsPerPage] = useState(itemsPerPage)\n    const [_selected, setSelected] = useState<Item[]>([])\n    const [columnFilterState, setColumnFilterState] = useState<ColumnFilterValue>({})\n    const [selectedAll, setSelectedAll] = useState<boolean | string>()\n    const [sorterState, setSorterState] = useState<SorterValue[]>([])\n    const [tableFilterState, setTableFilterState] = useState<string>(tableFilterValue ?? '')\n\n    const _itemsNumber = useMemo(() => itemsNumber ?? items.length, [itemsNumber, items.length])\n\n    useEffect(() => {\n      setActivePage(activePage)\n    }, [activePage])\n\n    useEffect(() => {\n      if (items.length < _itemsPerPage * _activePage - _itemsPerPage) {\n        setActivePage(1)\n      }\n\n      const selected: Item[] = []\n\n      for (const item of items) {\n        if (item._selected) {\n          const _item = { ...item }\n          for (const key of ITEM_INTERNAL_KEYS) {\n            delete _item[key] // Remove internal keys\n          }\n          selected.push(_item) // Add cleaned item to selected array\n        }\n      }\n\n      if (selected.length > 0) {\n        setSelected([..._selected, ...selected])\n      }\n\n      if (Array.isArray(items)) {\n        setItems([...items])\n      }\n    }, [JSON.stringify(items)])\n\n    useEffect(() => {\n      Array.isArray(selected) && setSelected(selected)\n    }, [JSON.stringify(selected)])\n\n    useEffect(() => {\n      columnFilterValue && setColumnFilterState(columnFilterValue)\n    }, [JSON.stringify(columnFilterValue)])\n\n    useEffect(() => {\n      sorterValue && setSorterState(Array.isArray(sorterValue) ? sorterValue : [sorterValue])\n    }, [JSON.stringify(sorterValue)])\n\n    useEffect(() => setItemsPerPage(itemsPerPage), [itemsPerPage])\n\n    useEffect(() => {\n      mountedRef.current && onActivePageChange && onActivePageChange(_activePage)\n    }, [_activePage])\n\n    useEffect(() => {\n      mountedRef.current && onItemsPerPageChange && onItemsPerPageChange(_itemsPerPage)\n      itemsPerPage !== _itemsPerPage && setActivePage(1) // TODO: set proper page after _itemsPerPage update\n    }, [_itemsPerPage])\n\n    useEffect(() => {\n      const multiple = typeof columnSorter === 'object' && columnSorter.multiple\n      mountedRef.current &&\n        sorterState &&\n        onSorterChange &&\n        onSorterChange(multiple ? sorterState : sorterState[0])\n    }, [sorterState])\n\n    useEffect(() => {\n      mountedRef.current && onColumnFilterChange && onColumnFilterChange(columnFilterState)\n    }, [columnFilterState])\n\n    useEffect(() => {\n      mountedRef.current && onTableFilterChange && onTableFilterChange(tableFilterState)\n    }, [tableFilterState])\n\n    useEffect(() => {\n      if (selectable) {\n        onSelectedItemsChange && onSelectedItemsChange(_selected)\n\n        if (_selected.length === _itemsNumber) {\n          setSelectedAll(true)\n          return\n        }\n\n        if (_selected.length === 0) {\n          setSelectedAll(false)\n          return\n        }\n\n        if (_selected.length > 0 && _selected.length !== _itemsNumber) {\n          setSelectedAll('indeterminate')\n        }\n      }\n    }, [JSON.stringify(_selected), _itemsNumber])\n\n    const columnNames = useMemo(() => getColumnNames(columns, _items), [columns, _items])\n\n    const itemsDataColumns = useMemo(\n      () => columnNames.filter((name) => getColumnNamesFromItems(_items).includes(name)),\n      [columnNames, _items],\n    )\n\n    const filteredColumns: Item[] = useMemo(\n      () => filterColumns(_items, columnFilter, columnFilterState, itemsDataColumns),\n      [columnFilterState, _items],\n    )\n\n    const filteredTable: Item[] = useMemo(\n      () => filterTable(filteredColumns, tableFilter, tableFilterState, itemsDataColumns),\n      [tableFilterState, tableFilterValue, filteredColumns],\n    )\n\n    const sortedItems: Item[] = useMemo(\n      () => sortItems(columns, columnSorter, filteredTable, itemsDataColumns, sorterState),\n      [columnSorter, sorterState, filteredTable],\n    )\n\n    const numberOfPages: number = _itemsPerPage ? Math.ceil(sortedItems.length / _itemsPerPage) : 1\n\n    const firstItemOnActivePageIndex: number = _activePage ? (_activePage - 1) * _itemsPerPage : 0\n\n    const currentItems: Item[] = _activePage\n      ? sortedItems.slice(firstItemOnActivePageIndex, firstItemOnActivePageIndex + _itemsPerPage)\n      : sortedItems\n\n    useEffect(() => {\n      mountedRef.current && onFilteredItemsChange && onFilteredItemsChange(sortedItems)\n    }, [JSON.stringify(sortedItems)])\n\n    const handleClean = (): void => {\n      setTableFilterState('')\n      setColumnFilterState({})\n      setSorterState([])\n    }\n\n    const handleColumnFilterChange = (colName: string, value: any, type?: string): void => {\n      const isLazy = columnFilter && typeof columnFilter === 'object' && columnFilter.lazy === true\n      if ((isLazy && type === 'input') || (!isLazy && type === 'change')) {\n        return\n      }\n\n      setActivePage(1)\n      setColumnFilterState((prevState) => {\n        const newState = { ...prevState }\n        if (value === '') {\n          delete newState[colName]\n        } else {\n          newState[colName] = value\n        }\n\n        return newState\n      })\n    }\n\n    const handleItemsPerPageChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n      if (\n        typeof itemsPerPageSelect !== 'object' ||\n        (typeof itemsPerPageSelect === 'object' && !itemsPerPageSelect.external)\n      ) {\n        setItemsPerPage(Number((event.target as HTMLSelectElement).value))\n      }\n    }\n\n    const handleRowChecked = (item: Item, value: boolean) => {\n      if (value && !isObjectInArray(_selected, item, ITEM_INTERNAL_KEYS)) {\n        setSelected((prevSelected) => [...prevSelected, item])\n        return\n      }\n\n      setSelected((prevSelected) =>\n        prevSelected.filter((_item: Item) => !isObjectInArray([_item], item, ITEM_INTERNAL_KEYS)),\n      )\n    }\n\n    const handleSelectAllChecked = () => {\n      onSelectAll && onSelectAll()\n\n      if (selectedAll === true) {\n        setSelected(_items.filter((item) => item._selectable === false))\n        return\n      }\n\n      if (selectAll && typeof selectAll === 'object' && selectAll.external) {\n        return\n      }\n\n      const selectable = _items.filter(\n        (item) => item._selectable !== false || item._selected === true,\n      )\n\n      if (selectable.length === _selected.length) {\n        setSelected(_items.filter((item) => item._selectable === false && item._selected === true))\n        return\n      }\n\n      const selected = selectable.map((item) => {\n        return { ...item }\n      })\n\n      setSelected(\n        selected.map((item) => {\n          for (const key of ITEM_INTERNAL_KEYS) {\n            delete item[key]\n          }\n\n          return item\n        }),\n      )\n    }\n\n    const handleSorterChange = (column: string, index: number, order?: 'asc' | 'desc'): void => {\n      if (!isSortable(index, columns, columnSorter, itemsDataColumns, columnNames)) {\n        return\n      }\n\n      const existingColumnState = sorterState.find((x) => x.column === column)\n      const multiple = typeof columnSorter === 'object' && columnSorter.multiple\n\n      // If the column already has a sort state\n      if (existingColumnState) {\n        // No need to update if the order is already the same\n        if (existingColumnState.state === order) {\n          return\n        }\n\n        // Remove the column from sorting if resetable and descending\n        if (\n          typeof columnSorter === 'object' &&\n          columnSorter.resetable &&\n          existingColumnState.state === 'desc' &&\n          order !== 'asc'\n        ) {\n          setSorterState(multiple ? sorterState.filter((x) => x.column !== column) : [])\n        } else {\n          // Toggle between ascending and descending\n          const newState = {\n            column,\n            state: order || (existingColumnState.state === 'asc' ? 'desc' : 'asc'),\n          }\n\n          setSorterState(\n            multiple\n              ? sorterState.map((item) => (item.column === column ? newState : item))\n              : [newState],\n          )\n        }\n      } else {\n        // If the column is not yet sorted, add it with the default or provided order\n        const newSorter = { column, state: order || 'asc' }\n        setSorterState(multiple ? [...sorterState, newSorter] : [newSorter])\n      }\n    }\n\n    const handleTableFilterChange = (value: string, type: string): void => {\n      const isLazy = tableFilter && typeof tableFilter === 'object' && tableFilter.lazy === true\n      if ((isLazy && type === 'input') || (!isLazy && type === 'change')) {\n        return\n      }\n\n      setActivePage(1)\n      setTableFilterState(value)\n    }\n\n    useEffect(() => {\n      mountedRef.current = true\n    }, [])\n\n    return (\n      <>\n        <div {...rest} ref={ref}>\n          {(itemsPerPageSelect || tableFilter || cleaner) && (\n            <div className=\"row my-2 mx-0\">\n              {(tableFilter || cleaner) && (\n                <>\n                  <div className=\"col-auto p-0\">\n                    {tableFilter && (\n                      <div className=\"row mb-2\">\n                        <CFormLabel className=\"col-sm-auto col-form-label\">\n                          {tableFilterLabel}\n                        </CFormLabel>\n                        <div className=\"col-sm-auto\">\n                          <CFormInput\n                            onInput={(e) => {\n                              handleTableFilterChange((e.target as HTMLInputElement).value, 'input')\n                            }}\n                            onChange={(e) => {\n                              handleTableFilterChange(\n                                (e.target as HTMLInputElement).value,\n                                'change',\n                              )\n                            }}\n                            placeholder={tableFilterPlaceholder}\n                            value={tableFilterState || ''}\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"col-auto p-0\">\n                    {cleaner && (\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-transparent\"\n                        {...(!(\n                          tableFilterState ||\n                          sorterState.length > 0 ||\n                          Object.values(columnFilterState).join('')\n                        ) && {\n                          disabled: true,\n                          tabIndex: -1,\n                        })}\n                        onClick={() => handleClean()}\n                        onKeyDown={(event) => {\n                          if (event.key === 'Enter') handleClean()\n                        }}\n                      >\n                        <CIcon width={18} icon={cilFilterX} />\n                      </button>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"position-relative\">\n          <CTable {...tableProps}>\n            {header && (\n              <CSmartTableHead\n                {...tableHeadProps}\n                columnFilter={columnFilter}\n                columnFilterState={columnFilterState}\n                columns={columns ?? columnNames}\n                columnSorter={columnSorter}\n                items={_items}\n                selectable={selectable}\n                selectAll={selectAll}\n                selectedAll={selectedAll}\n                sorterState={sorterState}\n                sortingIcon={sortingIcon}\n                sortingIconAscending={sortingIconAscending}\n                sortingIconDescending={sortingIconDescending}\n                handleFilterOnChange={(key, event) =>\n                  handleColumnFilterChange(key, event, 'change')\n                }\n                handleFilterOnInput={(key, event) => handleColumnFilterChange(key, event, 'input')}\n                handleOnCustomFilterChange={(key, event) => handleColumnFilterChange(key, event)}\n                handleSelectAllChecked={() => handleSelectAllChecked()}\n                handleSort={(key, index, order) => handleSorterChange(key, index, order)}\n              />\n            )}\n            <CSmartTableBody\n              clickableRows={clickableRows}\n              columnNames={columnNames}\n              columns={columns ?? columnNames}\n              currentItems={currentItems}\n              firstItemOnActivePageIndex={firstItemOnActivePageIndex}\n              noItemsLabel={noItemsLabel}\n              onRowClick={(item, index, columnName, event) =>\n                clickableRows && onRowClick && onRowClick(item, index, columnName, event)\n              }\n              onRowChecked={(item, value) => handleRowChecked(item, value)}\n              scopedColumns={scopedColumns}\n              selectable={selectable}\n              selected={_selected}\n              {...tableBodyProps}\n            />\n            {typeof footer === 'boolean' && footer && (\n              <CSmartTableHead\n                as={CTableFoot}\n                {...tableFootProps}\n                columnFilter={false}\n                columnSorter={false}\n                columns={columns ?? columnNames}\n                items={_items}\n                handleSelectAllChecked={() => handleSelectAllChecked()}\n                selectable={selectable}\n                selectAll={selectAll}\n                selectedAll={selectedAll}\n                showGroups={false}\n              />\n            )}\n            {Array.isArray(footer) && (\n              <CTableFoot {...tableFootProps}>\n                <CTableRow>\n                  {footer.map((item: FooterItem | string, index: number) => (\n                    <CTableDataCell\n                      {...(typeof item === 'object' && item._props && { ...item._props })}\n                      key={index}\n                    >\n                      {typeof item === 'object' ? item.label : item}\n                    </CTableDataCell>\n                  ))}\n                </CTableRow>\n              </CTableFoot>\n            )}\n          </CTable>\n          {loading && (\n            <CElementCover\n              boundaries={[\n                { sides: ['top'], query: 'tbody' },\n                { sides: ['bottom'], query: 'tbody' },\n              ]}\n            >\n              {elementCover}\n            </CElementCover>\n          )}\n        </div>\n\n        {(pagination || itemsPerPageSelect) && (\n          <div className=\"row\">\n            <div className=\"col\">\n              {((pagination && numberOfPages > 1) ||\n                (paginationProps && paginationProps.pages > 1)) && (\n                <CSmartPagination\n                  activePage={_activePage}\n                  onActivePageChange={(page) => {\n                    pagination && typeof pagination === 'object' && pagination.external\n                      ? onActivePageChange && onActivePageChange(page)\n                      : setActivePage(page)\n                  }}\n                  pages={numberOfPages}\n                  {...paginationProps}\n                />\n              )}\n            </div>\n            <div className=\"col-auto ms-auto\">\n              {itemsPerPageSelect && (\n                <div className=\"row\">\n                  <CFormLabel className=\"col-auto col-form-label\">{itemsPerPageLabel}</CFormLabel>\n                  <div className=\"col-auto\">\n                    <CFormSelect\n                      defaultValue={_itemsPerPage}\n                      onChange={(event: ChangeEvent<HTMLSelectElement>) =>\n                        handleItemsPerPageChange(event)\n                      }\n                    >\n                      {itemsPerPageOptions &&\n                        itemsPerPageOptions.map((number, index) => {\n                          return (\n                            <option value={number} key={index}>\n                              {number}\n                            </option>\n                          )\n                        })}\n                    </CFormSelect>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    )\n  },\n)\n\nCSmartTable.propTypes = {\n  activePage: PropTypes.number,\n  cleaner: PropTypes.bool,\n  clickableRows: PropTypes.bool,\n  columnFilter: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  columnFilterValue: PropTypes.object,\n  columns: PropTypes.array,\n  columnSorter: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  elementCover: PropTypes.node,\n  footer: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n  header: PropTypes.bool,\n  items: PropTypes.array,\n  itemsNumber: PropTypes.number,\n  itemsPerPage: PropTypes.number,\n  itemsPerPageLabel: PropTypes.string,\n  itemsPerPageOptions: PropTypes.array,\n  itemsPerPageSelect: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  loading: PropTypes.bool,\n  noItemsLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  onActivePageChange: PropTypes.func,\n  onColumnFilterChange: PropTypes.func,\n  onFilteredItemsChange: PropTypes.func,\n  onItemsPerPageChange: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSelectAll: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  onSorterChange: PropTypes.func, // TODO: change to `onColumnSorterChange` in v6\n  onTableFilterChange: PropTypes.func,\n  pagination: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  paginationProps: PropTypes.any, // TODO: update\n  scopedColumns: PropTypes.object,\n  selectable: PropTypes.bool,\n  selectAll: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  selected: PropTypes.array,\n  sorterValue: PropTypes.oneOfType([\n    PropTypes.shape({\n      column: PropTypes.string.isRequired,\n      state: PropTypes.oneOf<SorterValue['state']>(['asc', 'desc', 0]).isRequired,\n    }),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        column: PropTypes.string.isRequired,\n        state: PropTypes.oneOf<SorterValue['state']>(['asc', 'desc', 0]).isRequired,\n      }).isRequired,\n    ),\n  ]),\n  sortingIcon: PropTypes.node,\n  sortingIconAscending: PropTypes.node,\n  sortingIconDescending: PropTypes.node,\n  tableBodyProps: PropTypes.object,\n  tableFootProps: PropTypes.object,\n  tableFilter: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  tableFilterLabel: PropTypes.string,\n  tableFilterPlaceholder: PropTypes.string,\n  tableFilterValue: PropTypes.string,\n  tableHeadProps: PropTypes.object,\n  tableProps: PropTypes.object,\n}\n\nCSmartTable.displayName = 'CSmartTable'\n"]},"metadata":{},"sourceType":"module"}