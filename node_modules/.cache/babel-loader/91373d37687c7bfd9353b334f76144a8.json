{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Movie-react\\\\src\\\\Components\\\\Admin\\\\movieForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieForm() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genres, setGenres] = useState([]); // Lưu danh sách thể loại từ backend\n\n  const [selectedGenres, setSelectedGenres] = useState([]); // Lưu các thể loại được chọn\n\n  const [description, setDescription] = useState(\"\");\n  const [releaseDate, setReleaseDate] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const API_BASE = \"http://localhost/Movie-react/backend/API\"; // Load genres từ backend (API)\n\n  useEffect(() => {\n    axios.get(`${API_BASE}/genres.php`).then(res => setGenres(res.data)).catch(err => console.error(\"Lỗi khi lấy danh sách thể loại:\", err));\n  }, []); // Nếu có id thì load thông tin phim\n\n  useEffect(() => {\n    if (id) {\n      axios.get(`${API_BASE}/get_movie.php?id=${id}`).then(res => {\n        const movie = res.data;\n        setTitle(movie.title);\n        setAuthor(movie.author);\n        setDescription(movie.description);\n        setReleaseDate(movie.release_date);\n        setSelectedGenres(movie.genres_id); // genres_id sẽ là mảng\n      }).catch(err => console.error(\"Lỗi khi lấy thông tin phim:\", err));\n    }\n  }, [id]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      title,\n      author,\n      genres: selectedGenres,\n      // Gửi mảng genres\n      description,\n      release_date: releaseDate\n    };\n    const request = id ? axios.post(`${API_BASE}/update_movie.php?id=${id}`, payload) : axios.post(`${API_BASE}/add_movie.php`, payload);\n    request.then(() => navigate(\"/admin\")).catch(err => console.error(\"Lỗi khi gửi dữ liệu:\", err));\n  };\n\n  const handleGenreChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n    setSelectedGenres(selectedOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\xEAn phim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"border w-full px-2 py-1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"T\\xE1c gi\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        className: \"border w-full px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Th\\u1EC3 lo\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: selectedGenres,\n        onChange: handleGenreChange,\n        className: \"border w-full px-2 py-1\",\n        required: true,\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"M\\xF4 t\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"border w-full px-2 py-1\",\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium\",\n        children: \"Ng\\xE0y xu\\u1EA5t b\\u1EA3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: releaseDate,\n        onChange: e => setReleaseDate(e.target.value),\n        className: \"border w-full px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 text-white px-4 py-2 rounded\",\n      type: \"submit\",\n      children: id ? \"Cập nhật\" : \"Thêm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieForm, \"bydFKX9DHnhrFQc2PxSAPm5tdWw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"sources":["C:/wamp64/www/Movie-react/src/Components/Admin/movieForm.jsx"],"names":["useNavigate","useParams","useState","useEffect","axios","MovieForm","title","setTitle","author","setAuthor","genres","setGenres","selectedGenres","setSelectedGenres","description","setDescription","releaseDate","setReleaseDate","id","navigate","API_BASE","get","then","res","data","catch","err","console","error","movie","release_date","genres_id","handleSubmit","e","preventDefault","payload","request","post","handleGenreChange","selectedOptions","Array","from","target","option","value","map","genre","name"],"mappings":"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","sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction MovieForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genres, setGenres] = useState([]);   // Lưu danh sách thể loại từ backend\r\n  const [selectedGenres, setSelectedGenres] = useState([]); // Lưu các thể loại được chọn\r\n  const [description, setDescription] = useState(\"\");\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const API_BASE = \"http://localhost/Movie-react/backend/API\";\r\n\r\n  // Load genres từ backend (API)\r\n  useEffect(() => {\r\n    axios.get(`${API_BASE}/genres.php`)\r\n      .then(res => setGenres(res.data))\r\n      .catch(err => console.error(\"Lỗi khi lấy danh sách thể loại:\", err));\r\n  }, []);\r\n\r\n  // Nếu có id thì load thông tin phim\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios.get(`${API_BASE}/get_movie.php?id=${id}`)\r\n        .then(res => {\r\n          const movie = res.data;\r\n          setTitle(movie.title);\r\n          setAuthor(movie.author);\r\n          setDescription(movie.description);\r\n          setReleaseDate(movie.release_date);\r\n          setSelectedGenres(movie.genres_id); // genres_id sẽ là mảng\r\n        })\r\n        .catch(err => console.error(\"Lỗi khi lấy thông tin phim:\", err));\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      title,\r\n      author,\r\n      genres: selectedGenres, // Gửi mảng genres\r\n      description,\r\n      release_date: releaseDate\r\n    };\r\n\r\n    const request = id\r\n      ? axios.post(`${API_BASE}/update_movie.php?id=${id}`, payload)\r\n      : axios.post(`${API_BASE}/add_movie.php`, payload);\r\n\r\n    request.then(() => navigate(\"/admin\"))\r\n      .catch(err => console.error(\"Lỗi khi gửi dữ liệu:\", err));\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\r\n    setSelectedGenres(selectedOptions);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block font-medium\">Tên phim</label>\r\n        <input value={title} onChange={e => setTitle(e.target.value)} className=\"border w-full px-2 py-1\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Tác giả</label>\r\n        <input value={author} onChange={e => setAuthor(e.target.value)} className=\"border w-full px-2 py-1\" />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Thể loại</label>\r\n        <select\r\n          multiple\r\n          value={selectedGenres}\r\n          onChange={handleGenreChange}\r\n          className=\"border w-full px-2 py-1\"\r\n          required\r\n        >\r\n          {genres.map(genre => (\r\n            <option key={genre.id} value={genre.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Mô tả</label>\r\n        <textarea value={description} onChange={e => setDescription(e.target.value)} className=\"border w-full px-2 py-1\" rows={4}></textarea>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block font-medium\">Ngày xuất bản</label>\r\n        <input type=\"date\" value={releaseDate} onChange={e => setReleaseDate(e.target.value)} className=\"border w-full px-2 py-1\" />\r\n      </div>\r\n\r\n      <button className=\"bg-green-500 text-white px-4 py-2 rounded\" type=\"submit\">\r\n        {id ? \"Cập nhật\" : \"Thêm\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MovieForm;\r\n"]},"metadata":{},"sourceType":"module"}