{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nvar useStateWithCallback = function (initialState, handler, runHandler) {\n  var _a = useState(initialState),\n      state = _a[0],\n      setState = _a[1];\n\n  handler && useEffect(function () {\n    runHandler && handler(state);\n  }, [state]);\n  return [state, setState];\n};\n\nexport { useStateWithCallback };","map":{"version":3,"mappings":";;IAEaA,oBAAoB,GAAG,UAClCC,YADkC,EAElCC,OAFkC,EAGlCC,UAHkC,EAGd;AAEd,WAAoBC,QAAQ,CAAIH,YAAJ,CAA5B;AAAA,MAACI,KAAK,QAAN;AAAA,MAAQC,QAAQ,QAAhB;;AACNJ,SAAO,IACLK,SAAS,CAAC;AACRJ,cAAU,IAAID,OAAO,CAACG,KAAD,CAArB;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CADX;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACF","names":["useStateWithCallback","initialState","handler","runHandler","useState","state","setState","useEffect"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\hooks\\useStateWithCallback.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport const useStateWithCallback = <S>(\n  initialState: S,\n  handler?: (prevState: S) => void,\n  runHandler?: boolean,\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [state, setState] = useState<S>(initialState)\n  handler &&\n    useEffect(() => {\n      runHandler && handler(state)\n    }, [state])\n  return [state, setState]\n}\n"]},"metadata":{},"sourceType":"module"}