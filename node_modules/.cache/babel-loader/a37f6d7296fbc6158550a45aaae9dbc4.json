{"ast":null,"code":"import { __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport { CButton } from '../button/CButton.js';\nvar CCalendarNavigation = forwardRef(function (_a, ref) {\n  var ariaNavNextMonthLabel = _a.ariaNavNextMonthLabel,\n      ariaNavNextYearLabel = _a.ariaNavNextYearLabel,\n      ariaNavPrevMonthLabel = _a.ariaNavPrevMonthLabel,\n      ariaNavPrevYearLabel = _a.ariaNavPrevYearLabel,\n      calendarDate = _a.calendarDate,\n      locale = _a.locale,\n      navigation = _a.navigation,\n      navNextDoubleIcon = _a.navNextDoubleIcon,\n      navNextIcon = _a.navNextIcon,\n      navPrevDoubleIcon = _a.navPrevDoubleIcon,\n      navPrevIcon = _a.navPrevIcon,\n      navYearFirst = _a.navYearFirst,\n      onMonthClick = _a.onMonthClick,\n      onNavigationClick = _a.onNavigationClick,\n      onYearClick = _a.onYearClick,\n      view = _a.view;\n  return React.createElement(\"div\", {\n    className: \"calendar-nav\",\n    ref: ref\n  }, navigation && React.createElement(\"div\", {\n    className: \"calendar-nav-prev\"\n  }, React.createElement(CButton, {\n    color: \"transparent\",\n    size: \"sm\",\n    \"aria-label\": ariaNavPrevYearLabel,\n    onClick: function () {\n      return onNavigationClick('prev', true);\n    }\n  }, navPrevDoubleIcon !== null && navPrevDoubleIcon !== void 0 ? navPrevDoubleIcon : React.createElement(\"span\", {\n    className: \"calendar-nav-icon calendar-nav-icon-double-prev\"\n  })), view === 'days' && React.createElement(CButton, {\n    color: \"transparent\",\n    size: \"sm\",\n    \"aria-label\": ariaNavPrevMonthLabel,\n    onClick: function () {\n      return onNavigationClick('prev');\n    }\n  }, navPrevIcon !== null && navPrevIcon !== void 0 ? navPrevIcon : React.createElement(\"span\", {\n    className: \"calendar-nav-icon calendar-nav-icon-prev\"\n  }))), React.createElement(\"div\", __assign({\n    className: \"calendar-nav-date\",\n    \"aria-live\": \"polite\"\n  }, navYearFirst && {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }), view === 'days' && React.createElement(CButton, {\n    color: \"transparent\",\n    size: \"sm\",\n    onClick: function () {\n      return navigation && onMonthClick();\n    }\n  }, calendarDate && calendarDate.toLocaleDateString(locale, {\n    month: 'long'\n  })), React.createElement(CButton, __assign({\n    color: \"transparent\",\n    size: \"sm\",\n    onClick: function () {\n      return navigation && onYearClick();\n    }\n  }, navYearFirst && {\n    style: {\n      order: '-1'\n    }\n  }), calendarDate && calendarDate.toLocaleDateString(locale, {\n    year: 'numeric'\n  }))), navigation && React.createElement(\"div\", {\n    className: \"calendar-nav-next\"\n  }, view === 'days' && React.createElement(CButton, {\n    color: \"transparent\",\n    size: \"sm\",\n    \"aria-label\": ariaNavNextMonthLabel,\n    onClick: function () {\n      return onNavigationClick('next');\n    }\n  }, navNextIcon !== null && navNextIcon !== void 0 ? navNextIcon : React.createElement(\"span\", {\n    className: \"calendar-nav-icon calendar-nav-icon-next\"\n  })), React.createElement(CButton, {\n    color: \"transparent\",\n    size: \"sm\",\n    \"aria-label\": ariaNavNextYearLabel,\n    onClick: function () {\n      return onNavigationClick('next', true);\n    }\n  }, navNextDoubleIcon !== null && navNextDoubleIcon !== void 0 ? navNextDoubleIcon : React.createElement(\"span\", {\n    className: \"calendar-nav-icon calendar-nav-icon-double-next\"\n  }))));\n});\nCCalendarNavigation.displayName = 'CCalendarNavigation';\nexport { CCalendarNavigation };","map":{"version":3,"mappings":"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","names":["CCalendarNavigation","forwardRef","_a","ref","ariaNavNextMonthLabel","ariaNavNextYearLabel","ariaNavPrevMonthLabel","ariaNavPrevYearLabel","calendarDate","locale","navigation","navNextDoubleIcon","navNextIcon","navPrevDoubleIcon","navPrevIcon","navYearFirst","onMonthClick","onNavigationClick","onYearClick","view","React","className","CButton","color","size","onClick","__assign","style","display","justifyContent","toLocaleDateString","month","order","year","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\calendar\\CCalendarNavigation.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode } from 'react'\nimport { CButton } from '../button/CButton'\nimport type { ViewTypes } from './types'\n\nexport interface CCalendarNavigationProps {\n  ariaNavNextMonthLabel?: string\n  ariaNavNextYearLabel?: string\n  ariaNavPrevMonthLabel?: string\n  ariaNavPrevYearLabel?: string\n  calendarDate?: Date\n  locale?: string\n  navigation?: boolean\n  navNextDoubleIcon?: ReactNode\n  navNextIcon?: ReactNode\n  navPrevDoubleIcon?: ReactNode\n  navPrevIcon?: ReactNode\n  navYearFirst?: boolean | undefined\n  onMonthClick: () => void\n  onNavigationClick: (direction: string, double?: boolean) => void\n  onYearClick: () => void\n  view: ViewTypes\n}\n\nexport const CCalendarNavigation = forwardRef<HTMLDivElement, CCalendarNavigationProps>(\n  (\n    {\n      ariaNavNextMonthLabel,\n      ariaNavNextYearLabel,\n      ariaNavPrevMonthLabel,\n      ariaNavPrevYearLabel,\n      calendarDate,\n      locale,\n      navigation,\n      navNextDoubleIcon,\n      navNextIcon,\n      navPrevDoubleIcon,\n      navPrevIcon,\n      navYearFirst,\n      onMonthClick,\n      onNavigationClick,\n      onYearClick,\n      view,\n    },\n    ref\n  ) => {\n    return (\n      <div className=\"calendar-nav\" ref={ref}>\n        {navigation && (\n          <div className=\"calendar-nav-prev\">\n            <CButton\n              color=\"transparent\"\n              size=\"sm\"\n              aria-label={ariaNavPrevYearLabel}\n              onClick={() => onNavigationClick('prev', true)}\n            >\n              {navPrevDoubleIcon ?? (\n                <span className=\"calendar-nav-icon calendar-nav-icon-double-prev\" />\n              )}\n            </CButton>\n            {view === 'days' && (\n              <CButton\n                color=\"transparent\"\n                size=\"sm\"\n                aria-label={ariaNavPrevMonthLabel}\n                onClick={() => onNavigationClick('prev')}\n              >\n                {navPrevIcon ?? <span className=\"calendar-nav-icon calendar-nav-icon-prev\" />}\n              </CButton>\n            )}\n          </div>\n        )}\n        <div\n          className=\"calendar-nav-date\"\n          aria-live=\"polite\"\n          {...(navYearFirst && { style: { display: 'flex', justifyContent: 'center' } })}\n        >\n          {view === 'days' && (\n            <CButton color=\"transparent\" size=\"sm\" onClick={() => navigation && onMonthClick()}>\n              {calendarDate && calendarDate.toLocaleDateString(locale, { month: 'long' })}\n            </CButton>\n          )}\n          <CButton\n            color=\"transparent\"\n            size=\"sm\"\n            onClick={() => navigation && onYearClick()}\n            {...(navYearFirst && { style: { order: '-1' } })}\n          >\n            {calendarDate && calendarDate.toLocaleDateString(locale, { year: 'numeric' })}\n          </CButton>\n        </div>\n        {navigation && (\n          <div className=\"calendar-nav-next\">\n            {view === 'days' && (\n              <CButton\n                color=\"transparent\"\n                size=\"sm\"\n                aria-label={ariaNavNextMonthLabel}\n                onClick={() => onNavigationClick('next')}\n              >\n                {navNextIcon ?? <span className=\"calendar-nav-icon calendar-nav-icon-next\" />}\n              </CButton>\n            )}\n            <CButton\n              color=\"transparent\"\n              size=\"sm\"\n              aria-label={ariaNavNextYearLabel}\n              onClick={() => onNavigationClick('next', true)}\n            >\n              {navNextDoubleIcon ?? (\n                <span className=\"calendar-nav-icon calendar-nav-icon-double-next\" />\n              )}\n            </CButton>\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nCCalendarNavigation.displayName = 'CCalendarNavigation'\n"]},"metadata":{},"sourceType":"module"}