{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Movie\\\\src\\\\Components\\\\TopMovies\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TopMovies = _ref => {\n  _s();\n\n  let {\n    watchList,\n    setWatchList\n  } = _ref;\n  const [filterCtg, setFilterCtg] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [loadingGenres, setLoadingGenres] = useState(false);\n  const [loadingMovies, setLoadingMovies] = useState(true);\n  const API_BASE = \"http://localhost/Movie/backend/API\";\n  useEffect(() => {\n    setLoadingGenres(true);\n    fetch(`${API_BASE}/genres.php`).then(res => res.json()).then(data => {\n      setGenres(data);\n      setLoadingGenres(false);\n    }).catch(() => {\n      setGenres([]);\n      setLoadingGenres(false);\n    });\n  }, []);\n  useEffect(() => {\n    setLoadingMovies(true);\n    let url = `${API_BASE}/movies.php`;\n\n    if (filterCtg) {\n      url += `?genre=${filterCtg}`;\n    }\n\n    fetch(url).then(res => res.json()).then(data => {\n      setTopMovies(data);\n      setLoadingMovies(false);\n    }).catch(() => {\n      setTopMovies([]);\n      setLoadingMovies(false);\n    });\n  }, [filterCtg]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"new-sec top-rated-sec\",\n    id: \"movies\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"sub-title\",\n          children: \"ONLINE STREAMING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Top Rated Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns-div categories-btns\",\n        children: loadingGenres ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading genres...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: !filterCtg ? \"btn category-btn active\" : \"btn category-btn\",\n            onClick: () => setFilterCtg(null),\n            children: \"T\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filterCtg === genre.id ? \"btn category-btn active\" : \"btn category-btn\",\n            onClick: () => setFilterCtg(genre.id),\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row movies-grid\",\n        children: loadingMovies ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : topMovies.length > 0 ? topMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie,\n          setWatchList: setWatchList,\n          watchList: watchList\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopMovies, \"H+QaKMy4HFPWJ0TXQbNQAk87s3k=\");\n\n_c = TopMovies;\nexport default TopMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopMovies\");","map":{"version":3,"sources":["C:/wamp64/www/Movie/src/Components/TopMovies/index.jsx"],"names":["React","useState","useEffect","MovieCard","TopMovies","watchList","setWatchList","filterCtg","setFilterCtg","genres","setGenres","topMovies","setTopMovies","loadingGenres","setLoadingGenres","loadingMovies","setLoadingMovies","API_BASE","fetch","then","res","json","data","catch","url","map","genre","id","name","length","movie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,SAAS,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAgC;AACjD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMgB,QAAQ,GAAG,oCAAjB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAI,IAAAA,KAAK,CAAE,GAAED,QAAS,aAAb,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdZ,MAAAA,SAAS,CAACY,IAAD,CAAT;AACAR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KALH,EAMGS,KANH,CAMS,MAAM;AACXb,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KATH;AAUD,GAZQ,EAYN,EAZM,CAAT;AAcAZ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,QAAIQ,GAAG,GAAI,GAAEP,QAAS,aAAtB;;AACA,QAAIV,SAAJ,EAAe;AACbiB,MAAAA,GAAG,IAAK,UAASjB,SAAU,EAA3B;AACD;;AACDW,IAAAA,KAAK,CAACM,GAAD,CAAL,CACGL,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdV,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACAN,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KALH,EAMGO,KANH,CAMS,MAAM;AACXX,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KATH;AAUD,GAhBQ,EAgBN,CAACT,SAAD,CAhBM,CAAT;AAkBA,sBACE;AAAS,IAAA,SAAS,EAAC,uBAAnB;AAA2C,IAAA,EAAE,EAAC,QAA9C;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,kBACGM,aAAa,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADY,gBAGZ;AAAA,kCACE;AACE,YAAA,SAAS,EAAE,CAACN,SAAD,GAAa,yBAAb,GAAyC,kBADtD;AAEE,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGC,MAAM,CAACgB,GAAP,CAAYC,KAAD,iBACV;AAEE,YAAA,SAAS,EAAEnB,SAAS,KAAKmB,KAAK,CAACC,EAApB,GAAyB,yBAAzB,GAAqD,kBAFlE;AAGE,YAAA,OAAO,EAAE,MAAMnB,YAAY,CAACkB,KAAK,CAACC,EAAP,CAH7B;AAAA,sBAKGD,KAAK,CAACE;AALT,aACOF,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,kBADD,CAPH;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cANF,eA8BE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACGZ,aAAa,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADY,GAEVJ,SAAS,CAACkB,MAAV,GAAmB,CAAnB,GACFlB,SAAS,CAACc,GAAV,CAAeK,KAAD,iBACZ,QAAC,SAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAGE,UAAA,YAAY,EAAExB,YAHhB;AAIE,UAAA,SAAS,EAAED;AAJb,WAEOyB,KAAK,CAACH,EAFb;AAAA;AAAA;AAAA;AAAA,gBADF,CADE,gBAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CA3FD;;GAAMvB,S;;KAAAA,S;AA6FN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MovieCard from \"../MovieCard\";\r\nimport \"./style.css\";\r\n\r\nconst TopMovies = ({ watchList, setWatchList }) => {\r\n  const [filterCtg, setFilterCtg] = useState(null);\r\n  const [genres, setGenres] = useState([]);\r\n  const [topMovies, setTopMovies] = useState([]);\r\n  const [loadingGenres, setLoadingGenres] = useState(false);\r\n  const [loadingMovies, setLoadingMovies] = useState(true);\r\n  const API_BASE = \"http://localhost/Movie/backend/API\";\r\n\r\n  useEffect(() => {\r\n    setLoadingGenres(true);\r\n    fetch(`${API_BASE}/genres.php`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setGenres(data);\r\n        setLoadingGenres(false);\r\n      })\r\n      .catch(() => {\r\n        setGenres([]);\r\n        setLoadingGenres(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoadingMovies(true);\r\n    let url = `${API_BASE}/movies.php`;\r\n    if (filterCtg) {\r\n      url += `?genre=${filterCtg}`;\r\n    }\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTopMovies(data);\r\n        setLoadingMovies(false);\r\n      })\r\n      .catch(() => {\r\n        setTopMovies([]);\r\n        setLoadingMovies(false);\r\n      });\r\n  }, [filterCtg]);\r\n\r\n  return (\r\n    <section className=\"new-sec top-rated-sec\" id=\"movies\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <h5 className=\"sub-title\">ONLINE STREAMING</h5>\r\n          <h2 className=\"title\">Top Rated Movies</h2>\r\n        </div>\r\n\r\n        <div className=\"btns-div categories-btns\">\r\n          {loadingGenres ? (\r\n            <p>Loading genres...</p>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className={!filterCtg ? \"btn category-btn active\" : \"btn category-btn\"}\r\n                onClick={() => setFilterCtg(null)}\r\n              >\r\n                Tất cả\r\n              </button>\r\n              {genres.map((genre) => (\r\n                <button\r\n                  key={genre.id}\r\n                  className={filterCtg === genre.id ? \"btn category-btn active\" : \"btn category-btn\"}\r\n                  onClick={() => setFilterCtg(genre.id)}\r\n                >\r\n                  {genre.name}\r\n                </button>\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"row movies-grid\">\r\n          {loadingMovies ? (\r\n            <p>Loading movies...</p>\r\n          ) : topMovies.length > 0 ? (\r\n            topMovies.map((movie) => (\r\n              <MovieCard\r\n                movie={movie}\r\n                key={movie.id}\r\n                setWatchList={setWatchList}\r\n                watchList={watchList}\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>No movies found.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TopMovies;\r\n"]},"metadata":{},"sourceType":"module"}