{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CListGroup = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      _c = _a.as,\n      Component = _c === void 0 ? 'ul' : _c,\n      className = _a.className,\n      flush = _a.flush,\n      layout = _a.layout,\n      rest = __rest(_a, [\"children\", \"as\", \"className\", \"flush\", \"layout\"]);\n\n  return React.createElement(Component, __assign({\n    className: classNames('list-group', (_b = {\n      'list-group-flush': flush\n    }, _b[\"list-group-\".concat(layout)] = layout, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCListGroup.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  flush: PropTypes.bool,\n  layout: PropTypes.oneOf(['horizontal', 'horizontal-sm', 'horizontal-md', 'horizontal-lg', 'horizontal-xl', 'horizontal-xxl'])\n};\nCListGroup.displayName = 'CListGroup';\nexport { CListGroup };","map":{"version":3,"mappings":";;;;IA+BaA,UAAU,GAA6DC,UAAU,CAG5F,UAACC,EAAD,EAAwEC,GAAxE,EAA2E;;;AAAxE,cAAQ,cAAR;AAAA,MAAUC,UAAV;AAAA,MAAcC,SAAS,mBAAG,IAAH,GAAOD,EAA9B;AAAA,MAAgCE,SAAS,eAAzC;AAAA,MAA2CC,KAAK,WAAhD;AAAA,MAAkDC,MAAM,YAAxD;AAAA,MAA6DC,IAAI,GAAnEC,8DAAE;;AACH,SACEC,oBAACN,SAAD,EAAUO;AACRN,aAAS,EAAEO,UAAU,CACnB,YADmB,GACPC;AAEV,0BAAoBP;AAFV,OAGVO,GAAC,cAAcC,MAAd,CAAcP,MAAd,CAAD,IAA0BA,MAHhB,IADO,GAMnBF,SANmB;AADb,KASJG,IATI,EAUR;AAAAN,OAAG,EAAEA;AAAL,GAVQ,CAAV,EAYGa,QAZH,CADF;AAgBD,CApB6F;AAsB9FhB,UAAU,CAACiB,SAAX,GAAuB;AACrBC,IAAE,EAAEC,SAAS,CAACC,WADO;AAErBJ,UAAQ,EAAEG,SAAS,CAACE,IAFC;AAGrBf,WAAS,EAAEa,SAAS,CAACG,MAHA;AAIrBf,OAAK,EAAEY,SAAS,CAACI,IAJI;AAKrBf,QAAM,EAAEW,SAAS,CAACK,KAAV,CAAgB,CACtB,YADsB,EAEtB,eAFsB,EAGtB,eAHsB,EAItB,eAJsB,EAKtB,eALsB,EAMtB,gBANsB,CAAhB;AALa,CAAvB;AAeAxB,UAAU,CAACyB,WAAX,GAAyB,YAAzB","names":["CListGroup","forwardRef","_a","ref","_c","Component","className","flush","layout","rest","__rest","React","__assign","classNames","_b","concat","children","propTypes","as","PropTypes","elementType","node","string","bool","oneOf","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\list-group\\CListGroup.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CListGroupProps extends HTMLAttributes<HTMLDivElement | HTMLUListElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Remove some borders and rounded corners to render list group items edge-to-edge in a parent component (e.g., `<CCard>`).\n   */\n  flush?: boolean\n  /**\n   * Specify a layout type.\n   */\n  layout?:\n    | 'horizontal'\n    | 'horizontal-sm'\n    | 'horizontal-md'\n    | 'horizontal-lg'\n    | 'horizontal-xl'\n    | 'horizontal-xxl'\n}\n\nexport const CListGroup: PolymorphicRefForwardingComponent<'ul', CListGroupProps> = forwardRef<\n  HTMLDivElement | HTMLUListElement,\n  CListGroupProps\n>(({ children, as: Component = 'ul', className, flush, layout, ...rest }, ref) => {\n  return (\n    <Component\n      className={classNames(\n        'list-group',\n        {\n          'list-group-flush': flush,\n          [`list-group-${layout}`]: layout,\n        },\n        className,\n      )}\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCListGroup.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  flush: PropTypes.bool,\n  layout: PropTypes.oneOf([\n    'horizontal',\n    'horizontal-sm',\n    'horizontal-md',\n    'horizontal-lg',\n    'horizontal-xl',\n    'horizontal-xxl',\n  ]),\n}\n\nCListGroup.displayName = 'CListGroup'\n"]},"metadata":{},"sourceType":"module"}