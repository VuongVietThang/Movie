{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CNavbarBrand = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      as = _a.as,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"as\", \"className\"]);\n\n  var Component = as !== null && as !== void 0 ? as : rest.href ? 'a' : 'span';\n  return React.createElement(Component, __assign({\n    className: classNames('navbar-brand', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCNavbarBrand.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nCNavbarBrand.displayName = 'CNavbarBrand';\nexport { CNavbarBrand };","map":{"version":3,"mappings":";;;;IAsBaA,YAAY,GAA8DC,UAAU,CAG/F,UAACC,EAAD,EAAuCC,GAAvC,EAA0C;AAAvC,cAAQ,cAAR;AAAA,MAAUC,EAAE,QAAZ;AAAA,MAAcC,SAAS,eAAvB;AAAA,MAA4BC,IAAI,GAAlCC,2CAAE;;AACH,MAAMC,SAAS,GAAGJ,EAAE,SAAF,MAAE,KAAF,cAAOE,IAAI,CAACG,IAAL,GAAY,GAAZ,GAAkB,MAA3C;AAEA,SACEC,oBAACF,SAAD,EAAUG;AAACN,aAAS,EAAEO,UAAU,CAAC,cAAD,EAAiBP,SAAjB;AAAtB,KAAuDC,IAAvD,EAA2D;AAAEH,OAAG,EAAEA;AAAP,GAA3D,CAAV,EACGU,QADH,CADF;AAKD,CAXgG;AAajGb,YAAY,CAACc,SAAb,GAAyB;AACvBV,IAAE,EAAEW,SAAS,CAACC,WADS;AAEvBH,UAAQ,EAAEE,SAAS,CAACE,IAFG;AAGvBZ,WAAS,EAAEU,SAAS,CAACG;AAHE,CAAzB;AAMAlB,YAAY,CAACmB,WAAb,GAA2B,cAA3B","names":["CNavbarBrand","forwardRef","_a","ref","as","className","rest","__rest","Component","href","React","__assign","classNames","children","propTypes","PropTypes","elementType","node","string","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\navbar\\CNavbarBrand.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CNavbarBrandProps extends HTMLAttributes<HTMLAnchorElement | HTMLSpanElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   *\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * The href attribute specifies the URL of the page the link goes to.\n   */\n  href?: string\n}\n\nexport const CNavbarBrand: PolymorphicRefForwardingComponent<'a', CNavbarBrandProps> = forwardRef<\n  HTMLAnchorElement | HTMLSpanElement,\n  CNavbarBrandProps\n>(({ children, as, className, ...rest }, ref) => {\n  const Component = as ?? (rest.href ? 'a' : 'span')\n\n  return (\n    <Component className={classNames('navbar-brand', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCNavbarBrand.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCNavbarBrand.displayName = 'CNavbarBrand'\n"]},"metadata":{},"sourceType":"module"}