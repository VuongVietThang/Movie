{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Movie\\\\src\\\\Components\\\\MovieCard\\\\index.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = _ref => {\n  let {\n    movie\n  } = _ref;\n  // Phân biệt các kiểu key (OMDb vs dữ liệu từ backend)\n  const movieId = movie.imdbID || movie.id;\n  const title = movie.Title || movie.title || \"No title\";\n  const posterUrl = movie.poster_url ? `http://localhost/Movie/backend/Image/${movie.poster_url}` : \"/default.jpg\"; // Nếu backend không có ảnh\n\n  const year = movie.Year || (movie.release_date ? movie.release_date.split(\"-\")[0] : \"N/A\");\n  const type = Array.isArray(movie.genres) && movie.genres.length > 0 ? movie.genres.map(g => g.name).join(\", \") : \"Movie\";\n\n  const MovieCard = _ref2 => {\n    let {\n      movie\n    } = _ref2;\n    console.log(\"Movie:\", movie); // rest code\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-poster\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: `/movie/${movieId}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: posterUrl,\n          alt: \"movie-poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: `/movie/${movieId}`,\n            children: title.length > 20 ? title.slice(0, 20) + \"...\" : title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"year\",\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quality\",\n          children: \"HD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"type\",\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/wamp64/www/Movie/src/Components/MovieCard/index.jsx"],"names":["React","Link","MovieCard","movie","movieId","imdbID","id","title","Title","posterUrl","poster_url","year","Year","release_date","split","type","Array","isArray","genres","length","map","g","name","join","console","log","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,SAAS,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B;AACA,QAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,IAAgBF,KAAK,CAACG,EAAtC;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACK,KAAN,IAAeL,KAAK,CAACI,KAArB,IAA8B,UAA5C;AAEA,QAAME,SAAS,GAAGN,KAAK,CAACO,UAAN,GACb,wCAAuCP,KAAK,CAACO,UAAW,EAD3C,GAEd,cAFJ,CAL+B,CAOX;;AACpB,QAAMC,IAAI,GACRR,KAAK,CAACS,IAAN,KACCT,KAAK,CAACU,YAAN,GAAqBV,KAAK,CAACU,YAAN,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAArB,GAAwD,KADzD,CADF;AAGA,QAAMC,IAAI,GACRC,KAAK,CAACC,OAAN,CAAcd,KAAK,CAACe,MAApB,KAA+Bf,KAAK,CAACe,MAAN,CAAaC,MAAb,GAAsB,CAArD,GACIhB,KAAK,CAACe,MAAN,CAAaE,GAAb,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAA1B,EAAgCC,IAAhC,CAAqC,IAArC,CADJ,GAEI,OAHN;;AAKA,QAAMrB,SAAS,GAAG,SAAe;AAAA,QAAd;AAAEC,MAAAA;AAAF,KAAc;AAC/BqB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBtB,KAAtB,EAD+B,CAE/B;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,EAAE,EAAG,UAASC,OAAQ,EAA7C;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEK,SAAV;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAuB,YAAA,EAAE,EAAG,UAASL,OAAQ,EAA7C;AAAA,sBACGG,KAAK,CAACY,MAAN,GAAe,EAAf,GAAoBZ,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAe,EAAf,IAAqB,KAAzC,GAAiDnB;AADpD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,oBAAsBI;AAAtB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,oBAAwBI;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA5CD;;KAAMb,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  // Phân biệt các kiểu key (OMDb vs dữ liệu từ backend)\r\n  const movieId = movie.imdbID || movie.id;\r\n  const title = movie.Title || movie.title || \"No title\";\r\n\r\n  const posterUrl = movie.poster_url\r\n    ? `http://localhost/Movie/backend/Image/${movie.poster_url}`\r\n    : \"/default.jpg\"; // Nếu backend không có ảnh\r\n  const year =\r\n    movie.Year ||\r\n    (movie.release_date ? movie.release_date.split(\"-\")[0] : \"N/A\");\r\n  const type =\r\n    Array.isArray(movie.genres) && movie.genres.length > 0\r\n      ? movie.genres.map((g) => g.name).join(\", \")\r\n      : \"Movie\";\r\n\r\n  const MovieCard = ({ movie }) => {\r\n    console.log(\"Movie:\", movie);\r\n    // rest code\r\n  };\r\n\r\n  return (\r\n    <div className=\"single-movie\">\r\n      <div className=\"movie-poster\">\r\n        <Link className=\"link\" to={`/movie/${movieId}`}>\r\n          <img src={posterUrl} alt=\"movie-poster\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"movie-content\">\r\n        <div className=\"top row\">\r\n          <h5 className=\"title\">\r\n            <Link className=\"link\" to={`/movie/${movieId}`}>\r\n              {title.length > 20 ? title.slice(0, 20) + \"...\" : title}\r\n            </Link>\r\n          </h5>\r\n          <h6 className=\"year\">{year}</h6>\r\n        </div>\r\n        <div className=\"bottom row\">\r\n          <span className=\"quality\">HD</span>\r\n          <span className=\"type\">{type}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}