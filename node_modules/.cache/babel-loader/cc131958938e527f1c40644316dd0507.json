{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CCardImage = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      _b = _a.as,\n      Component = _b === void 0 ? 'img' : _b,\n      className = _a.className,\n      orientation = _a.orientation,\n      rest = __rest(_a, [\"children\", \"as\", \"className\", \"orientation\"]);\n\n  return React.createElement(Component, __assign({\n    className: classNames(orientation ? \"card-img-\".concat(orientation) : 'card-img', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCCardImage.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  orientation: PropTypes.oneOf(['top', 'bottom'])\n};\nCCardImage.displayName = 'CCardImage';\nexport { CCardImage };","map":{"version":3,"mappings":";;;;IAsBaA,UAAU,GAA8DC,UAAU,CAG7F,UAACC,EAAD,EAAuEC,GAAvE,EAA0E;AAAvE,cAAQ,cAAR;AAAA,MAAUC,UAAV;AAAA,MAAcC,SAAS,mBAAG,KAAH,GAAQD,EAA/B;AAAA,MAAiCE,SAAS,eAA1C;AAAA,MAA4CC,WAAW,iBAAvD;AAAA,MAA4DC,IAAI,cAAlE,8CAAkE,CAAhE;;AACH,SACEC,oBAACJ,SAAD,EAAUK;AACRJ,aAAS,EAAEK,UAAU,CAACJ,WAAW,GAAG,mBAAYA,WAAZ,CAAH,GAA+B,UAA3C,EAAuDD,SAAvD;AADb,KAEJE,IAFI,EAEA;AACRL,OAAG,EAAEA;AADG,GAFA,CAAV,EAKGS,QALH,CADF;AASD,CAb8F;AAe/FZ,UAAU,CAACa,SAAX,GAAuB;AACrBC,IAAE,EAAEC,SAAS,CAACC,WADO;AAErBJ,UAAQ,EAAEG,SAAS,CAACE,IAFC;AAGrBX,WAAS,EAAES,SAAS,CAACG,MAHA;AAIrBX,aAAW,EAAEQ,SAAS,CAACI,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB;AAJQ,CAAvB;AAOAnB,UAAU,CAACoB,WAAX,GAAyB,YAAzB","names":["CCardImage","forwardRef","_a","ref","_b","Component","className","orientation","rest","React","__assign","classNames","children","propTypes","as","PropTypes","elementType","node","string","oneOf","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\card\\CCardImage.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, ImgHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardImageProps\n  extends ImgHTMLAttributes<HTMLImageElement | HTMLOrSVGElement | HTMLOrSVGImageElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Optionally orientate the image to the top, bottom, or make it overlaid across the card.\n   */\n  orientation?: 'top' | 'bottom'\n}\n\nexport const CCardImage: PolymorphicRefForwardingComponent<'img', CCardImageProps> = forwardRef<\n  HTMLImageElement | HTMLOrSVGElement | HTMLOrSVGImageElement,\n  CCardImageProps\n>(({ children, as: Component = 'img', className, orientation, ...rest }, ref) => {\n  return (\n    <Component\n      className={classNames(orientation ? `card-img-${orientation}` : 'card-img', className)}\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCCardImage.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  orientation: PropTypes.oneOf(['top', 'bottom']),\n}\n\nCCardImage.displayName = 'CCardImage'\n"]},"metadata":{},"sourceType":"module"}