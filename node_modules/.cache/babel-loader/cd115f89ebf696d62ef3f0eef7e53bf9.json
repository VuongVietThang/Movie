{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CButton } from '../button/CButton.js';\nimport { CFormControlWrapper } from '../form/CFormControlWrapper.js';\nimport { CPicker } from '../picker/CPicker.js';\nimport { CTimePickerRollCol } from './CTimePickerRollCol.js';\nimport { convertTimeToDate, getAmPm, getLocalizedTimePartials, getSelectedHour, getSelectedMinutes, getSelectedSeconds, convert12hTo24h, isValidTime } from './utils.js';\nimport { useDebouncedCallback } from '../../hooks/useDebouncedCallback.js';\nimport '@popperjs/core';\n\nvar _a, _b, _c, _d, _e, _f;\n\nvar CTimePicker = forwardRef(function (_a, ref) {\n  var _b, _c;\n\n  var _d = _a.ampm,\n      ampm = _d === void 0 ? 'auto' : _d,\n      _e = _a.cancelButton,\n      cancelButton = _e === void 0 ? 'Cancel' : _e,\n      _f = _a.cancelButtonColor,\n      cancelButtonColor = _f === void 0 ? 'primary' : _f,\n      _g = _a.cancelButtonSize,\n      cancelButtonSize = _g === void 0 ? 'sm' : _g,\n      _h = _a.cancelButtonVariant,\n      cancelButtonVariant = _h === void 0 ? 'ghost' : _h,\n      className = _a.className,\n      _j = _a.cleaner,\n      cleaner = _j === void 0 ? true : _j,\n      _k = _a.confirmButton,\n      confirmButton = _k === void 0 ? 'OK' : _k,\n      _l = _a.confirmButtonColor,\n      confirmButtonColor = _l === void 0 ? 'primary' : _l,\n      _m = _a.confirmButtonSize,\n      confirmButtonSize = _m === void 0 ? 'sm' : _m,\n      confirmButtonVariant = _a.confirmButtonVariant,\n      _o = _a.container,\n      container = _o === void 0 ? 'dropdown' : _o,\n      disabled = _a.disabled,\n      feedback = _a.feedback,\n      feedbackInvalid = _a.feedbackInvalid,\n      feedbackValid = _a.feedbackValid,\n      _p = _a.footer,\n      footer = _p === void 0 ? true : _p,\n      hours = _a.hours,\n      id = _a.id,\n      _q = _a.indicator,\n      indicator = _q === void 0 ? true : _q,\n      _r = _a.inputOnChangeDelay,\n      inputOnChangeDelay = _r === void 0 ? 750 : _r,\n      inputReadOnly = _a.inputReadOnly,\n      invalid = _a.invalid,\n      label = _a.label,\n      _s = _a.locale,\n      locale = _s === void 0 ? 'default' : _s,\n      _t = _a.minutes,\n      minutes = _t === void 0 ? true : _t,\n      name = _a.name,\n      onTimeChange = _a.onTimeChange,\n      onHide = _a.onHide,\n      onShow = _a.onShow,\n      _u = _a.placeholder,\n      placeholder = _u === void 0 ? 'Select time' : _u,\n      _v = _a.portal,\n      portal = _v === void 0 ? false : _v,\n      required = _a.required,\n      _w = _a.seconds,\n      seconds = _w === void 0 ? true : _w,\n      size = _a.size,\n      text = _a.text,\n      time = _a.time,\n      tooltipFeedback = _a.tooltipFeedback,\n      valid = _a.valid,\n      _x = _a.variant,\n      variant = _x === void 0 ? 'roll' : _x,\n      visible = _a.visible,\n      rest = __rest(_a, [\"ampm\", \"cancelButton\", \"cancelButtonColor\", \"cancelButtonSize\", \"cancelButtonVariant\", \"className\", \"cleaner\", \"confirmButton\", \"confirmButtonColor\", \"confirmButtonSize\", \"confirmButtonVariant\", \"container\", \"disabled\", \"feedback\", \"feedbackInvalid\", \"feedbackValid\", \"footer\", \"hours\", \"id\", \"indicator\", \"inputOnChangeDelay\", \"inputReadOnly\", \"invalid\", \"label\", \"locale\", \"minutes\", \"name\", \"onTimeChange\", \"onHide\", \"onShow\", \"placeholder\", \"portal\", \"required\", \"seconds\", \"size\", \"text\", \"time\", \"tooltipFeedback\", \"valid\", \"variant\", \"visible\"]);\n\n  var formRef = useRef();\n  var inputRef = useRef(null);\n\n  var _y = useState(convertTimeToDate(time)),\n      date = _y[0],\n      setDate = _y[1];\n\n  var _z = useState(null),\n      initialDate = _z[0],\n      setInitialDate = _z[1];\n\n  var _0 = useState(valid !== null && valid !== void 0 ? valid : invalid === true ? false : undefined),\n      isValid = _0[0],\n      setIsValid = _0[1];\n\n  var _1 = useState(date ? getAmPm(new Date(date), locale) : 'am'),\n      _ampm = _1[0],\n      setAmPm = _1[1];\n\n  var _2 = useState(visible),\n      _visible = _2[0],\n      setVisible = _2[1];\n\n  var _3 = useState({\n    listOfHours: [],\n    listOfMinutes: [],\n    listOfSeconds: [],\n    hour12: false\n  }),\n      localizedTimePartials = _3[0],\n      setLocalizedTimePartials = _3[1];\n\n  useEffect(function () {\n    setDate(time ? convertTimeToDate(time) : null);\n  }, [time]);\n  useEffect(function () {\n    setIsValid(valid !== null && valid !== void 0 ? valid : invalid === true ? false : undefined);\n  }, [valid, invalid]);\n  useEffect(function () {\n    setLocalizedTimePartials(getLocalizedTimePartials(locale, ampm, hours, minutes, seconds));\n\n    if (inputRef.current) {\n      inputRef.current.value = date ? date.toLocaleTimeString(locale, __assign(__assign({\n        hour12: localizedTimePartials && localizedTimePartials.hour12,\n        hour: 'numeric'\n      }, minutes && {\n        minute: 'numeric'\n      }), seconds && {\n        second: 'numeric'\n      })) : '';\n    }\n\n    if (date) {\n      setAmPm(getAmPm(new Date(date), locale));\n    }\n  }, [date]);\n  useEffect(function () {\n    if (inputRef.current && inputRef.current.form) {\n      formRef.current = inputRef.current.form;\n    }\n  }, [inputRef]);\n  useEffect(function () {\n    if (formRef.current) {\n      formRef.current.addEventListener('submit', function (event) {\n        setTimeout(function () {\n          return handleFormValidation(event.target);\n        });\n      });\n      handleFormValidation(formRef.current);\n    }\n  }, [formRef, date]);\n\n  var handleClear = function (event) {\n    event.stopPropagation();\n    setDate(null);\n    onTimeChange === null || onTimeChange === void 0 ? void 0 : onTimeChange(null);\n  };\n\n  var handleFormValidation = function (form) {\n    if (!form.classList.contains('was-validated')) {\n      return;\n    }\n\n    if (date) {\n      return setIsValid(true);\n    }\n\n    setIsValid(false);\n  };\n\n  var handleOnChange = useDebouncedCallback(function (value) {\n    return isValidTime(value) && setDate(convertTimeToDate(value));\n  }, inputOnChangeDelay);\n\n  var handleTimeChange = function (set, value) {\n    var _date = date || new Date('1970-01-01');\n\n    if (set === 'toggle') {\n      if (value === 'am') {\n        _date.setHours(_date.getHours() - 12);\n      }\n\n      if (value === 'pm') {\n        _date.setHours(_date.getHours() + 12);\n      }\n    }\n\n    if (set === 'hours') {\n      if (localizedTimePartials && localizedTimePartials.hour12) {\n        _date.setHours(convert12hTo24h(_ampm, Number.parseInt(value)));\n      } else {\n        _date.setHours(Number.parseInt(value));\n      }\n    }\n\n    if (set === 'minutes') {\n      _date.setMinutes(Number.parseInt(value));\n    }\n\n    if (set === 'seconds') {\n      _date.setSeconds(Number.parseInt(value));\n    }\n\n    setDate(new Date(_date));\n    onTimeChange === null || onTimeChange === void 0 ? void 0 : onTimeChange(_date.toTimeString(), _date.toLocaleTimeString(), _date);\n  };\n\n  var InputGroup = function () {\n    return React.createElement(\"div\", {\n      className: \"time-picker-input-group\"\n    }, React.createElement(\"input\", {\n      autoComplete: \"off\",\n      className: \"time-picker-input\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      onChange: function (event) {\n        return handleOnChange(event.target.value);\n      },\n      placeholder: placeholder,\n      readOnly: inputReadOnly,\n      required: required,\n      ref: inputRef\n    }), indicator && (typeof indicator === 'boolean' ? React.createElement(\"div\", __assign({\n      className: \"time-picker-indicator\"\n    }, disabled !== false && {\n      onClick: function () {\n        return setVisible(!_visible);\n      },\n      onKeyDown: function (event) {\n        if (event.key === 'Enter') {\n          setVisible(!_visible);\n        }\n      },\n      tabIndex: 0\n    })) : indicator), cleaner && date && (typeof cleaner === 'boolean' ? React.createElement(\"div\", {\n      className: \"time-picker-cleaner\",\n      onClick: function (event) {\n        return handleClear(event);\n      }\n    }) : React.isValidElement(cleaner) && React.cloneElement(cleaner, {\n      onClick: function (event) {\n        return handleClear(event);\n      }\n    })));\n  };\n\n  var TimePickerSelect = function () {\n    return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: \"time-picker-inline-icon\"\n    }), React.createElement(\"select\", {\n      className: \"time-picker-inline-select\",\n      disabled: disabled,\n      onChange: function (event) {\n        return handleTimeChange('hours', event.target.value);\n      },\n      value: getSelectedHour(date, locale)\n    }, localizedTimePartials && localizedTimePartials.listOfHours.map(function (option, index) {\n      return React.createElement(\"option\", {\n        value: option.value.toString(),\n        key: index\n      }, option.label);\n    })), minutes && React.createElement(React.Fragment, null, React.createElement(React.Fragment, null, \":\"), React.createElement(\"select\", {\n      className: \"time-picker-inline-select\",\n      disabled: disabled,\n      onChange: function (event) {\n        return handleTimeChange('minutes', event.target.value);\n      },\n      value: getSelectedMinutes(date)\n    }, localizedTimePartials && localizedTimePartials.listOfMinutes.map(function (option, index) {\n      return React.createElement(\"option\", {\n        value: option.value.toString(),\n        key: index\n      }, option.label);\n    }))), seconds && React.createElement(React.Fragment, null, React.createElement(React.Fragment, null, \":\"), React.createElement(\"select\", {\n      className: \"time-picker-inline-select\",\n      disabled: disabled,\n      onChange: function (event) {\n        return handleTimeChange('seconds', event.target.value);\n      },\n      value: getSelectedSeconds(date)\n    }, localizedTimePartials && localizedTimePartials.listOfSeconds.map(function (option, index) {\n      return React.createElement(\"option\", {\n        value: option.value.toString(),\n        key: index\n      }, option.label);\n    }))), localizedTimePartials && localizedTimePartials.hour12 && React.createElement(\"select\", {\n      className: \"time-picker-inline-select\",\n      disabled: disabled,\n      onChange: function (event) {\n        return handleTimeChange('toggle', event.target.value);\n      },\n      value: _ampm\n    }, React.createElement(\"option\", {\n      value: \"am\"\n    }, \"AM\"), React.createElement(\"option\", {\n      value: \"pm\"\n    }, \"PM\")));\n  };\n\n  return React.createElement(CFormControlWrapper, {\n    describedby: rest['aria-describedby'],\n    feedback: feedback,\n    feedbackInvalid: feedbackInvalid,\n    feedbackValid: feedbackValid,\n    id: id,\n    invalid: isValid === false ? true : false,\n    label: label,\n    text: text,\n    tooltipFeedback: tooltipFeedback,\n    valid: isValid\n  }, React.createElement(CPicker, __assign({\n    className: classNames('time-picker', (_b = {}, _b[\"time-picker-\".concat(size)] = size, _b.disabled = disabled, _b['is-invalid'] = isValid === false ? true : false, _b['is-valid'] = isValid, _b), className),\n    container: container,\n    disabled: disabled,\n    dropdownClassNames: \"time-picker-dropdown\",\n    footer: footer,\n    footerContent: React.createElement(\"div\", {\n      className: \"time-picker-footer\"\n    }, cancelButton && React.createElement(CButton, {\n      color: cancelButtonColor,\n      size: cancelButtonSize,\n      variant: cancelButtonVariant,\n      onClick: function () {\n        if (initialDate) {\n          setDate(new Date(initialDate));\n        }\n\n        setVisible(false);\n      }\n    }, cancelButton), confirmButton && React.createElement(CButton, {\n      color: confirmButtonColor,\n      size: confirmButtonSize,\n      variant: confirmButtonVariant,\n      onClick: function () {\n        setVisible(false);\n      }\n    }, confirmButton)),\n    onHide: function () {\n      setVisible(false);\n      onHide === null || onHide === void 0 ? void 0 : onHide();\n    },\n    onShow: function () {\n      if (date) {\n        setInitialDate(new Date(date));\n      }\n\n      setVisible(true);\n      onShow === null || onShow === void 0 ? void 0 : onShow();\n    },\n    portal: portal,\n    toggler: InputGroup(),\n    visible: _visible\n  }, rest, {\n    ref: ref\n  }), React.createElement(\"div\", {\n    className: classNames('time-picker-body', (_c = {}, _c['time-picker-roll'] = variant === 'roll', _c))\n  }, variant === 'select' ? React.createElement(TimePickerSelect, null) : React.createElement(React.Fragment, null, React.createElement(CTimePickerRollCol, {\n    elements: localizedTimePartials && localizedTimePartials.listOfHours,\n    onClick: function (index) {\n      return handleTimeChange('hours', index.toString());\n    },\n    selected: getSelectedHour(date, locale, ampm)\n  }), minutes && React.createElement(CTimePickerRollCol, {\n    elements: localizedTimePartials && localizedTimePartials.listOfMinutes,\n    onClick: function (index) {\n      return handleTimeChange('minutes', index.toString());\n    },\n    selected: getSelectedMinutes(date)\n  }), seconds && React.createElement(CTimePickerRollCol, {\n    elements: localizedTimePartials && localizedTimePartials.listOfSeconds,\n    onClick: function (index) {\n      return handleTimeChange('seconds', index.toString());\n    },\n    selected: getSelectedSeconds(date)\n  }), localizedTimePartials && localizedTimePartials.hour12 && React.createElement(CTimePickerRollCol, {\n    elements: [{\n      value: 'am',\n      label: 'AM'\n    }, {\n      value: 'pm',\n      label: 'PM'\n    }],\n    onClick: function (value) {\n      return handleTimeChange('toggle', value);\n    },\n    selected: _ampm\n  })))));\n});\nCTimePicker.propTypes = __assign(__assign(__assign({}, CFormControlWrapper.propTypes), CPicker.propTypes), {\n  ampm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  cancelButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  cancelButtonColor: (_a = CButton.propTypes) === null || _a === void 0 ? void 0 : _a.color,\n  cancelButtonSize: (_b = CButton.propTypes) === null || _b === void 0 ? void 0 : _b.size,\n  cancelButtonVariant: (_c = CButton.propTypes) === null || _c === void 0 ? void 0 : _c.variant,\n  className: PropTypes.string,\n  confirmButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  confirmButtonColor: (_d = CButton.propTypes) === null || _d === void 0 ? void 0 : _d.color,\n  confirmButtonSize: (_e = CButton.propTypes) === null || _e === void 0 ? void 0 : _e.size,\n  confirmButtonVariant: (_f = CButton.propTypes) === null || _f === void 0 ? void 0 : _f.variant,\n  hours: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number.isRequired), PropTypes.func]),\n  id: PropTypes.string,\n  inputOnChangeDelay: PropTypes.number,\n  locale: PropTypes.string,\n  minutes: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.number.isRequired), PropTypes.func]),\n  name: PropTypes.string,\n  onTimeChange: PropTypes.func,\n  required: PropTypes.bool,\n  seconds: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.number.isRequired), PropTypes.func]),\n  time: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  variant: PropTypes.oneOf(['roll', 'select'])\n});\nCTimePicker.displayName = 'CTimePicker';\nexport { CTimePicker };","map":{"version":3,"mappings":"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","names":["CTimePicker","forwardRef","_a","ref","_d","_e","cancelButton","_f","cancelButtonColor","_g","cancelButtonSize","_h","cancelButtonVariant","className","_j","cleaner","_k","confirmButton","_l","confirmButtonColor","_m","confirmButtonSize","confirmButtonVariant","_o","container","disabled","feedback","feedbackInvalid","feedbackValid","_p","footer","hours","id","_q","indicator","_r","inputOnChangeDelay","inputReadOnly","invalid","label","_s","locale","_t","minutes","name","onTimeChange","onHide","onShow","_u","placeholder","_v","portal","required","_w","seconds","size","text","time","tooltipFeedback","valid","_x","variant","visible","rest","__rest","formRef","useRef","inputRef","convertTimeToDate","date","setDate","useState","initialDate","setInitialDate","undefined","isValid","setIsValid","getAmPm","Date","_ampm","setAmPm","_visible","setVisible","listOfHours","listOfMinutes","listOfSeconds","hour12","localizedTimePartials","setLocalizedTimePartials","useEffect","getLocalizedTimePartials","ampm","current","value","toLocaleTimeString","__assign","hour","minute","second","form","addEventListener","event","setTimeout","target","handleFormValidation","handleClear","stopPropagation","classList","contains","handleOnChange","useDebouncedCallback","handleTimeChange","set","_date","setHours","getHours","convert12hTo24h","Number","parseInt","setMinutes","setSeconds","toTimeString","InputGroup","React","autoComplete","onChange","readOnly","onClick","onKeyDown","key","tabIndex","isValidElement","cloneElement","TimePickerSelect","getSelectedHour","map","option","index","toString","getSelectedMinutes","getSelectedSeconds","CFormControlWrapper","describedby","CPicker","classNames","_b","concat","dropdownClassNames","footerContent","CButton","color","toggler","_c","CTimePickerRollCol","elements","selected","propTypes","PropTypes","oneOfType","oneOf","bool","node","string","arrayOf","number","isRequired","func","instanceOf","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\time-picker\\CTimePicker.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CButton } from '../button'\nimport { CFormControlWrapper, CFormControlWrapperProps } from '../form/CFormControlWrapper'\nimport { CPicker, CPickerProps } from './../picker/CPicker'\n\nimport { CTimePickerRollCol } from './CTimePickerRollCol'\nimport {\n  convert12hTo24h,\n  convertTimeToDate,\n  getAmPm,\n  getLocalizedTimePartials,\n  getSelectedHour,\n  getSelectedMinutes,\n  getSelectedSeconds,\n  isValidTime,\n} from './utils'\n\nimport { Colors } from '../../types'\nimport type { AmPm, LocalizedTimePartials } from './types'\nimport { useDebouncedCallback } from '../../hooks'\n\nexport interface CTimePickerProps\n  extends Omit<CFormControlWrapperProps, 'floatingLabel'>,\n    Omit<CPickerProps, 'placeholder'> {\n  /**\n   * Set if the component should use the 12/24 hour format. If `true` forces the interface to a 12-hour format. If `false` forces the interface into a 24-hour format. If `auto` the current locale will determine the 12 or 24-hour interface by default locales.\n   *\n   * @since 4.8.0\n   */\n  ampm?: 'auto' | boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Toggle visibility or set the content of cancel button.\n   */\n  cancelButton?: boolean | ReactNode\n  /**\n   * Sets the color context of the cancel button to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  cancelButtonColor?: Colors\n  /**\n   * Size the cancel button small or large.\n   */\n  cancelButtonSize?: 'sm' | 'lg'\n  /**\n   * Set the cancel button variant to an outlined button or a ghost button.\n   */\n  cancelButtonVariant?: 'outline' | 'ghost'\n  /**\n   * A string of all className you want applied to the component.\n   */\n  /**\n   * Toggle visibility or set the content of the cleaner button.\n   */\n  cleaner?: ReactNode | boolean\n  /**\n   * Toggle visibility or set the content of confirm button.\n   */\n  confirmButton?: boolean | ReactNode\n  /**\n   * Sets the color context of the confirm button to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  confirmButtonColor?: Colors\n  /**\n   * Size the confirm button small or large.\n   */\n  confirmButtonSize?: 'sm' | 'lg'\n  /**\n   * Set the confirm button variant to an outlined button or a ghost button.\n   */\n  confirmButtonVariant?: 'outline' | 'ghost'\n  /**\n   * Specify a list of available hours using an array, or customize the filtering of hours through a function.\n   *\n   * @since 5.0.0\n   */\n  hours?: number[] | ((hour: number) => number[])\n  /**\n   * Set the id attribute for the input element.\n   *\n   * @since 5.3.0\n   */\n  id?: string\n  /**\n   * Toggle visibility or set the content of the input indicator.\n   */\n  indicator?: ReactNode | boolean\n  /**\n   * Defines the delay (in milliseconds) for the input field's onChange event.\n   *\n   * @since 5.0.0\n   */\n  inputOnChangeDelay?: number\n  /**\n   * Toggle the readonly state for the component.\n   */\n  inputReadOnly?: boolean\n  /**\n   * Sets the default locale for components. If not set, it is inherited from the browser.\n   */\n  locale?: string\n  /**\n   * Toggle the display of minutes, specify a list of available minutes using an array, or customize the filtering of minutes through a function.\n   *\n   * @since 5.0.0\n   */\n  minutes?: boolean | number[] | ((minute: number) => number[])\n  /**\n   * Set the name attribute for the input element.\n   *\n   * @since 5.3.0\n   */\n  name?: string\n  /**\n   * Callback fired when the time changed.\n   */\n  onTimeChange?: (timeString: string | null, localeTimeString?: string, date?: Date) => void\n  /**\n   * Specifies a short hint that is visible in the input.\n   */\n  placeholder?: string\n  /**\n   * When present, it specifies that time must be filled out before submitting the form.\n   *\n   * @since 4.10.0\n   */\n  required?: boolean\n  /**\n   * Toggle the display of seconds, specify a list of available seconds using an array, or customize the filtering of seconds through a function.\n   *\n   * @since 4.8.0\n   */\n  seconds?: boolean | number[] | ((second: number) => boolean)\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Initial selected time.\n   */\n  time?: Date | string | null\n  /**\n   * Set the time picker variant to a roll or select.\n   */\n  variant?: 'roll' | 'select'\n}\n\nexport const CTimePicker = forwardRef<HTMLDivElement | HTMLLIElement, CTimePickerProps>(\n  (\n    {\n      ampm = 'auto',\n      cancelButton = 'Cancel',\n      cancelButtonColor = 'primary',\n      cancelButtonSize = 'sm',\n      cancelButtonVariant = 'ghost',\n      className,\n      cleaner = true,\n      confirmButton = 'OK',\n      confirmButtonColor = 'primary',\n      confirmButtonSize = 'sm',\n      confirmButtonVariant,\n      container = 'dropdown',\n      disabled,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      footer = true,\n      hours,\n      id,\n      indicator = true,\n      inputOnChangeDelay = 750,\n      inputReadOnly,\n      invalid,\n      label,\n      locale = 'default',\n      minutes = true,\n      name,\n      onTimeChange,\n      onHide,\n      onShow,\n      placeholder = 'Select time',\n      portal = false,\n      required,\n      seconds = true,\n      size,\n      text,\n      time,\n      tooltipFeedback,\n      valid,\n      variant = 'roll',\n      visible,\n      ...rest\n    },\n    ref\n  ) => {\n    const formRef = useRef<HTMLFormElement>()\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const [date, setDate] = useState<Date | null>(convertTimeToDate(time))\n    const [initialDate, setInitialDate] = useState<Date | null>(null)\n    const [isValid, setIsValid] = useState(valid ?? (invalid === true ? false : undefined))\n    const [_ampm, setAmPm] = useState<AmPm>(date ? getAmPm(new Date(date), locale) : 'am')\n    const [_visible, setVisible] = useState(visible)\n\n    const [localizedTimePartials, setLocalizedTimePartials] = useState<LocalizedTimePartials>({\n      listOfHours: [],\n      listOfMinutes: [],\n      listOfSeconds: [],\n      hour12: false,\n    })\n\n    useEffect(() => {\n      setDate(time ? convertTimeToDate(time) : null)\n    }, [time])\n\n    useEffect(() => {\n      setIsValid(valid ?? (invalid === true ? false : undefined))\n    }, [valid, invalid])\n\n    useEffect(() => {\n      setLocalizedTimePartials(getLocalizedTimePartials(locale, ampm, hours, minutes, seconds))\n\n      if (inputRef.current) {\n        inputRef.current.value = date\n          ? date.toLocaleTimeString(locale, {\n              hour12: localizedTimePartials && localizedTimePartials.hour12,\n              hour: 'numeric',\n              ...(minutes && { minute: 'numeric' }),\n              ...(seconds && { second: 'numeric' }),\n            })\n          : ''\n      }\n      if (date) {\n        setAmPm(getAmPm(new Date(date), locale))\n      }\n    }, [date])\n\n    useEffect(() => {\n      if (inputRef.current && inputRef.current.form) {\n        formRef.current = inputRef.current.form\n      }\n    }, [inputRef])\n\n    useEffect(() => {\n      if (formRef.current) {\n        formRef.current.addEventListener('submit', (event) => {\n          setTimeout(() => handleFormValidation(event.target as HTMLFormElement))\n        })\n\n        handleFormValidation(formRef.current)\n      }\n    }, [formRef, date])\n\n    const handleClear = (event: React.MouseEvent<HTMLElement>) => {\n      event.stopPropagation()\n      setDate(null)\n      onTimeChange?.(null)\n    }\n\n    const handleFormValidation = (form: HTMLFormElement) => {\n      if (!form.classList.contains('was-validated')) {\n        return\n      }\n\n      if (date) {\n        return setIsValid(true)\n      }\n\n      setIsValid(false)\n    }\n\n    const handleOnChange = useDebouncedCallback(\n      (value: string) => isValidTime(value) && setDate(convertTimeToDate(value)),\n      inputOnChangeDelay\n    )\n\n    const handleTimeChange = (set: 'hours' | 'minutes' | 'seconds' | 'toggle', value: string) => {\n      const _date = date || new Date('1970-01-01')\n\n      if (set === 'toggle') {\n        if (value === 'am') {\n          _date.setHours(_date.getHours() - 12)\n        }\n        if (value === 'pm') {\n          _date.setHours(_date.getHours() + 12)\n        }\n      }\n\n      if (set === 'hours') {\n        if (localizedTimePartials && localizedTimePartials.hour12) {\n          _date.setHours(convert12hTo24h(_ampm, Number.parseInt(value)))\n        } else {\n          _date.setHours(Number.parseInt(value))\n        }\n      }\n\n      if (set === 'minutes') {\n        _date.setMinutes(Number.parseInt(value))\n      }\n\n      if (set === 'seconds') {\n        _date.setSeconds(Number.parseInt(value))\n      }\n\n      setDate(new Date(_date))\n      onTimeChange?.(_date.toTimeString(), _date.toLocaleTimeString(), _date)\n    }\n\n    const InputGroup = () => (\n      <div className=\"time-picker-input-group\">\n        <input\n          autoComplete=\"off\"\n          className=\"time-picker-input\"\n          disabled={disabled}\n          id={id}\n          name={name}\n          onChange={(event) => handleOnChange(event.target.value)}\n          placeholder={placeholder}\n          readOnly={inputReadOnly}\n          required={required}\n          ref={inputRef}\n        />\n        {indicator &&\n          (typeof indicator === 'boolean' ? (\n            <div\n              className=\"time-picker-indicator\"\n              {...(disabled !== false && {\n                onClick: () => setVisible(!_visible),\n                onKeyDown: (event) => {\n                  if (event.key === 'Enter') {\n                    setVisible(!_visible)\n                  }\n                },\n                tabIndex: 0,\n              })}\n            />\n          ) : (\n            indicator\n          ))}\n        {cleaner &&\n          date &&\n          (typeof cleaner === 'boolean' ? (\n            <div className=\"time-picker-cleaner\" onClick={(event) => handleClear(event)} />\n          ) : (\n            React.isValidElement(cleaner) &&\n            React.cloneElement(cleaner as React.ReactElement<any>, {\n              onClick: (event: React.MouseEvent<HTMLElement>) => handleClear(event),\n            })\n          ))}\n      </div>\n    )\n\n    const TimePickerSelect = () => {\n      return (\n        <>\n          <span className=\"time-picker-inline-icon\" />\n          <select\n            className=\"time-picker-inline-select\"\n            disabled={disabled}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) =>\n              handleTimeChange('hours', event.target.value)\n            }\n            value={getSelectedHour(date, locale)}\n          >\n            {localizedTimePartials &&\n              localizedTimePartials.listOfHours.map((option, index) => (\n                <option value={option.value.toString()} key={index}>\n                  {option.label}\n                </option>\n              ))}\n          </select>\n          {minutes && (\n            <>\n              <>:</>\n              <select\n                className=\"time-picker-inline-select\"\n                disabled={disabled}\n                onChange={(event: React.ChangeEvent<HTMLSelectElement>) =>\n                  handleTimeChange('minutes', event.target.value)\n                }\n                value={getSelectedMinutes(date)}\n              >\n                {localizedTimePartials &&\n                  localizedTimePartials.listOfMinutes.map((option, index) => (\n                    <option value={option.value.toString()} key={index}>\n                      {option.label}\n                    </option>\n                  ))}\n              </select>\n            </>\n          )}\n          {seconds && (\n            <>\n              <>:</>\n              <select\n                className=\"time-picker-inline-select\"\n                disabled={disabled}\n                onChange={(event: React.ChangeEvent<HTMLSelectElement>) =>\n                  handleTimeChange('seconds', event.target.value)\n                }\n                value={getSelectedSeconds(date)}\n              >\n                {localizedTimePartials &&\n                  localizedTimePartials.listOfSeconds.map((option, index) => (\n                    <option value={option.value.toString()} key={index}>\n                      {option.label}\n                    </option>\n                  ))}\n              </select>\n            </>\n          )}\n          {localizedTimePartials && localizedTimePartials.hour12 && (\n            <select\n              className=\"time-picker-inline-select\"\n              disabled={disabled}\n              onChange={(event: React.ChangeEvent<HTMLSelectElement>) =>\n                handleTimeChange('toggle', event.target.value)\n              }\n              value={_ampm}\n            >\n              <option value=\"am\">AM</option>\n              <option value=\"pm\">PM</option>\n            </select>\n          )}\n        </>\n      )\n    }\n\n    return (\n      <CFormControlWrapper\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        id={id}\n        invalid={isValid === false ? true : false}\n        label={label}\n        text={text}\n        tooltipFeedback={tooltipFeedback}\n        valid={isValid}\n      >\n        <CPicker\n          className={classNames(\n            'time-picker',\n            {\n              [`time-picker-${size}`]: size,\n              disabled: disabled,\n              'is-invalid': isValid === false ? true : false,\n              'is-valid': isValid,\n            },\n            className\n          )}\n          container={container}\n          disabled={disabled}\n          dropdownClassNames=\"time-picker-dropdown\"\n          footer={footer}\n          footerContent={\n            <div className=\"time-picker-footer\">\n              {cancelButton && (\n                <CButton\n                  color={cancelButtonColor}\n                  size={cancelButtonSize}\n                  variant={cancelButtonVariant}\n                  onClick={() => {\n                    if (initialDate) {\n                      setDate(new Date(initialDate))\n                    }\n\n                    setVisible(false)\n                  }}\n                >\n                  {cancelButton}\n                </CButton>\n              )}\n              {confirmButton && (\n                <CButton\n                  color={confirmButtonColor}\n                  size={confirmButtonSize}\n                  variant={confirmButtonVariant}\n                  onClick={() => {\n                    setVisible(false)\n                  }}\n                >\n                  {confirmButton}\n                </CButton>\n              )}\n            </div>\n          }\n          onHide={() => {\n            setVisible(false)\n            onHide?.()\n          }}\n          onShow={() => {\n            if (date) {\n              setInitialDate(new Date(date))\n            }\n\n            setVisible(true)\n            onShow?.()\n          }}\n          portal={portal}\n          toggler={InputGroup()}\n          visible={_visible}\n          {...rest}\n          ref={ref}\n        >\n          <div\n            className={classNames('time-picker-body', {\n              ['time-picker-roll']: variant === 'roll',\n            })}\n          >\n            {variant === 'select' ? (\n              <TimePickerSelect />\n            ) : (\n              <>\n                <CTimePickerRollCol\n                  elements={localizedTimePartials && localizedTimePartials.listOfHours}\n                  onClick={(index: number) => handleTimeChange('hours', index.toString())}\n                  selected={getSelectedHour(date, locale, ampm)}\n                />\n                {minutes && (\n                  <CTimePickerRollCol\n                    elements={localizedTimePartials && localizedTimePartials.listOfMinutes}\n                    onClick={(index: number) => handleTimeChange('minutes', index.toString())}\n                    selected={getSelectedMinutes(date)}\n                  />\n                )}\n                {seconds && (\n                  <CTimePickerRollCol\n                    elements={localizedTimePartials && localizedTimePartials.listOfSeconds}\n                    onClick={(index: number) => handleTimeChange('seconds', index.toString())}\n                    selected={getSelectedSeconds(date)}\n                  />\n                )}\n                {localizedTimePartials && localizedTimePartials.hour12 && (\n                  <CTimePickerRollCol\n                    elements={[\n                      { value: 'am', label: 'AM' },\n                      { value: 'pm', label: 'PM' },\n                    ]}\n                    onClick={(value: string) => handleTimeChange('toggle', value)}\n                    selected={_ampm}\n                  />\n                )}\n              </>\n            )}\n          </div>\n        </CPicker>\n      </CFormControlWrapper>\n    )\n  }\n)\n\nCTimePicker.propTypes = {\n  ...CFormControlWrapper.propTypes,\n  ...CPicker.propTypes,\n  ampm: PropTypes.oneOfType([PropTypes.oneOf<'auto'>(['auto']), PropTypes.bool]),\n  cancelButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  cancelButtonColor: CButton.propTypes?.color,\n  cancelButtonSize: CButton.propTypes?.size,\n  cancelButtonVariant: CButton.propTypes?.variant,\n  className: PropTypes.string,\n  confirmButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  confirmButtonColor: CButton.propTypes?.color,\n  confirmButtonSize: CButton.propTypes?.size,\n  confirmButtonVariant: CButton.propTypes?.variant,\n  hours: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number.isRequired), PropTypes.func]),\n  id: PropTypes.string,\n  inputOnChangeDelay: PropTypes.number,\n  locale: PropTypes.string,\n  minutes: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.number.isRequired),\n    PropTypes.func,\n  ]),\n  name: PropTypes.string,\n  onTimeChange: PropTypes.func,\n  required: PropTypes.bool,\n  seconds: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.number.isRequired),\n    PropTypes.func,\n  ]),\n  time: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  variant: PropTypes.oneOf(['roll', 'select']),\n}\n\nCTimePicker.displayName = 'CTimePicker'\n"]},"metadata":{},"sourceType":"module"}