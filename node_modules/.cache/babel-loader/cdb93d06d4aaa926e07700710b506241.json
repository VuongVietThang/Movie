{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CNav = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      _c = _a.as,\n      Component = _c === void 0 ? 'ul' : _c,\n      className = _a.className,\n      layout = _a.layout,\n      variant = _a.variant,\n      rest = __rest(_a, [\"children\", \"as\", \"className\", \"layout\", \"variant\"]);\n\n  return React.createElement(Component, __assign({\n    className: classNames('nav', (_b = {}, _b[\"nav-\".concat(layout)] = layout, _b[\"nav-\".concat(variant)] = variant, _b), className),\n    role: \"navigation\"\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCNav.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border'])\n};\nCNav.displayName = 'CNav';\nexport { CNav };","map":{"version":3,"mappings":";;;;IA0BaA,IAAI,GAAuDC,UAAU,CAGhF,UAACC,EAAD,EAA0EC,GAA1E,EAA6E;;;AAA1E,cAAQ,cAAR;AAAA,MAAUC,UAAV;AAAA,MAAcC,SAAS,mBAAG,IAAH,GAAOD,EAA9B;AAAA,MAAgCE,SAAS,eAAzC;AAAA,MAA2CC,MAAM,YAAjD;AAAA,MAAmDC,OAAO,aAA1D;AAAA,MAA+DC,IAAI,GAArEC,gEAAE;;AACH,SACEC,oBAACN,SAAD,EAAUO;AACRN,aAAS,EAAEO,UAAU,CACnB,KADmB,GACdC,SAEHA,GAAC,OAAOC,MAAP,CAAOR,MAAP,CAAD,IAAmBA,MAFhB,EAGHO,GAAC,OAAOC,MAAP,CAAOP,OAAP,CAAD,IAAoBA,OAHjB,EAKLM,EANmB,GAMnBR,SANmB,CADb;AASRU,QAAI,EAAC;AATG,KAUJP,IAVI,EAWR;AAAAN,OAAG,EAAEA;AAAL,GAXQ,CAAV,EAaGc,QAbH,CADF;AAiBD,CArBiF;AAuBlFjB,IAAI,CAACkB,SAAL,GAAiB;AACfC,IAAE,EAAEC,SAAS,CAACC,WADC;AAEfJ,UAAQ,EAAEG,SAAS,CAACE,IAFL;AAGfhB,WAAS,EAAEc,SAAS,CAACG,MAHN;AAIfhB,QAAM,EAAEa,SAAS,CAACI,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,CAAhB,CAJO;AAKfhB,SAAO,EAAEY,SAAS,CAACI,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,EAA+B,kBAA/B,CAAhB;AALM,CAAjB;AAQAxB,IAAI,CAACyB,WAAL,GAAmB,MAAnB","names":["CNav","forwardRef","_a","ref","_c","Component","className","layout","variant","rest","__rest","React","__assign","classNames","_b","concat","role","children","propTypes","as","PropTypes","elementType","node","string","oneOf","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\components\\nav\\CNav.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CNavProps\n  extends HTMLAttributes<HTMLDivElement | HTMLUListElement | HTMLOListElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Specify a layout type for component.\n   */\n  layout?: 'fill' | 'justified'\n  /**\n   * Set the nav variant to tabs or pills.\n   */\n  variant?: 'pills' | 'tabs' | 'underline' | 'underline-border'\n}\n\nexport const CNav: PolymorphicRefForwardingComponent<'ul', CNavProps> = forwardRef<\n  HTMLDivElement | HTMLUListElement | HTMLOListElement,\n  CNavProps\n>(({ children, as: Component = 'ul', className, layout, variant, ...rest }, ref) => {\n  return (\n    <Component\n      className={classNames(\n        'nav',\n        {\n          [`nav-${layout}`]: layout,\n          [`nav-${variant}`]: variant,\n        },\n        className,\n      )}\n      role=\"navigation\"\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCNav.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border']),\n}\n\nCNav.displayName = 'CNav'\n"]},"metadata":{},"sourceType":"module"}