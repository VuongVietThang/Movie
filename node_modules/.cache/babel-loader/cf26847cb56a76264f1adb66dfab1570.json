{"ast":null,"code":"import getTransitionDurationFromElement from './getTransitionDurationFromElement.js';\n\nvar execute = function (callback) {\n  if (typeof callback === 'function') {\n    callback();\n  }\n};\n\nvar triggerTransitionEnd = function (element) {\n  element.dispatchEvent(new Event('transitionend'));\n};\n\nvar executeAfterTransition = function (callback, transitionElement, waitForTransition) {\n  if (waitForTransition === void 0) {\n    waitForTransition = true;\n  }\n\n  if (!waitForTransition) {\n    execute(callback);\n    return;\n  }\n\n  var durationPadding = 5;\n  var emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n  var called = false;\n\n  var handler = function (_a) {\n    var target = _a.target;\n\n    if (target !== transitionElement) {\n      return;\n    }\n\n    called = true;\n    transitionElement.removeEventListener('transitionend', handler);\n    execute(callback);\n  };\n\n  transitionElement.addEventListener('transitionend', handler);\n  setTimeout(function () {\n    if (!called) {\n      triggerTransitionEnd(transitionElement);\n    }\n  }, emulatedDuration);\n};\n\nexport { executeAfterTransition as default };","map":{"version":3,"mappings":";;AAEA,IAAMA,OAAO,GAAG,UAACC,QAAD,EAAqB;AACnC,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,YAAQ;;AAEX,CAJD;;AAMA,IAAMC,oBAAoB,GAAG,UAACC,OAAD,EAAqB;AAChDA,SAAO,CAACC,aAAR,CAAsB,IAAIC,KAAJ,CAAU,eAAV,CAAtB;AACD,CAFD;;AAIA,IAAMC,sBAAsB,GAAG,UAC7BL,QAD6B,EAE7BM,iBAF6B,EAG7BC,iBAH6B,EAGL;AAAxB;AAAAA,qBAAwB,OAAxB;AAAwB;;AAExB,MAAI,CAACA,iBAAL,EAAwB;AACtBR,WAAO,CAACC,QAAD,CAAP;AACA;;;AAGF,MAAMQ,eAAe,GAAG,CAAxB;AACA,MAAMC,gBAAgB,GAAGC,gCAAgC,CAACJ,iBAAD,CAAhC,GAAsDE,eAA/E;AAEA,MAAIG,MAAM,GAAG,KAAb;;AAEA,MAAMC,OAAO,GAAG,UAACC,EAAD,EAA4B;AAAzB,cAAM,YAAN;;AACjB,QAAIC,MAAM,KAAKR,iBAAf,EAAkC;AAChC;;;AAGFK,UAAM,GAAG,IAAT;AACAL,qBAAiB,CAACS,mBAAlB,CAAsC,eAAtC,EAAuDH,OAAvD;AACAb,WAAO,CAACC,QAAD,CAAP;AACD,GARD;;AAUAM,mBAAiB,CAACU,gBAAlB,CAAmC,eAAnC,EAAoDJ,OAApD;AACAK,YAAU,CAAC;AACT,QAAI,CAACN,MAAL,EAAa;AACXV,0BAAoB,CAACK,iBAAD,CAApB;;AAEH,GAJS,EAIPG,gBAJO,CAAV;AAKF,CA/BA","names":["execute","callback","triggerTransitionEnd","element","dispatchEvent","Event","executeAfterTransition","transitionElement","waitForTransition","durationPadding","emulatedDuration","getTransitionDurationFromElement","called","handler","_a","target","removeEventListener","addEventListener","setTimeout"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\utils\\executeAfterTransition.ts"],"sourcesContent":["import getTransitionDurationFromElement from './getTransitionDurationFromElement'\n\nconst execute = (callback: () => void) => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst triggerTransitionEnd = (element: HTMLElement) => {\n  element.dispatchEvent(new Event('transitionend'))\n}\n\nconst executeAfterTransition = (\n  callback: () => void,\n  transitionElement: HTMLElement,\n  waitForTransition = true,\n) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }: { target: any }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener('transitionend', handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener('transitionend', handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\nexport default executeAfterTransition\n"]},"metadata":{},"sourceType":"module"}