{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { colorPropType } from '../../props.js';\nvar CCard = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      className = _a.className,\n      color = _a.color,\n      textBgColor = _a.textBgColor,\n      textColor = _a.textColor,\n      rest = __rest(_a, [\"children\", \"className\", \"color\", \"textBgColor\", \"textColor\"]);\n\n  return React.createElement(\"div\", __assign({\n    className: classNames('card', (_b = {}, _b[\"bg-\".concat(color)] = color, _b[\"text-\".concat(textColor)] = textColor, _b[\"text-bg-\".concat(textBgColor)] = textBgColor, _b), className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  textBgColor: colorPropType,\n  textColor: PropTypes.string\n};\nCCard.displayName = 'CCard';\nexport { CCard };","map":{"version":3,"mappings":";;;;;IAiCaA,KAAK,GAAGC,UAAU,CAC7B,UAACC,EAAD,EAAkEC,GAAlE,EAAqE;;;AAAlE,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAqBC,KAAK,WAA1B;AAAA,MAA4BC,WAAW,iBAAvC;AAAA,MAAyCC,SAAS,eAAlD;AAAA,MAAuDC,IAAI,cAA7D,8DAA6D,CAA3D;;AACD,SACEC,KACE,cADF,CACE,KADF,EACEC;AAAAN,aAAS,EAAEO,UAAU,CACnB,MADmB,GACbC,SAEJA,GAAC,MAAMC,MAAN,CAAMR,KAAN,CAAD,IAAiBA,KAFb,EAGJO,GAAC,QAAQC,MAAR,CAAQN,SAAR,CAAD,IAAuBA,SAHnB,EAIJK,GAAC,WAAWC,MAAX,CAAWP,WAAX,CAAD,IAA4BA,WAJxB,IADa,GAOnBF,SAPmB;AAArB,KASII,IATJ,EAUA;AAAAL,OAAG,EAAEA;AAAL,GAVA,CADF,EAaGW,QAbH,CADF;AAiBD,CAnB4B;AAsB/Bd,KAAK,CAACe,SAAN,GAAkB;AAChBD,UAAQ,EAAEE,SAAS,CAACC,IADJ;AAEhBb,WAAS,EAAEY,SAAS,CAACE,MAFL;AAGhBb,OAAK,EAAEc,aAHS;AAIhBb,aAAW,EAAEa,aAJG;AAKhBZ,WAAS,EAAES,SAAS,CAACE;AALL,CAAlB;AAQAlB,KAAK,CAACoB,WAAN,GAAoB,OAApB","names":["CCard","forwardRef","_a","ref","className","color","textBgColor","textColor","rest","React","__assign","classNames","_b","concat","children","propTypes","PropTypes","node","string","colorPropType","displayName"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\components\\card\\CCard.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CCardProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Sets the text color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | 'primary-emphasis' | 'secondary-emphasis' | 'success-emphasis' | 'danger-emphasis' | 'warning-emphasis' | 'info-emphasis' | 'light-emphasis' | 'body' | 'body-emphasis' | 'body-secondary' | 'body-tertiary' | 'black' | 'black-50' | 'white' | 'white-50' | string\n   */\n  textColor?: string\n  /**\n   * Sets the component's color scheme to one of CoreUI's themed colors, ensuring the text color contrast adheres to the WCAG 4.5:1 contrast ratio standard for accessibility.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   * @since 5.0.0\n   */\n  textBgColor?: Colors\n}\n\nexport const CCard = forwardRef<HTMLDivElement, CCardProps>(\n  ({ children, className, color, textBgColor, textColor, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'card',\n          {\n            [`bg-${color}`]: color,\n            [`text-${textColor}`]: textColor,\n            [`text-bg-${textBgColor}`]: textBgColor,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  textBgColor: colorPropType,\n  textColor: PropTypes.string,\n}\n\nCCard.displayName = 'CCard'\n"]},"metadata":{},"sourceType":"module"}