{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport getNextActiveElement from '../../utils/getNextActiveElement.js';\nvar CTabList = forwardRef(function (_a, ref) {\n  var _b;\n\n  var children = _a.children,\n      className = _a.className,\n      layout = _a.layout,\n      variant = _a.variant,\n      rest = __rest(_a, [\"children\", \"className\", \"layout\", \"variant\"]);\n\n  var tabListRef = useRef(null);\n  var forkedRef = useForkedRef(ref, tabListRef);\n\n  var handleKeydown = function (event) {\n    if (tabListRef.current !== null && (event.key === 'ArrowDown' || event.key === 'ArrowUp' || event.key === 'ArrowLeft' || event.key === 'ArrowRight' || event.key === 'Home' || event.key === 'End')) {\n      event.preventDefault();\n      var target = event.target; // eslint-disable-next-line unicorn/prefer-spread\n\n      var items = Array.from(tabListRef.current.querySelectorAll('.nav-link:not(.disabled):not(:disabled)'));\n      var nextActiveElement = void 0;\n\n      if (event.key === 'Home' || event.key === 'End') {\n        nextActiveElement = event.key === 'End' ? items.at(-1) : items[0];\n      } else {\n        nextActiveElement = getNextActiveElement(items, target, event.key === 'ArrowDown' || event.key === 'ArrowRight', true);\n      }\n\n      if (nextActiveElement) {\n        nextActiveElement.focus({\n          preventScroll: true\n        });\n      }\n    }\n  };\n\n  return React.createElement(\"div\", __assign({\n    className: classNames('nav', (_b = {}, _b[\"nav-\".concat(layout)] = layout, _b[\"nav-\".concat(variant)] = variant, _b), className),\n    role: \"tablist\",\n    onKeyDown: handleKeydown,\n    ref: forkedRef\n  }, rest), children);\n});\nCTabList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border'])\n};\nCTabList.displayName = 'CTabList';\nexport { CTabList };","map":{"version":3,"mappings":";;;;;;;IAsBaA,QAAQ,GAAGC,UAAU,CAChC,UAACC,EAAD,EAAoDC,GAApD,EAAuD;;;AAApD,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAqBC,MAAM,YAA3B;AAAA,MAA6BC,OAAO,aAApC;AAAA,MAAyCC,IAAI,cAA/C,8CAA+C,CAA7C;;AACD,MAAMC,UAAU,GAAGC,MAAM,CAAiB,IAAjB,CAAzB;AACA,MAAMC,SAAS,GAAGC,YAAY,CAACR,GAAD,EAAMK,UAAN,CAA9B;;AAEA,MAAMI,aAAa,GAAG,UAACC,KAAD,EAAqC;AACzD,QACEL,UAAU,CAACM,OAAX,KAAuB,IAAvB,KACCD,KAAK,CAACE,GAAN,KAAc,WAAd,IACCF,KAAK,CAACE,GAAN,KAAc,SADf,IAECF,KAAK,CAACE,GAAN,KAAc,WAFf,IAGCF,KAAK,CAACE,GAAN,KAAc,YAHf,IAICF,KAAK,CAACE,GAAN,KAAc,MAJf,IAKCF,KAAK,CAACE,GAAN,KAAc,KANhB,CADF,EAQE;AACAF,WAAK,CAACG,cAAN;AACA,UAAMC,MAAM,GAAGJ,KAAK,CAACI,MAArB,CAFA;;AAIA,UAAMC,KAAK,GAAkBC,KAAK,CAACC,IAAN,CAC3BZ,UAAU,CAACM,OAAX,CAAmBO,gBAAnB,CAAoC,yCAApC,CAD2B,CAA7B;AAIA,UAAIC,iBAAiB,SAArB;;AAEA,UAAIT,KAAK,CAACE,GAAN,KAAc,MAAd,IAAwBF,KAAK,CAACE,GAAN,KAAc,KAA1C,EAAiD;AAC/CO,yBAAiB,GAAGT,KAAK,CAACE,GAAN,KAAc,KAAd,GAAsBG,KAAK,CAACK,EAAN,CAAS,EAAT,CAAtB,GAAqCL,KAAK,CAAC,CAAD,CAA9D;OADF,MAEO;AACLI,yBAAiB,GAAGE,oBAAoB,CACtCN,KADsC,EAEtCD,MAFsC,EAGtCJ,KAAK,CAACE,GAAN,KAAc,WAAd,IAA6BF,KAAK,CAACE,GAAN,KAAc,YAHL,EAItC,IAJsC,CAAxC;;;AAQF,UAAIO,iBAAJ,EAAuB;AACrBA,yBAAiB,CAACG,KAAlB,CAAwB;AAAEC,uBAAa,EAAE;AAAjB,SAAxB;;;AAGL,GAlCD;;AAoCA,SACEC,KACE,cADF,CACE,KADF,EACEC;AAAAxB,aAAS,EAAEyB,UAAU,CACnB,KADmB,GACdC,SAEHA,GAAC,OAAOC,MAAP,CAAO1B,MAAP,CAAD,IAAmBA,MAFhB,EAGHyB,GAAC,OAAOC,MAAP,CAAOzB,OAAP,CAAD,IAAoBA,OAHjB,EAKLwB,EANmB,GAMnB1B,SANmB,CAArB;AAQA4B,QAAI,EAAC,SARL;AASAC,aAAS,EAAErB,aATX;AAUAT,OAAG,EAAEO;AAVL,KAWIH,IAXJ,CADF,EAcG2B,QAdH,CADF;AAkBD,CA3D+B;AA8DlClC,QAAQ,CAACmC,SAAT,GAAqB;AACnBD,UAAQ,EAAEE,SAAS,CAACC,IADD;AAEnBjC,WAAS,EAAEgC,SAAS,CAACE,MAFF;AAGnBjC,QAAM,EAAE+B,SAAS,CAACG,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,CAAhB,CAHW;AAInBjC,SAAO,EAAE8B,SAAS,CAACG,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,EAA+B,kBAA/B,CAAhB;AAJU,CAArB;AAOAvC,QAAQ,CAACwC,WAAT,GAAuB,UAAvB","names":["CTabList","forwardRef","_a","ref","className","layout","variant","rest","tabListRef","useRef","forkedRef","useForkedRef","handleKeydown","event","current","key","preventDefault","target","items","Array","from","querySelectorAll","nextActiveElement","at","getNextActiveElement","focus","preventScroll","React","__assign","classNames","_b","concat","role","onKeyDown","children","propTypes","PropTypes","node","string","oneOf","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\tabs\\CTabList.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, KeyboardEvent, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useForkedRef } from '../../hooks'\nimport { getNextActiveElement } from '../../utils'\n\nexport interface CTabListProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Specify a layout type for component.\n   */\n  layout?: 'fill' | 'justified'\n  /**\n   * Set the nav variant to tabs or pills.\n   */\n  variant?: 'pills' | 'tabs' | 'underline' | 'underline-border'\n}\n\nexport const CTabList = forwardRef<HTMLDivElement, CTabListProps>(\n  ({ children, className, layout, variant, ...rest }, ref) => {\n    const tabListRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, tabListRef)\n\n    const handleKeydown = (event: KeyboardEvent<HTMLDivElement>) => {\n      if (\n        tabListRef.current !== null &&\n        (event.key === 'ArrowDown' ||\n          event.key === 'ArrowUp' ||\n          event.key === 'ArrowLeft' ||\n          event.key === 'ArrowRight' ||\n          event.key === 'Home' ||\n          event.key === 'End')\n      ) {\n        event.preventDefault()\n        const target = event.target as HTMLElement\n        // eslint-disable-next-line unicorn/prefer-spread\n        const items: HTMLElement[] = Array.from(\n          tabListRef.current.querySelectorAll('.nav-link:not(.disabled):not(:disabled)'),\n        )\n\n        let nextActiveElement\n\n        if (event.key === 'Home' || event.key === 'End') {\n          nextActiveElement = event.key === 'End' ? items.at(-1) : items[0]\n        } else {\n          nextActiveElement = getNextActiveElement(\n            items,\n            target,\n            event.key === 'ArrowDown' || event.key === 'ArrowRight',\n            true,\n          )\n        }\n\n        if (nextActiveElement) {\n          nextActiveElement.focus({ preventScroll: true })\n        }\n      }\n    }\n\n    return (\n      <div\n        className={classNames(\n          'nav',\n          {\n            [`nav-${layout}`]: layout,\n            [`nav-${variant}`]: variant,\n          },\n          className,\n        )}\n        role=\"tablist\"\n        onKeyDown={handleKeydown}\n        ref={forkedRef}\n        {...rest}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCTabList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border']),\n}\n\nCTabList.displayName = 'CTabList'\n"]},"metadata":{},"sourceType":"module"}