{"ast":null,"code":"var _jsxFileName = \"/Users/thaiduy/Movie/src/Components/TopMovies/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TopMovies = () => {\n  _s();\n\n  const [filterCtg, setFilterCtg] = useState(null); // để lưu id\n\n  const [genres, setGenres] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [loadingGenres, setLoadingGenres] = useState(false);\n  const [loadingMovies, setLoadingMovies] = useState(true);\n  const API_BASE = \"http://localhost/Movie/backend/API\"; // Fetch genres khi component mount\n\n  useEffect(() => {\n    setLoadingGenres(true);\n    fetch(`${API_BASE}/genres.php`).then(res => res.json()).then(data => {\n      setGenres(data);\n      setLoadingGenres(false);\n    }).catch(() => {\n      setGenres([]);\n      setLoadingGenres(false);\n    });\n  }, []); // Fetch movies khi filterCtg thay đổi\n\n  useEffect(() => {\n    setLoadingMovies(true);\n    let url = `${API_BASE}/movies.php`;\n\n    if (filterCtg) {\n      url += `?genre=${filterCtg}`;\n    }\n\n    fetch(url).then(res => res.json()).then(data => {\n      setTopMovies(data);\n      setLoadingMovies(false);\n    }).catch(() => {\n      setTopMovies([]);\n      setLoadingMovies(false);\n    });\n  }, [filterCtg]); // const handleFilterCtg = (id) => {\n  //   setFilterCtg(id);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"new-sec top-rated-sec\",\n    id: \"movies\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"sub-title\",\n          children: \"ONLINE STREAMING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Top Rated Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns-div categories-btns\",\n        children: loadingGenres ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading genres...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: !filterCtg ? \"btn category-btn active\" : \"btn category-btn\",\n            onClick: () => setFilterCtg(null),\n            children: \"T\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filterCtg === genre.id ? \"btn category-btn active\" : \"btn category-btn\",\n            onClick: () => setFilterCtg(genre.id),\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row movies-grid\",\n        children: loadingMovies ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : topMovies.length > 0 ? topMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, movie.imdbID || movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopMovies, \"H+QaKMy4HFPWJ0TXQbNQAk87s3k=\");\n\n_c = TopMovies;\nexport default TopMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopMovies\");","map":{"version":3,"sources":["/Users/thaiduy/Movie/src/Components/TopMovies/index.jsx"],"names":["React","useState","useEffect","MovieCard","TopMovies","filterCtg","setFilterCtg","genres","setGenres","topMovies","setTopMovies","loadingGenres","setLoadingGenres","loadingMovies","setLoadingMovies","API_BASE","fetch","then","res","json","data","catch","url","map","genre","id","name","length","movie","imdbID"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./style.css\";\n\nconst TopMovies = () => {\n  const [filterCtg, setFilterCtg] = useState(null); // để lưu id\n\n  const [genres, setGenres] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [loadingGenres, setLoadingGenres] = useState(false);\n  const [loadingMovies, setLoadingMovies] = useState(true);\n  const API_BASE = \"http://localhost/Movie/backend/API\";\n  // Fetch genres khi component mount\n  useEffect(() => {\n    setLoadingGenres(true);\n    fetch(`${API_BASE}/genres.php`)\n      .then((res) => res.json())\n      .then((data) => {\n        setGenres(data);\n        setLoadingGenres(false);\n      })\n      .catch(() => {\n        setGenres([]);\n        setLoadingGenres(false);\n      });\n  }, []);\n\n  // Fetch movies khi filterCtg thay đổi\n  useEffect(() => {\n    setLoadingMovies(true);\n    let url = `${API_BASE}/movies.php`;\n    if (filterCtg) {\n      url += `?genre=${filterCtg}`;\n    }\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setTopMovies(data);\n        setLoadingMovies(false);\n      })\n      .catch(() => {\n        setTopMovies([]);\n        setLoadingMovies(false);\n      });\n  }, [filterCtg]);\n\n  // const handleFilterCtg = (id) => {\n  //   setFilterCtg(id);\n  // };\n\n  return (\n    <section className=\"new-sec top-rated-sec\" id=\"movies\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h5 className=\"sub-title\">ONLINE STREAMING</h5>\n          <h2 className=\"title\">Top Rated Movies</h2>\n        </div>\n\n        <div className=\"btns-div categories-btns\">\n          {loadingGenres ? (\n            <p>Loading genres...</p>\n          ) : (\n            <>\n              <button\n                className={\n                  !filterCtg ? \"btn category-btn active\" : \"btn category-btn\"\n                }\n                onClick={() => setFilterCtg(null)}\n              >\n                Tất cả\n              </button>\n              {genres.map((genre) => (\n                <button\n                  key={genre.id}\n                  className={\n                    filterCtg === genre.id\n                      ? \"btn category-btn active\"\n                      : \"btn category-btn\"\n                  }\n                  onClick={() => setFilterCtg(genre.id)}\n                >\n                  {genre.name}\n                </button>\n              ))}\n            </>\n          )}\n        </div>\n\n        <div className=\"row movies-grid\">\n          {loadingMovies ? (\n            <p>Loading movies...</p>\n          ) : topMovies.length > 0 ? (\n            topMovies.map((movie) => (\n              <MovieCard movie={movie} key={movie.imdbID || movie.id} />\n            ))\n          ) : (\n            <p>No movies found.</p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TopMovies;\n"]},"metadata":{},"sourceType":"module"}