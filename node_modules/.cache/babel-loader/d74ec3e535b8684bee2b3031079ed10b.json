{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CDateRangePicker } from '../date-range-picker/CDateRangePicker.js';\nvar CDatePicker = forwardRef(function (_a, ref) {\n  var date = _a.date,\n      id = _a.id,\n      name = _a.name,\n      onDateChange = _a.onDateChange,\n      _b = _a.placeholder,\n      placeholder = _b === void 0 ? 'Select date' : _b,\n      rest = __rest(_a, [\"date\", \"id\", \"name\", \"onDateChange\", \"placeholder\"]);\n\n  return React.createElement(CDateRangePicker, __assign({\n    calendars: 1,\n    id: id,\n    name: name,\n    startDate: date,\n    onStartDateChange: onDateChange,\n    placeholder: placeholder,\n    range: false,\n    ref: ref\n  }, rest));\n});\nCDatePicker.displayName = 'CDatePicker';\nCDatePicker.propTypes = __assign(__assign({}, CDateRangePicker.propTypes), {\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  id: PropTypes.string,\n  name: PropTypes.string,\n  onDateChange: PropTypes.func\n});\nexport { CDatePicker };","map":{"version":3,"mappings":";;;;IAwCaA,WAAW,GAAGC,UAAU,CACnC,UAACC,EAAD,EAAyEC,GAAzE,EAA4E;AAAzE,UAAI,UAAJ;AAAA,MAAMC,EAAE,QAAR;AAAA,MAAUC,IAAI,UAAd;AAAA,MAAgBC,YAAY,kBAA5B;AAAA,MAA8BC,EAA2B,iBAAzD;AAAA,MAA8BC,WAAW,GAAGD,gCAAaA,EAAzD;AAAA,MAA8DE,IAAI,GAApEC,iEAAE;;AACD,SACEC,KAAC,cAAD,CAACC,gBAAD,EACEC;AAAAC,aAAS,EAAE,CAAX;AACAV,MAAE,EAAEA,EADJ;AAEAC,QAAI,EAAEA,IAFN;AAGAU,aAAS,EAAEC,IAHX;AAIAC,qBAAiB,EAAEX,YAJnB;AAKAE,eAAW,EAAEA,WALb;AAMAU,SAAK,EAAE,KANP;AAOAf,OAAG,EAAEA;AAPL,KAQIM,IARJ,CADF,CADF;AAaD,CAfkC;AAkBrCT,WAAW,CAACmB,WAAZ,GAA0B,aAA1B;AAEAnB,WAAW,CAACoB,SAAZ,GACKP,sCAAgB,CAACO,SAAjB,GAA0B;AAC7BJ,MAAI,EAAEK,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,UAAV,CAAqBC,IAArB,CAAD,EAA6BH,SAAS,CAACI,MAAvC,CAApB,CADuB;AAE7BrB,IAAE,EAAEiB,SAAS,CAACI,MAFe;AAG7BpB,MAAI,EAAEgB,SAAS,CAACI,MAHa;AAI7BnB,cAAY,EAAEe,SAAS,CAACK;AAJK,CAA1B,CADL","names":["CDatePicker","forwardRef","_a","ref","id","name","onDateChange","_b","placeholder","rest","__rest","React","CDateRangePicker","__assign","calendars","startDate","date","onStartDateChange","range","displayName","propTypes","PropTypes","oneOfType","instanceOf","Date","string","func"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react-pro\\src\\components\\date-picker\\CDatePicker.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CDateRangePicker, CDateRangePickerProps } from '../date-range-picker/CDateRangePicker'\n\nexport interface CDatePickerProps\n  extends Omit<\n    CDateRangePickerProps,\n    | 'calendars'\n    | 'endDate'\n    | 'range'\n    | 'onEndDateChange'\n    | 'onStartDateChange'\n    | 'ranges'\n    | 'selectEndDate'\n    | 'startDate'\n  > {\n  /**\n   * Initial selected date.\n   */\n  date?: Date | string | null\n  /**\n   * The id global attribute defines an identifier (ID) that must be unique in the whole document.\n   *\n   * **[Deprecated since v5.3.0]** The name attributes for input element is generated based on this property until you define name prop ex.:\n   * - `{id}-date`\n   */\n  id?: string\n  /**\n   * The name attribute for the input element.\n   *\n   * @since 5.3.0\n   */\n  name?: string\n  /**\n   * Callback fired when the date changed.\n   */\n  onDateChange?: (date: Date | null, formatedDate?: string | undefined) => void\n}\n\nexport const CDatePicker = forwardRef<HTMLDivElement | HTMLLIElement, CDatePickerProps>(\n  ({ date, id, name, onDateChange, placeholder = 'Select date', ...rest }, ref) => {\n    return (\n      <CDateRangePicker\n        calendars={1}\n        id={id}\n        name={name}\n        startDate={date}\n        onStartDateChange={onDateChange}\n        placeholder={placeholder}\n        range={false}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n)\n\nCDatePicker.displayName = 'CDatePicker'\n\nCDatePicker.propTypes = {\n  ...CDateRangePicker.propTypes,\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  id: PropTypes.string,\n  name: PropTypes.string,\n  onDateChange: PropTypes.func,\n}\n"]},"metadata":{},"sourceType":"module"}