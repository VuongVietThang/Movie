{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Movie-react\\\\src\\\\Pages\\\\SearchPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieCard from '../Components/MovieCard';\nimport SubBanner from '../Components/SubBanner';\nimport NoData from '../Components/Search/noData';\nimport Subscribe from '../Components/Subscribe';\nimport Pagination from '../Components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = _ref => {\n  _s();\n\n  let {\n    currentPage,\n    setCurrentPage,\n    setWatchList,\n    watchList\n  } = _ref;\n  const {\n    query\n  } = useParams();\n  const [searchResults, setSearchResults] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    fetch(`https://omdbapi.com/?apikey=7b85d604&s=${query}&page=${currentPage}`, {\n      signal: signal\n    }).then(res => res.json()).then(data => {\n      setTotalPages(Math.round(+data.totalResults / 10));\n      setSearchResults(data.Search ? data.Search.filter(movie => movie.Poster !== 'N/A').slice(0, 8) : []);\n    });\n    return () => {\n      controller.abort();\n    };\n  }, [query, currentPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SubBanner, {\n      title: 'Search Results',\n      pathName: 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-sec\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"sub-title\",\n            children: \"ONLINE STREAMING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: [query, \"'s Related Results\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row movies-grid\",\n          children: searchResults.length ? searchResults.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie,\n            setWatchList: setWatchList,\n            watchList: watchList\n          }, movie.imdbID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(NoData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n          totalPages: totalPages,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Subscribe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchPage, \"0NtOhNHgaVrRIdSSZLUW4s99nic=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/wamp64/www/Movie-react/src/Pages/SearchPage.jsx"],"names":["React","useEffect","useState","useParams","MovieCard","SubBanner","NoData","Subscribe","Pagination","SearchPage","currentPage","setCurrentPage","setWatchList","watchList","query","searchResults","setSearchResults","totalPages","setTotalPages","controller","AbortController","signal","fetch","then","res","json","data","Math","round","totalResults","Search","filter","movie","Poster","slice","abort","length","map","imdbID"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport MovieCard from '../Components/MovieCard';\r\nimport SubBanner from '../Components/SubBanner';\r\nimport NoData from '../Components/Search/noData';\r\nimport Subscribe from '../Components/Subscribe';\r\nimport Pagination from '../Components/Pagination';\r\n\r\nconst SearchPage = ({currentPage, setCurrentPage, setWatchList, watchList }) => {\r\n  const { query } = useParams();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n    fetch(\r\n      `https://omdbapi.com/?apikey=7b85d604&s=${query}&page=${currentPage}`,\r\n      {\r\n        signal: signal,\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTotalPages(Math.round(+data.totalResults / 10));\r\n        setSearchResults(\r\n          data.Search\r\n            ? data.Search.filter((movie) => movie.Poster !== 'N/A').slice(0, 8)\r\n            : []\r\n        );\r\n      });\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [query, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      <SubBanner title={'Search Results'} pathName={'Search'} />\r\n      <section className='results-sec'>\r\n        <div className='container'>\r\n          <div className='section-title'>\r\n            <h5 className='sub-title'>ONLINE STREAMING</h5>\r\n            <h2 className='title'>{query}'s Related Results</h2>\r\n          </div>\r\n          <div className='row movies-grid'>\r\n            {searchResults.length ? (\r\n              searchResults.map((movie) => (\r\n                <MovieCard movie={movie} key={movie.imdbID} setWatchList={setWatchList} watchList={watchList} />\r\n              ))\r\n            ) : (\r\n              <NoData />\r\n            )}\r\n          </div>\r\n          {\r\n            totalPages > 1 &&\r\n            (\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n              />\r\n            )\r\n          }\r\n        </div>\r\n      </section>\r\n      <Subscribe />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}