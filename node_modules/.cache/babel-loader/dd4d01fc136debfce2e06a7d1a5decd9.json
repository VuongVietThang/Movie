{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CTabsContext } from './CTabsContext.js';\nvar CTab = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      itemKey = _a.itemKey,\n      rest = __rest(_a, [\"children\", \"className\", \"itemKey\"]);\n\n  var _b = useContext(CTabsContext),\n      _activeItemKey = _b._activeItemKey,\n      setActiveItemKey = _b.setActiveItemKey,\n      id = _b.id;\n\n  var isActive = function () {\n    return itemKey === _activeItemKey;\n  };\n\n  return React.createElement(\"button\", __assign({\n    className: classNames('nav-link', {\n      active: isActive()\n    }, className),\n    id: \"\".concat(id).concat(itemKey, \"-tab\"),\n    onClick: function () {\n      return setActiveItemKey(itemKey);\n    },\n    onFocus: function () {\n      return setActiveItemKey(itemKey);\n    },\n    role: \"tab\",\n    tabIndex: isActive() ? 0 : -1,\n    type: \"button\",\n    \"aria-controls\": \"\".concat(id).concat(itemKey, \"-tab-pane\"),\n    \"aria-selected\": isActive(),\n    ref: ref\n  }, rest), children);\n});\nCTab.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n};\nCTab.displayName = 'CTab';\nexport { CTab };","map":{"version":3,"mappings":";;;;;IAqBaA,IAAI,GAAGC,UAAU,CAC5B,UAACC,EAAD,EAA4CC,GAA5C,EAA+C;AAA5C,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAqBC,OAAO,aAA5B;AAAA,MAAiCC,IAAI,GAAvCC,gDAAE;;AACK,QAA2C,aAAU,CAACC,YAAD,CAArD;AAAA,MAAEC,cAAc,oBAAhB;AAAA,MAAkBC,gBAAgB,sBAAlC;AAAA,MAAoCC,EAAE,QAAtC;;AAEN,MAAMC,QAAQ,GAAG,YAAM;AAAA,kBAAO,KAAKH,cAAZ;AAA0B,GAAjD;;AAEA,SACEI,KACE,cADF,CACE,QADF,EACEC;AAAAV,aAAS,EAAEW,UAAU,CACnB,UADmB,EAEnB;AACEC,YAAM,EAAEJ,QAAQ;AADlB,KAFmB,EAKnBR,SALmB,CAArB;AAOAO,MAAE,EAAE,GAAGM,MAAH,CAAGN,EAAH,EAAQM,MAAR,CAAQZ,OAAR,EAAe,MAAf,CAPJ;AAQAa,WAAO,EAAE;AAAM,6BAAgB,CAACb,OAAD,CAAhB;AAAyB,KARxC;AASAc,WAAO,EAAE,YAAM;AAAA,6BAAgB,CAACd,OAAD,CAAhB;AAAyB,KATxC;AAUAe,QAAI,EAAC,KAVL;AAWAC,YAAQ,EAAET,QAAQ,KAAK,CAAL,GAAS,EAX3B;AAYAU,QAAI,EAAC,QAZL;AAYa,qBACE,GAAGL,MAAH,CAAGN,EAAH,EAAKM,MAAL,CAAQZ,OAAR,EAAe,WAAf,CAbf;AAce,6BAAQ,EAdvB;AAeAF,OAAG,EAAEA;AAfL,KAgBIG,IAhBJ,CADF,EAmBGiB,QAnBH,CADF;AAuBD,CA7B2B;AAgC9BvB,IAAI,CAACwB,SAAL,GAAiB;AACfD,UAAQ,EAAEE,SAAS,CAACC,IADL;AAEftB,WAAS,EAAEqB,SAAS,CAACE,MAFN;AAGfC,UAAQ,EAAEH,SAAS,CAACI,IAHL;AAIfxB,SAAO,EAAEoB,SAAS,CAACK,SAAV,CAAoB,CAACL,SAAS,CAACM,MAAX,EAAmBN,SAAS,CAACE,MAA7B,CAApB,EAA0DK;AAJpD,CAAjB;AAOAhC,IAAI,CAACiC,WAAL,GAAmB,MAAnB","names":["CTab","forwardRef","_a","ref","className","itemKey","rest","__rest","CTabsContext","_activeItemKey","setActiveItemKey","id","isActive","React","__assign","classNames","active","concat","onClick","onFocus","role","tabIndex","type","children","propTypes","PropTypes","node","string","disabled","bool","oneOfType","number","isRequired","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\tabs\\CTab.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CTabsContext } from './CTabsContext'\n\nexport interface CTabProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Item key.\n   */\n  itemKey: number | string\n}\n\nexport const CTab = forwardRef<HTMLButtonElement, CTabProps>(\n  ({ children, className, itemKey, ...rest }, ref) => {\n    const { _activeItemKey, setActiveItemKey, id } = useContext(CTabsContext)\n\n    const isActive = () => itemKey === _activeItemKey\n\n    return (\n      <button\n        className={classNames(\n          'nav-link',\n          {\n            active: isActive(),\n          },\n          className,\n        )}\n        id={`${id}${itemKey}-tab`}\n        onClick={() => setActiveItemKey(itemKey)}\n        onFocus={() => setActiveItemKey(itemKey)}\n        role=\"tab\"\n        tabIndex={isActive() ? 0 : -1}\n        type=\"button\"\n        aria-controls={`${id}${itemKey}-tab-pane`}\n        aria-selected={isActive()}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </button>\n    )\n  },\n)\n\nCTab.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n}\n\nCTab.displayName = 'CTab'\n"]},"metadata":{},"sourceType":"module"}