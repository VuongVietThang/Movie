{"ast":null,"code":"import { useRef } from 'react';\nimport { createPopper } from '@popperjs/core';\n\nvar usePopper = function () {\n  var _popper = useRef(undefined);\n\n  var el = useRef(null);\n\n  var initPopper = function (reference, popper, options) {\n    _popper.current = createPopper(reference, popper, options);\n    el.current = popper;\n  };\n\n  var destroyPopper = function () {\n    var popperInstance = _popper.current;\n\n    if (popperInstance && el.current) {\n      popperInstance.destroy();\n    }\n\n    _popper.current = undefined;\n  };\n\n  var updatePopper = function (options) {\n    var popperInstance = _popper.current;\n\n    if (popperInstance && options) {\n      popperInstance.setOptions(options);\n    }\n\n    if (popperInstance) {\n      popperInstance.update();\n    }\n  };\n\n  return {\n    popper: _popper.current,\n    initPopper: initPopper,\n    destroyPopper: destroyPopper,\n    updatePopper: updatePopper\n  };\n};\n\nexport { usePopper };","map":{"version":3,"mappings":";;;AAWa,aAAS,GAAG;AACvB,MAAMA,OAAO,GAAGC,MAAM,CAAWC,SAAX,CAAtB;;AACA,MAAMC,EAAE,GAAGF,MAAM,CAAc,IAAd,CAAjB;;AAEA,MAAMG,UAAU,GAAG,UAACC,SAAD,EAAyBC,MAAzB,EAA8CC,OAA9C,EAAuE;AACxFP,WAAO,CAACQ,OAAR,GAAkBC,YAAY,CAACJ,SAAD,EAAYC,MAAZ,EAAoBC,OAApB,CAA9B;AACAJ,MAAE,CAACK,OAAH,GAAaF,MAAb;AACD,GAHD;;AAKA,MAAMI,aAAa,GAAG;AACpB,QAAMC,cAAc,GAAGX,OAAO,CAACQ,OAA/B;;AAEA,QAAIG,cAAc,IAAIR,EAAE,CAACK,OAAzB,EAAkC;AAChCG,oBAAc,CAACC,OAAf;;;AAGFZ,WAAO,CAACQ,OAAR,GAAkBN,SAAlB;AACD,GARD;;AAUA,MAAMW,YAAY,GAAG,UAACN,OAAD,EAA2B;AAC9C,QAAMI,cAAc,GAAGX,OAAO,CAACQ,OAA/B;;AAEA,QAAIG,cAAc,IAAIJ,OAAtB,EAA+B;AAC7BI,oBAAc,CAACG,UAAf,CAA0BP,OAA1B;;;AAGF,QAAII,cAAJ,EAAoB;AAClBA,oBAAc,CAACI,MAAf;;AAEH,GAVD;;AAYA,SAAO;AACLT,UAAM,EAAEN,OAAO,CAACQ,OADX;AAELJ,cAAU,YAFL;AAGLM,iBAAa,eAHR;AAILG,gBAAY;AAJP,GAAP;AAMF,CArCa","names":["_popper","useRef","undefined","el","initPopper","reference","popper","options","current","createPopper","destroyPopper","popperInstance","destroy","updatePopper","setOptions","update"],"sources":["C:\\wamp64\\www\\Movie-react\\node_modules\\@coreui\\react\\src\\hooks\\usePopper.ts"],"sourcesContent":["import { useRef } from 'react'\nimport { createPopper } from '@popperjs/core'\nimport type { Instance, Options } from '@popperjs/core'\n\ninterface UsePopperOutput {\n  popper: Instance | undefined\n  initPopper: (reference: HTMLElement, popper: HTMLElement, options: Partial<Options>) => void\n  destroyPopper: () => void\n  updatePopper: (options?: Partial<Options>) => void\n}\n\nexport const usePopper = (): UsePopperOutput => {\n  const _popper = useRef<Instance>(undefined)\n  const el = useRef<HTMLElement>(null)\n\n  const initPopper = (reference: HTMLElement, popper: HTMLElement, options: Partial<Options>) => {\n    _popper.current = createPopper(reference, popper, options)\n    el.current = popper\n  }\n\n  const destroyPopper = () => {\n    const popperInstance = _popper.current\n\n    if (popperInstance && el.current) {\n      popperInstance.destroy()\n    }\n\n    _popper.current = undefined\n  }\n\n  const updatePopper = (options?: Partial<Options>) => {\n    const popperInstance = _popper.current\n\n    if (popperInstance && options) {\n      popperInstance.setOptions(options)\n    }\n\n    if (popperInstance) {\n      popperInstance.update()\n    }\n  }\n\n  return {\n    popper: _popper.current,\n    initPopper,\n    destroyPopper,\n    updatePopper,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}