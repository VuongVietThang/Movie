{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'fluid'];\nvar CContainer = forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      rest = __rest(_a, [\"children\", \"className\"]);\n\n  var repsonsiveClassNames = [];\n  BREAKPOINTS.forEach(function (bp) {\n    var breakpoint = rest[bp];\n    delete rest[bp];\n    breakpoint && repsonsiveClassNames.push(\"container-\".concat(bp));\n  });\n  return React.createElement(\"div\", __assign({\n    className: classNames(repsonsiveClassNames.length > 0 ? repsonsiveClassNames : 'container', className)\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  sm: PropTypes.bool,\n  md: PropTypes.bool,\n  lg: PropTypes.bool,\n  xl: PropTypes.bool,\n  xxl: PropTypes.bool,\n  fluid: PropTypes.bool\n};\nCContainer.displayName = 'CContainer';\nexport { CContainer };","map":{"version":3,"mappings":";;;;AAmCA,IAAMA,WAAW,GAAG,CAClB,KADkB,EAElB,IAFkB,EAGlB,IAHkB,EAIlB,IAJkB,EAKlB,IALkB,EAMlB,OANkB,CAApB;IASaC,UAAU,GAAGC,UAAU,CAClC,UAACC,EAAD,EAAmCC,GAAnC,EAAsC;AAAnC,cAAQ,cAAR;AAAA,MAAUC,SAAS,eAAnB;AAAA,MAAwBC,IAAI,GAA9BC,qCAAE;;AACD,MAAMC,oBAAoB,GAAa,EAAvC;AAEAR,aAAW,CAACS,OAAZ,CAAoB,UAACC,EAAD,EAAG;AACrB,QAAMC,UAAU,GAAGL,IAAI,CAACI,EAAD,CAAvB;AACA,WAAOJ,IAAI,CAACI,EAAD,CAAX;AAEAC,cAAU,IAAIH,oBAAoB,CAACI,IAArB,CAA0B,aAAaC,MAAb,CAAaH,EAAb,CAA1B,CAAd;AACD,GALD;AAOA,SACEI;AACET,aAAS,EAAEU,UAAU,CACnBP,oBAAoB,CAACQ,MAArB,GAA8B,CAA9B,GAAkCR,oBAAlC,GAAyD,WADtC,EAEnBH,SAFmB;AADvB,KAKMC,IALN,EAKU;AACRF,OAAG,EAAEA;AADG,GALV,GAQGa,QARH,CADF;AAYD,CAvBiC;AA0BpChB,UAAU,CAACiB,SAAX,GAAuB;AACrBD,UAAQ,EAAEE,SAAS,CAACC,IADC;AAErBf,WAAS,EAAEc,SAAS,CAACE,MAFA;AAGrBC,IAAE,EAAEH,SAAS,CAACI,IAHO;AAIrBC,IAAE,EAAEL,SAAS,CAACI,IAJO;AAKrBE,IAAE,EAAEN,SAAS,CAACI,IALO;AAMrBG,IAAE,EAAEP,SAAS,CAACI,IANO;AAOrBI,KAAG,EAAER,SAAS,CAACI,IAPM;AAQrBK,OAAK,EAAET,SAAS,CAACI;AARI,CAAvB;AAWAtB,UAAU,CAAC4B,WAAX,GAAyB,YAAzB","names":["BREAKPOINTS","CContainer","forwardRef","_a","ref","className","rest","__rest","repsonsiveClassNames","forEach","bp","breakpoint","push","concat","React","classNames","length","children","propTypes","PropTypes","node","string","sm","bool","md","lg","xl","xxl","fluid","displayName"],"sources":["C:\\wamp64\\www\\Movie\\node_modules\\@coreui\\react\\src\\components\\grid\\CContainer.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CContainerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Set container 100% wide until small breakpoint.\n   */\n  sm?: boolean\n  /**\n   * Set container 100% wide until medium breakpoint.\n   */\n  md?: boolean\n  /**\n   * Set container 100% wide until large breakpoint.\n   */\n  lg?: boolean\n  /**\n   * Set container 100% wide until X-large breakpoint.\n   */\n  xl?: boolean\n  /**\n   * Set container 100% wide until XX-large breakpoint.\n   */\n  xxl?: boolean\n  /**\n   * Set container 100% wide, spanning the entire width of the viewport.\n   */\n  fluid?: boolean\n}\n\nconst BREAKPOINTS = [\n  'xxl' as const,\n  'xl' as const,\n  'lg' as const,\n  'md' as const,\n  'sm' as const,\n  'fluid' as const,\n]\n\nexport const CContainer = forwardRef<HTMLDivElement, CContainerProps>(\n  ({ children, className, ...rest }, ref) => {\n    const repsonsiveClassNames: string[] = []\n\n    BREAKPOINTS.forEach((bp) => {\n      const breakpoint = rest[bp]\n      delete rest[bp]\n\n      breakpoint && repsonsiveClassNames.push(`container-${bp}`)\n    })\n\n    return (\n      <div\n        className={classNames(\n          repsonsiveClassNames.length > 0 ? repsonsiveClassNames : 'container',\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  sm: PropTypes.bool,\n  md: PropTypes.bool,\n  lg: PropTypes.bool,\n  xl: PropTypes.bool,\n  xxl: PropTypes.bool,\n  fluid: PropTypes.bool,\n}\n\nCContainer.displayName = 'CContainer'\n"]},"metadata":{},"sourceType":"module"}