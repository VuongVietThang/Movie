{"ast":null,"code":"var _jsxFileName = \"/Users/thaiduy/Movie/src/Components/TopMovies/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TopMovies = () => {\n  _s();\n  const [filterCtg, setFilterCtg] = useState(null); // để lưu id\n\n  const [genres, setGenres] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [loadingGenres, setLoadingGenres] = useState(false);\n  const [loadingMovies, setLoadingMovies] = useState(true);\n  const API_BASE = \"http://localhost/Movie/backend/API\";\n  // Fetch genres khi component mount\n  useEffect(() => {\n    setLoadingGenres(true);\n    fetch(`${API_BASE}/genres.php`).then(res => res.json()).then(data => {\n      setGenres(data);\n      setLoadingGenres(false);\n    }).catch(() => {\n      setGenres([]);\n      setLoadingGenres(false);\n    });\n  }, []);\n\n  // Fetch movies khi filterCtg thay đổi\n  useEffect(() => {\n    setLoadingMovies(true);\n    let url = `${API_BASE}/movies.php`;\n    if (filterCtg) {\n      url += `?genre=${filterCtg}`;\n    }\n    fetch(url).then(res => res.json()).then(data => {\n      setTopMovies(data);\n      setLoadingMovies(false);\n    }).catch(() => {\n      setTopMovies([]);\n      setLoadingMovies(false);\n    });\n  }, [filterCtg]);\n\n  // const handleFilterCtg = (id) => {\n  //   setFilterCtg(id);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"new-sec top-rated-sec\",\n    id: \"movies\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"sub-title\",\n          children: \"ONLINE STREAMING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Top Rated Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns-div categories-btns\",\n        children: loadingGenres ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading genres...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: !filterCtg ? \"btn category-btn active\" : \"btn category-btn\",\n            onClick: () => setFilterCtg(null),\n            children: \"T\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filterCtg === genre.id ? \"btn category-btn active\" : \"btn category-btn\",\n            onClick: () => setFilterCtg(genre.id),\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row movies-grid\",\n        children: loadingMovies ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : topMovies.length > 0 ? topMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, movie.imdbID || movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TopMovies, \"H+QaKMy4HFPWJ0TXQbNQAk87s3k=\");\n_c = TopMovies;\nexport default TopMovies;\nvar _c;\n$RefreshReg$(_c, \"TopMovies\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","jsxDEV","_jsxDEV","Fragment","_Fragment","TopMovies","_s","filterCtg","setFilterCtg","genres","setGenres","topMovies","setTopMovies","loadingGenres","setLoadingGenres","loadingMovies","setLoadingMovies","API_BASE","fetch","then","res","json","data","catch","url","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","genre","name","length","movie","imdbID","_c","$RefreshReg$"],"sources":["/Users/thaiduy/Movie/src/Components/TopMovies/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./style.css\";\n\nconst TopMovies = () => {\n  const [filterCtg, setFilterCtg] = useState(null); // để lưu id\n\n  const [genres, setGenres] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [loadingGenres, setLoadingGenres] = useState(false);\n  const [loadingMovies, setLoadingMovies] = useState(true);\n  const API_BASE = \"http://localhost/Movie/backend/API\";\n  // Fetch genres khi component mount\n  useEffect(() => {\n    setLoadingGenres(true);\n    fetch(`${API_BASE}/genres.php`)\n      .then((res) => res.json())\n      .then((data) => {\n        setGenres(data);\n        setLoadingGenres(false);\n      })\n      .catch(() => {\n        setGenres([]);\n        setLoadingGenres(false);\n      });\n  }, []);\n\n  // Fetch movies khi filterCtg thay đổi\n  useEffect(() => {\n    setLoadingMovies(true);\n    let url = `${API_BASE}/movies.php`;\n    if (filterCtg) {\n      url += `?genre=${filterCtg}`;\n    }\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setTopMovies(data);\n        setLoadingMovies(false);\n      })\n      .catch(() => {\n        setTopMovies([]);\n        setLoadingMovies(false);\n      });\n  }, [filterCtg]);\n\n  // const handleFilterCtg = (id) => {\n  //   setFilterCtg(id);\n  // };\n\n  return (\n    <section className=\"new-sec top-rated-sec\" id=\"movies\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h5 className=\"sub-title\">ONLINE STREAMING</h5>\n          <h2 className=\"title\">Top Rated Movies</h2>\n        </div>\n\n        <div className=\"btns-div categories-btns\">\n          {loadingGenres ? (\n            <p>Loading genres...</p>\n          ) : (\n            <>\n              <button\n                className={\n                  !filterCtg ? \"btn category-btn active\" : \"btn category-btn\"\n                }\n                onClick={() => setFilterCtg(null)}\n              >\n                Tất cả\n              </button>\n              {genres.map((genre) => (\n                <button\n                  key={genre.id}\n                  className={\n                    filterCtg === genre.id\n                      ? \"btn category-btn active\"\n                      : \"btn category-btn\"\n                  }\n                  onClick={() => setFilterCtg(genre.id)}\n                >\n                  {genre.name}\n                </button>\n              ))}\n            </>\n          )}\n        </div>\n\n        <div className=\"row movies-grid\">\n          {loadingMovies ? (\n            <p>Loading movies...</p>\n          ) : topMovies.length > 0 ? (\n            topMovies.map((movie) => (\n              <MovieCard movie={movie} key={movie.imdbID || movie.id} />\n            ))\n          ) : (\n            <p>No movies found.</p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TopMovies;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}